{"hash":"990c53f64f106f914e211c85f852f9baa08817c3","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { ViewContainerRef, Component, Input, ViewChild, ChangeDetectionStrategy, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/forms';\nimport { FormsModule, NgControl, FormControl, ReactiveFormsModule } from '@angular/forms';\nimport * as i1$2 from 'ng2-completer';\nimport { Ng2CompleterModule } from 'ng2-completer';\nimport { Subject } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { skip, distinctUntilChanged, debounceTime, map, takeUntil } from 'rxjs/operators';\nimport { HttpParams } from '@angular/common/http';\n\n/**\r\n * Extending object that entered in first argument.\r\n *\r\n * Returns extended object or false if have no target object or incorrect type.\r\n *\r\n * If you wish to clone source object (without modify it), just use empty new\r\n * object as first argument, like this:\r\n *   deepExtend({}, yourObj_1, [yourObj_N]);\r\n */\r\nconst deepExtend = function (...objects) {\r\n    if (arguments.length < 1 || typeof arguments[0] !== 'object') {\r\n        return false;\r\n    }\r\n    if (arguments.length < 2) {\r\n        return arguments[0];\r\n    }\r\n    const target = arguments[0];\r\n    // convert arguments to array and cut off target object\r\n    const args = Array.prototype.slice.call(arguments, 1);\r\n    let val, src;\r\n    args.forEach((obj) => {\r\n        // skip argument if it is array or isn't object\r\n        if (typeof obj !== 'object' || Array.isArray(obj)) {\r\n            return;\r\n        }\r\n        Object.keys(obj).forEach(function (key) {\r\n            src = target[key]; // source value\r\n            val = obj[key]; // new value\r\n            // recursion prevention\r\n            if (val === target) {\r\n                return;\r\n                /**\r\n                 * if new value isn't object then just overwrite by new value\r\n                 * instead of extending.\r\n                 */\r\n            }\r\n            else if (typeof val !== 'object' || val === null) {\r\n                target[key] = val;\r\n                return;\r\n                // just clone arrays (and recursive clone objects inside)\r\n            }\r\n            else if (Array.isArray(val)) {\r\n                target[key] = cloneDeep(val);\r\n                return;\r\n                // overwrite by new value if source isn't object or array\r\n            }\r\n            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\r\n                target[key] = deepExtend({}, val);\r\n                return;\r\n                // source value and new value is objects both, extending...\r\n            }\r\n            else {\r\n                target[key] = deepExtend(src, val);\r\n                return;\r\n            }\r\n        });\r\n    });\r\n    return target;\r\n};\r\nclass Deferred {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n}\r\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\r\nfunction getDeepFromObject(object = {}, name, defaultValue) {\r\n    const keys = name.split('.');\r\n    // clone the object\r\n    let level = deepExtend({}, object);\r\n    keys.forEach((k) => {\r\n        if (level && typeof level[k] !== 'undefined') {\r\n            level = level[k];\r\n        }\r\n    });\r\n    return typeof level === 'undefined' ? defaultValue : level;\r\n}\r\nfunction getPageForRowIndex(index, perPage) {\r\n    // we need to add 1 to convert 0-based index to 1-based page number.\r\n    return Math.floor(index / perPage) + 1;\r\n}\n\nfunction prepareValue(value) { return value; }\r\nclass Cell {\r\n    constructor(value, row, column, dataSet) {\r\n        this.value = value;\r\n        this.row = row;\r\n        this.column = column;\r\n        this.dataSet = dataSet;\r\n        this.newValue = '';\r\n        this.newValue = value;\r\n    }\r\n    getColumn() {\r\n        return this.column;\r\n    }\r\n    getRow() {\r\n        return this.row;\r\n    }\r\n    getValue() {\r\n        const valid = this.column.getValuePrepareFunction() instanceof Function;\r\n        const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\r\n        return prepare.call(null, this.value, this.row.getData(), this);\r\n    }\r\n    setValue(value) {\r\n        this.newValue = value;\r\n    }\r\n    getId() {\r\n        return this.getColumn().id;\r\n    }\r\n    getTitle() {\r\n        return this.getColumn().title;\r\n    }\r\n    isEditable() {\r\n        if (this.getRow().index === -1) {\r\n            return this.getColumn().isAddable;\r\n        }\r\n        else {\r\n            return this.getColumn().isEditable;\r\n        }\r\n    }\r\n}\r\nCell.PREPARE = prepareValue;\n\nclass Row {\r\n    constructor(index, data, _dataSet) {\r\n        this.index = index;\r\n        this.data = data;\r\n        this._dataSet = _dataSet;\r\n        this.isSelected = false;\r\n        this.isInEditing = false;\r\n        this.cells = [];\r\n        this.process();\r\n    }\r\n    getCell(column) {\r\n        return this.cells.find(el => el.getColumn() === column);\r\n    }\r\n    getCells() {\r\n        return this.cells;\r\n    }\r\n    getData() {\r\n        return this.data;\r\n    }\r\n    getIsSelected() {\r\n        return this.isSelected;\r\n    }\r\n    getNewData() {\r\n        const values = Object.assign({}, this.data);\r\n        this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\r\n        return values;\r\n    }\r\n    setData(data) {\r\n        this.data = data;\r\n        this.process();\r\n    }\r\n    process() {\r\n        this.cells = [];\r\n        this._dataSet.getColumns().forEach((column) => {\r\n            const cell = this.createCell(column);\r\n            this.cells.push(cell);\r\n        });\r\n    }\r\n    createCell(column) {\r\n        const defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\r\n        const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\r\n        return new Cell(value, this, column, this._dataSet);\r\n    }\r\n}\n\nclass Column {\r\n    constructor(id, settings, dataSet) {\r\n        this.id = id;\r\n        this.settings = settings;\r\n        this.dataSet = dataSet;\r\n        this.title = '';\r\n        this.type = '';\r\n        this.class = '';\r\n        this.width = '';\r\n        this.hide = false;\r\n        this.isSortable = false;\r\n        this.isEditable = true;\r\n        this.isAddable = true;\r\n        this.isFilterable = false;\r\n        this.sortDirection = '';\r\n        this.defaultSortDirection = '';\r\n        this.editor = { type: '', config: {}, component: null };\r\n        this.filter = { type: '', config: {}, component: null };\r\n        this.renderComponent = null;\r\n        this.process();\r\n    }\r\n    getOnComponentInitFunction() {\r\n        return this.onComponentInitFunction;\r\n    }\r\n    getCompareFunction() {\r\n        return this.compareFunction;\r\n    }\r\n    getValuePrepareFunction() {\r\n        return this.valuePrepareFunction;\r\n    }\r\n    getFilterFunction() {\r\n        return this.filterFunction;\r\n    }\r\n    getConfig() {\r\n        return this.editor && this.editor.config;\r\n    }\r\n    getFilterType() {\r\n        return this.filter && this.filter.type;\r\n    }\r\n    getFilterConfig() {\r\n        return this.filter && this.filter.config;\r\n    }\r\n    process() {\r\n        this.title = this.settings['title'];\r\n        this.class = this.settings['class'];\r\n        this.width = this.settings['width'];\r\n        this.hide = !!this.settings['hide'];\r\n        this.type = this.prepareType();\r\n        this.editor = this.settings['editor'];\r\n        this.filter = this.settings['filter'];\r\n        this.renderComponent = this.settings['renderComponent'];\r\n        this.isFilterable = typeof this.settings['filter'] === 'undefined' ? true : !!this.settings['filter'];\r\n        this.defaultSortDirection = ['asc', 'desc']\r\n            .indexOf(this.settings['sortDirection']) !== -1 ? this.settings['sortDirection'] : '';\r\n        this.isSortable = typeof this.settings['sort'] === 'undefined' ? true : !!this.settings['sort'];\r\n        this.isEditable = typeof this.settings['editable'] === 'undefined' ? true : !!this.settings['editable'];\r\n        this.isAddable = typeof this.settings['addable'] === 'undefined' ? true : !!this.settings['addable'];\r\n        this.sortDirection = this.prepareSortDirection();\r\n        this.compareFunction = this.settings['compareFunction'];\r\n        this.valuePrepareFunction = this.settings['valuePrepareFunction'];\r\n        this.filterFunction = this.settings['filterFunction'];\r\n        this.onComponentInitFunction = this.settings['onComponentInitFunction'];\r\n    }\r\n    prepareType() {\r\n        return this.settings['type'] || this.determineType();\r\n    }\r\n    prepareSortDirection() {\r\n        return this.settings['sort'] === 'desc' ? 'desc' : 'asc';\r\n    }\r\n    determineType() {\r\n        // TODO: determine type by data\r\n        return 'text';\r\n    }\r\n}\n\nclass DataSet {\r\n    constructor(data = [], columnSettings) {\r\n        this.columnSettings = columnSettings;\r\n        this.data = [];\r\n        this.columns = [];\r\n        this.rows = [];\r\n        this.createColumns(columnSettings);\r\n        this.setData(data);\r\n        this.createNewRow();\r\n    }\r\n    setData(data) {\r\n        this.data = data;\r\n        this.createRows();\r\n    }\r\n    getColumns() {\r\n        return this.columns;\r\n    }\r\n    getRows() {\r\n        return this.rows;\r\n    }\r\n    getFirstRow() {\r\n        return this.rows[0];\r\n    }\r\n    getLastRow() {\r\n        return this.rows[this.rows.length - 1];\r\n    }\r\n    findRowByData(data) {\r\n        return this.rows.find((row) => row.getData() === data);\r\n    }\r\n    deselectAll() {\r\n        this.rows.forEach((row) => {\r\n            row.isSelected = false;\r\n        });\r\n        // we need to clear selectedRow field because no one row selected\r\n        this.selectedRow = undefined;\r\n    }\r\n    selectRow(row) {\r\n        const previousIsSelected = row.isSelected;\r\n        this.deselectAll();\r\n        row.isSelected = !previousIsSelected;\r\n        this.selectedRow = row;\r\n        return this.selectedRow;\r\n    }\r\n    multipleSelectRow(row) {\r\n        row.isSelected = !row.isSelected;\r\n        this.selectedRow = row;\r\n        return this.selectedRow;\r\n    }\r\n    selectPreviousRow() {\r\n        if (this.rows.length > 0) {\r\n            let index = this.selectedRow ? this.selectedRow.index : 0;\r\n            if (index > this.rows.length - 1) {\r\n                index = this.rows.length - 1;\r\n            }\r\n            this.selectRow(this.rows[index]);\r\n            return this.selectedRow;\r\n        }\r\n    }\r\n    selectFirstRow() {\r\n        if (this.rows.length > 0) {\r\n            this.selectRow(this.rows[0]);\r\n            return this.selectedRow;\r\n        }\r\n    }\r\n    selectLastRow() {\r\n        if (this.rows.length > 0) {\r\n            this.selectRow(this.rows[this.rows.length - 1]);\r\n            return this.selectedRow;\r\n        }\r\n    }\r\n    selectRowByIndex(index) {\r\n        const rowsLength = this.rows.length;\r\n        if (rowsLength === 0) {\r\n            return;\r\n        }\r\n        if (!index) {\r\n            this.selectFirstRow();\r\n            return this.selectedRow;\r\n        }\r\n        if (index > 0 && index < rowsLength) {\r\n            this.selectRow(this.rows[index]);\r\n            return this.selectedRow;\r\n        }\r\n        // we need to deselect all rows if we got an incorrect index\r\n        this.deselectAll();\r\n    }\r\n    willSelectFirstRow() {\r\n        this.willSelect = 'first';\r\n    }\r\n    willSelectLastRow() {\r\n        this.willSelect = 'last';\r\n    }\r\n    select(selectedRowIndex) {\r\n        if (this.getRows().length === 0) {\r\n            return;\r\n        }\r\n        if (this.willSelect) {\r\n            if (this.willSelect === 'first') {\r\n                this.selectFirstRow();\r\n            }\r\n            if (this.willSelect === 'last') {\r\n                this.selectLastRow();\r\n            }\r\n            this.willSelect = '';\r\n        }\r\n        else {\r\n            this.selectRowByIndex(selectedRowIndex);\r\n        }\r\n        return this.selectedRow;\r\n    }\r\n    createNewRow() {\r\n        this.newRow = new Row(-1, {}, this);\r\n        this.newRow.isInEditing = true;\r\n    }\r\n    /**\r\n     * Create columns by mapping from the settings\r\n     * @param settings\r\n     * @private\r\n     */\r\n    createColumns(settings) {\r\n        for (const id in settings) {\r\n            if (settings.hasOwnProperty(id)) {\r\n                this.columns.push(new Column(id, settings[id], this));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Create rows based on current data prepared in data source\r\n     * @private\r\n     */\r\n    createRows() {\r\n        this.rows = [];\r\n        this.data.forEach((el, index) => {\r\n            this.rows.push(new Row(index, el, this));\r\n        });\r\n    }\r\n}\n\nclass Grid {\r\n    constructor(source, settings) {\r\n        this.createFormShown = false;\r\n        this.onSelectRowSource = new Subject();\r\n        this.onDeselectRowSource = new Subject();\r\n        this.setSettings(settings);\r\n        this.setSource(source);\r\n    }\r\n    detach() {\r\n        if (this.sourceOnChangedSubscription) {\r\n            this.sourceOnChangedSubscription.unsubscribe();\r\n        }\r\n        if (this.sourceOnUpdatedSubscription) {\r\n            this.sourceOnUpdatedSubscription.unsubscribe();\r\n        }\r\n    }\r\n    showActionColumn(position) {\r\n        return this.isCurrentActionsPosition(position) && this.isActionsVisible();\r\n    }\r\n    isCurrentActionsPosition(position) {\r\n        return position == this.getSetting('actions.position');\r\n    }\r\n    isActionsVisible() {\r\n        return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\r\n    }\r\n    isMultiSelectVisible() {\r\n        return this.getSetting('selectMode') === 'multi';\r\n    }\r\n    getNewRow() {\r\n        return this.dataSet.newRow;\r\n    }\r\n    setSettings(settings) {\r\n        this.settings = settings;\r\n        this.dataSet = new DataSet([], this.getSetting('columns'));\r\n        if (this.source) {\r\n            this.source.refresh();\r\n        }\r\n    }\r\n    getDataSet() {\r\n        return this.dataSet;\r\n    }\r\n    setSource(source) {\r\n        this.source = this.prepareSource(source);\r\n        this.detach();\r\n        this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes) => this.processDataChange(changes));\r\n        this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data) => {\r\n            const changedRow = this.dataSet.findRowByData(data);\r\n            changedRow.setData(data);\r\n        });\r\n    }\r\n    getSetting(name, defaultValue) {\r\n        return getDeepFromObject(this.settings, name, defaultValue);\r\n    }\r\n    getColumns() {\r\n        return this.dataSet.getColumns();\r\n    }\r\n    getRows() {\r\n        return this.dataSet.getRows();\r\n    }\r\n    selectRow(row) {\r\n        this.dataSet.selectRow(row);\r\n    }\r\n    multipleSelectRow(row) {\r\n        this.dataSet.multipleSelectRow(row);\r\n    }\r\n    onSelectRow() {\r\n        return this.onSelectRowSource.asObservable();\r\n    }\r\n    onDeselectRow() {\r\n        return this.onDeselectRowSource.asObservable();\r\n    }\r\n    edit(row) {\r\n        row.isInEditing = true;\r\n    }\r\n    create(row, confirmEmitter) {\r\n        const deferred = new Deferred();\r\n        deferred.promise.then((newData) => {\r\n            newData = newData ? newData : row.getNewData();\r\n            if (deferred.resolve.skipAdd) {\r\n                this.createFormShown = false;\r\n            }\r\n            else {\r\n                this.source.prepend(newData).then(() => {\r\n                    this.createFormShown = false;\r\n                    this.dataSet.createNewRow();\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            // doing nothing\r\n        });\r\n        if (this.getSetting('add.confirmCreate')) {\r\n            confirmEmitter.emit({\r\n                newData: row.getNewData(),\r\n                source: this.source,\r\n                confirm: deferred,\r\n            });\r\n        }\r\n        else {\r\n            deferred.resolve();\r\n        }\r\n    }\r\n    save(row, confirmEmitter) {\r\n        const deferred = new Deferred();\r\n        deferred.promise.then((newData) => {\r\n            newData = newData ? newData : row.getNewData();\r\n            if (deferred.resolve.skipEdit) {\r\n                row.isInEditing = false;\r\n            }\r\n            else {\r\n                this.source.update(row.getData(), newData).then(() => {\r\n                    row.isInEditing = false;\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            // doing nothing\r\n        });\r\n        if (this.getSetting('edit.confirmSave')) {\r\n            confirmEmitter.emit({\r\n                data: row.getData(),\r\n                newData: row.getNewData(),\r\n                source: this.source,\r\n                confirm: deferred,\r\n            });\r\n        }\r\n        else {\r\n            deferred.resolve();\r\n        }\r\n    }\r\n    delete(row, confirmEmitter) {\r\n        const deferred = new Deferred();\r\n        deferred.promise.then(() => {\r\n            this.source.remove(row.getData());\r\n        }).catch((err) => {\r\n            // doing nothing\r\n        });\r\n        if (this.getSetting('delete.confirmDelete')) {\r\n            confirmEmitter.emit({\r\n                data: row.getData(),\r\n                source: this.source,\r\n                confirm: deferred,\r\n            });\r\n        }\r\n        else {\r\n            deferred.resolve();\r\n        }\r\n    }\r\n    processDataChange(changes) {\r\n        if (this.shouldProcessChange(changes)) {\r\n            this.dataSet.setData(changes['elements']);\r\n            if (this.getSetting('selectMode') !== 'multi') {\r\n                const row = this.determineRowToSelect(changes);\r\n                if (row) {\r\n                    this.onSelectRowSource.next(row);\r\n                }\r\n                else {\r\n                    this.onDeselectRowSource.next(null);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    shouldProcessChange(changes) {\r\n        if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes['action']) !== -1) {\r\n            return true;\r\n        }\r\n        else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @breaking-change 1.8.0\r\n     * Need to add `| null` in return type\r\n     *\r\n     * TODO: move to selectable? Separate directive\r\n     */\r\n    determineRowToSelect(changes) {\r\n        if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\r\n            return this.dataSet.select(this.getRowIndexToSelect());\r\n        }\r\n        if (this.shouldSkipSelection()) {\r\n            return null;\r\n        }\r\n        if (changes['action'] === 'remove') {\r\n            if (changes['elements'].length === 0) {\r\n                // we have to store which one to select as the data will be reloaded\r\n                this.dataSet.willSelectLastRow();\r\n            }\r\n            else {\r\n                return this.dataSet.selectPreviousRow();\r\n            }\r\n        }\r\n        if (changes['action'] === 'append') {\r\n            // we have to store which one to select as the data will be reloaded\r\n            this.dataSet.willSelectLastRow();\r\n        }\r\n        if (changes['action'] === 'add') {\r\n            return this.dataSet.selectFirstRow();\r\n        }\r\n        if (changes['action'] === 'update') {\r\n            return this.dataSet.selectFirstRow();\r\n        }\r\n        if (changes['action'] === 'prepend') {\r\n            // we have to store which one to select as the data will be reloaded\r\n            this.dataSet.willSelectFirstRow();\r\n        }\r\n        return null;\r\n    }\r\n    prepareSource(source) {\r\n        const initialSource = this.getInitialSort();\r\n        if (initialSource && initialSource['field'] && initialSource['direction']) {\r\n            source.setSort([initialSource], false);\r\n        }\r\n        if (this.getSetting('pager.display') === true) {\r\n            source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\r\n        }\r\n        source.refresh();\r\n        return source;\r\n    }\r\n    getInitialSort() {\r\n        const sortConf = {};\r\n        this.getColumns().forEach((column) => {\r\n            if (column.isSortable && column.defaultSortDirection) {\r\n                sortConf['field'] = column.id;\r\n                sortConf['direction'] = column.defaultSortDirection;\r\n                sortConf['compare'] = column.getCompareFunction();\r\n            }\r\n        });\r\n        return sortConf;\r\n    }\r\n    getSelectedRows() {\r\n        return this.dataSet.getRows()\r\n            .filter(r => r.isSelected);\r\n    }\r\n    selectAllRows(status) {\r\n        this.dataSet.getRows()\r\n            .forEach(r => r.isSelected = status);\r\n    }\r\n    getFirstRow() {\r\n        return this.dataSet.getFirstRow();\r\n    }\r\n    getLastRow() {\r\n        return this.dataSet.getLastRow();\r\n    }\r\n    getSelectionInfo() {\r\n        const switchPageToSelectedRowPage = this.getSetting('switchPageToSelectedRowPage');\r\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex', 0)) || 0;\r\n        const { perPage, page } = this.getSetting('pager');\r\n        return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\r\n    }\r\n    getRowIndexToSelect() {\r\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\r\n        const dataAmount = this.source.count();\r\n        /**\r\n         * source - contains all table data\r\n         * dataSet - contains data for current page\r\n         * selectedRowIndex - contains index for data in all data\r\n         *\r\n         * because of that, we need to count index for a specific row in page\r\n         * if\r\n         * `switchPageToSelectedRowPage` - we need to change page automatically\r\n         * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\r\n         * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\r\n         *  if we return index witch not points to existing data - no line will be highlighted)\r\n         */\r\n        return (switchPageToSelectedRowPage &&\r\n            selectedRowIndex < dataAmount &&\r\n            selectedRowIndex >= 0) ?\r\n            selectedRowIndex % perPage :\r\n            selectedRowIndex;\r\n    }\r\n    getPageToSelect(source) {\r\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\r\n        let pageToSelect = Math.max(1, page);\r\n        if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\r\n            pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\r\n        }\r\n        const maxPageAmount = Math.ceil(source.count() / perPage);\r\n        return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\r\n    }\r\n    shouldSkipSelection() {\r\n        /**\r\n         * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\r\n         *\r\n         * Therefore, in order to select a row after some changes,\r\n         * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\r\n         *\r\n         * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\r\n         *\r\n         * !!! We should skip a row only in cases when `selectedRowIndex` < 0\r\n         * because when < 0 all lines must be deselected\r\n         */\r\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\r\n        return selectedRowIndex < 0;\r\n    }\r\n}\n\nconst _c0$c = [\"dynamicTarget\"];\r\nfunction CustomViewComponent_ng_template_0_Template(rf, ctx) { }\r\nclass CustomViewComponent {\r\n    constructor(resolver) {\r\n        this.resolver = resolver;\r\n    }\r\n    ngOnInit() {\r\n        if (this.cell && !this.customComponent) {\r\n            this.createCustomComponent();\r\n            this.callOnComponentInit();\r\n            this.patchInstance();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.customComponent) {\r\n            this.customComponent.destroy();\r\n        }\r\n    }\r\n    createCustomComponent() {\r\n        const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\r\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n    }\r\n    callOnComponentInit() {\r\n        const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\r\n        onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\r\n    }\r\n    patchInstance() {\r\n        Object.assign(this.customComponent.instance, this.getPatch());\r\n    }\r\n    getPatch() {\r\n        return {\r\n            value: this.cell.getValue(),\r\n            rowData: this.cell.getRow().getData()\r\n        };\r\n    }\r\n}\r\nCustomViewComponent.ɵfac = function CustomViewComponent_Factory(t) { return new (t || CustomViewComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\r\nCustomViewComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomViewComponent, selectors: [[\"custom-view-component\"]], viewQuery: function CustomViewComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0$c, 7, ViewContainerRef);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\r\n    } }, inputs: { cell: \"cell\" }, decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomViewComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, CustomViewComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\r\n    } }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomViewComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'custom-view-component',\r\n                template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n            }]\r\n    }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { cell: [{\r\n            type: Input\r\n        }], dynamicTarget: [{\r\n            type: ViewChild,\r\n            args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\r\n        }] }); })();\n\nfunction ViewCellComponent_custom_view_component_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"custom-view-component\", 4);\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell);\r\n} }\r\nfunction ViewCellComponent_div_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"div\", 5);\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.cell.getValue(), i0.ɵɵsanitizeHtml);\r\n} }\r\nfunction ViewCellComponent_div_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(ctx_r2.cell.getValue());\r\n} }\r\nclass ViewCellComponent {\r\n}\r\nViewCellComponent.ɵfac = function ViewCellComponent_Factory(t) { return new (t || ViewCellComponent)(); };\r\nViewCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ViewCellComponent, selectors: [[\"table-cell-view-mode\"]], inputs: { cell: \"cell\" }, decls: 4, vars: 3, consts: [[3, \"ngSwitch\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"innerHTML\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"cell\"], [3, \"innerHTML\"]], template: function ViewCellComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0);\r\n        i0.ɵɵtemplate(1, ViewCellComponent_custom_view_component_1_Template, 1, 1, \"custom-view-component\", 1);\r\n        i0.ɵɵtemplate(2, ViewCellComponent_div_2_Template, 1, 1, \"div\", 2);\r\n        i0.ɵɵtemplate(3, ViewCellComponent_div_3_Template, 2, 1, \"div\", 3);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngSwitch\", ctx.cell.getColumn().type);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngSwitchCase\", \"html\");\r\n    } }, directives: [i1.NgSwitch, i1.NgSwitchCase, CustomViewComponent, i1.NgSwitchDefault], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewCellComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'table-cell-view-mode',\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                template: `\r\n    <div [ngSwitch]=\"cell.getColumn().type\">\r\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\r\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\r\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\r\n    </div>\r\n    `,\r\n            }]\r\n    }], null, { cell: [{\r\n            type: Input\r\n        }] }); })();\n\nclass EditCellDefault {\r\n    constructor() {\r\n        this.inputClass = '';\r\n        this.edited = new EventEmitter();\r\n    }\r\n    onEdited(event) {\r\n        this.edited.next(event);\r\n        return false;\r\n    }\r\n    onStopEditing() {\r\n        this.cell.getRow().isInEditing = false;\r\n        return false;\r\n    }\r\n    onClick(event) {\r\n        event.stopPropagation();\r\n    }\r\n}\r\nEditCellDefault.ɵfac = function EditCellDefault_Factory(t) { return new (t || EditCellDefault)(); };\r\nEditCellDefault.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditCellDefault, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, decls: 0, vars: 0, template: function EditCellDefault_Template(rf, ctx) { }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellDefault, [{\r\n        type: Component,\r\n        args: [{\r\n                template: ''\r\n            }]\r\n    }], null, { cell: [{\r\n            type: Input\r\n        }], inputClass: [{\r\n            type: Input\r\n        }], edited: [{\r\n            type: Output\r\n        }] }); })();\n\nconst _c0$b = [\"dynamicTarget\"];\r\nfunction CustomEditComponent_ng_template_0_Template(rf, ctx) { }\r\nclass CustomEditComponent extends EditCellDefault {\r\n    constructor(resolver) {\r\n        super();\r\n        this.resolver = resolver;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.cell && !this.customComponent) {\r\n            const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\r\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n            // set @Inputs and @Outputs of custom component\r\n            this.customComponent.instance.cell = this.cell;\r\n            this.customComponent.instance.inputClass = this.inputClass;\r\n            this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\r\n            this.customComponent.instance.onEdited.subscribe((event) => this.onEdited(event));\r\n            this.customComponent.instance.onClick.subscribe((event) => this.onClick(event));\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.customComponent) {\r\n            this.customComponent.destroy();\r\n        }\r\n    }\r\n}\r\nCustomEditComponent.ɵfac = function CustomEditComponent_Factory(t) { return new (t || CustomEditComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\r\nCustomEditComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomEditComponent, selectors: [[\"table-cell-custom-editor\"]], viewQuery: function CustomEditComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0$b, 7, ViewContainerRef);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\r\n    } }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomEditComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, CustomEditComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\r\n    } }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomEditComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'table-cell-custom-editor',\r\n                template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n            }]\r\n    }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { dynamicTarget: [{\r\n            type: ViewChild,\r\n            args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\r\n        }] }); })();\n\nclass DefaultEditor {\r\n    constructor() {\r\n        this.onStopEditing = new EventEmitter();\r\n        this.onEdited = new EventEmitter();\r\n        this.onClick = new EventEmitter();\r\n    }\r\n}\r\nDefaultEditor.ɵfac = function DefaultEditor_Factory(t) { return new (t || DefaultEditor)(); };\r\nDefaultEditor.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultEditor, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { onStopEditing: \"onStopEditing\", onEdited: \"onEdited\", onClick: \"onClick\" }, decls: 0, vars: 0, template: function DefaultEditor_Template(rf, ctx) { }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditor, [{\r\n        type: Component,\r\n        args: [{\r\n                template: '',\r\n            }]\r\n    }], null, { cell: [{\r\n            type: Input\r\n        }], inputClass: [{\r\n            type: Input\r\n        }], onStopEditing: [{\r\n            type: Output\r\n        }], onEdited: [{\r\n            type: Output\r\n        }], onClick: [{\r\n            type: Output\r\n        }] }); })();\n\nfunction SelectEditorComponent_option_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"option\", 2);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const option_r1 = ctx.$implicit;\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"value\", option_r1.value)(\"selected\", option_r1.value === ctx_r0.cell.getValue());\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\"\", option_r1.title, \" \");\r\n} }\r\nclass SelectEditorComponent extends DefaultEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\nSelectEditorComponent.ɵfac = function SelectEditorComponent_Factory(t) { return new (t || SelectEditorComponent)(); };\r\nSelectEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectEditorComponent, selectors: [[\"select-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]], template: function SelectEditorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"select\", 0);\r\n        i0.ɵɵlistener(\"ngModelChange\", function SelectEditorComponent_Template_select_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function SelectEditorComponent_Template_select_click_0_listener($event) { return ctx.onClick.emit($event); })(\"keydown.enter\", function SelectEditorComponent_Template_select_keydown_enter_0_listener($event) { return ctx.onEdited.emit($event); })(\"keydown.esc\", function SelectEditorComponent_Template_select_keydown_esc_0_listener() { return ctx.onStopEditing.emit(); });\r\n        i0.ɵɵtemplate(1, SelectEditorComponent_option_1_Template, 2, 3, \"option\", 1);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        let tmp_4_0;\r\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable());\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", (tmp_4_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_4_0.list);\r\n    } }, directives: [i1$1.SelectControlValueAccessor, i1.NgClass, i1$1.NgControlStatus, i1$1.NgModel, i1.NgForOf, i1$1.NgSelectOption, i1$1.ɵNgSelectMultipleOption], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectEditorComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'select-editor',\r\n                template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"cell.newValue\"\r\n            [name]=\"cell.getId()\"\r\n            [disabled]=\"!cell.isEditable()\"\r\n            (click)=\"onClick.emit($event)\"\r\n            (keydown.enter)=\"onEdited.emit($event)\"\r\n            (keydown.esc)=\"onStopEditing.emit()\">\r\n\r\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\r\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\r\n        </option>\r\n    </select>\r\n    `,\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass TextareaEditorComponent extends DefaultEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\nTextareaEditorComponent.ɵfac = function TextareaEditorComponent_Factory(t) { return new (t || TextareaEditorComponent)(); };\r\nTextareaEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TextareaEditorComponent, selectors: [[\"textarea-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"placeholder\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function TextareaEditorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"textarea\", 0);\r\n        i0.ɵɵlistener(\"ngModelChange\", function TextareaEditorComponent_Template_textarea_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function TextareaEditorComponent_Template_textarea_click_0_listener($event) { return ctx.onClick.emit($event); })(\"keydown.enter\", function TextareaEditorComponent_Template_textarea_keydown_enter_0_listener($event) { return ctx.onEdited.emit($event); })(\"keydown.esc\", function TextareaEditorComponent_Template_textarea_keydown_esc_0_listener() { return ctx.onStopEditing.emit(); });\r\n        i0.ɵɵtext(1, \"    \");\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"placeholder\", ctx.cell.getTitle());\r\n    } }, directives: [i1$1.DefaultValueAccessor, i1.NgClass, i1$1.NgControlStatus, i1$1.NgModel], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextareaEditorComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'textarea-editor', template: `\r\n    <textarea [ngClass]=\"inputClass\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"cell.newValue\"\r\n              [name]=\"cell.getId()\"\r\n              [disabled]=\"!cell.isEditable()\"\r\n              [placeholder]=\"cell.getTitle()\"\r\n              (click)=\"onClick.emit($event)\"\r\n              (keydown.enter)=\"onEdited.emit($event)\"\r\n              (keydown.esc)=\"onStopEditing.emit()\">\r\n    </textarea>\r\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\r\n    }], function () { return []; }, null); })();\n\nclass CheckboxEditorComponent extends DefaultEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onChange(event) {\r\n        const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\r\n        const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\r\n        this.cell.newValue = event.target.checked ? trueVal : falseVal;\r\n    }\r\n}\r\nCheckboxEditorComponent.ɵfac = function CheckboxEditorComponent_Factory(t) { return new (t || CheckboxEditorComponent)(); };\r\nCheckboxEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxEditorComponent, selectors: [[\"checkbox-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 4, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngClass\", \"name\", \"disabled\", \"checked\", \"click\", \"change\"]], template: function CheckboxEditorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"input\", 0);\r\n        i0.ɵɵlistener(\"click\", function CheckboxEditorComponent_Template_input_click_0_listener($event) { return ctx.onClick.emit($event); })(\"change\", function CheckboxEditorComponent_Template_input_change_0_listener($event) { return ctx.onChange($event); });\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        let tmp_3_0;\r\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"checked\", ctx.cell.getValue() == (((tmp_3_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_3_0.true) || true));\r\n    } }, directives: [i1.NgClass], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxEditorComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'checkbox-editor', template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           type=\"checkbox\"\r\n           class=\"form-control\"\r\n           [name]=\"cell.getId()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (change)=\"onChange($event)\">\r\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\r\n    }], function () { return []; }, null); })();\n\nclass CompleterEditorComponent extends DefaultEditor {\r\n    constructor(completerService) {\r\n        super();\r\n        this.completerService = completerService;\r\n        this.completerStr = '';\r\n    }\r\n    ngOnInit() {\r\n        if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\r\n            const config = this.cell.getColumn().getConfig().completer;\r\n            config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n            config.dataService.descriptionField(config.descriptionField);\r\n        }\r\n    }\r\n    onEditedCompleter(event) {\r\n        this.cell.newValue = event.title;\r\n        return false;\r\n    }\r\n}\r\nCompleterEditorComponent.ɵfac = function CompleterEditorComponent_Factory(t) { return new (t || CompleterEditorComponent)(i0.ɵɵdirectiveInject(i1$2.CompleterService)); };\r\nCompleterEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CompleterEditorComponent, selectors: [[\"completer-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterEditorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"ng2-completer\", 0);\r\n        i0.ɵɵlistener(\"ngModelChange\", function CompleterEditorComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.completerStr = $event; })(\"selected\", function CompleterEditorComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.onEditedCompleter($event); });\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngModel\", ctx.completerStr)(\"dataService\", ctx.cell.getColumn().getConfig().completer.dataService)(\"minSearchLength\", ctx.cell.getColumn().getConfig().completer.minSearchLength || 0)(\"pause\", ctx.cell.getColumn().getConfig().completer.pause || 0)(\"placeholder\", ctx.cell.getColumn().getConfig().completer.placeholder || \"Start typing...\");\r\n    } }, directives: [i1$2.CompleterCmp, i1$1.NgControlStatus, i1$1.NgModel], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterEditorComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'completer-editor',\r\n                template: `\r\n    <ng2-completer [(ngModel)]=\"completerStr\"\r\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\r\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\r\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"onEditedCompleter($event)\">\r\n    </ng2-completer>\r\n    `,\r\n            }]\r\n    }], function () { return [{ type: i1$2.CompleterService }]; }, null); })();\n\nclass InputEditorComponent extends DefaultEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\nInputEditorComponent.ɵfac = function InputEditorComponent_Factory(t) { return new (t || InputEditorComponent)(); };\r\nInputEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputEditorComponent, selectors: [[\"input-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"placeholder\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function InputEditorComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"input\", 0);\r\n        i0.ɵɵlistener(\"ngModelChange\", function InputEditorComponent_Template_input_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function InputEditorComponent_Template_input_click_0_listener($event) { return ctx.onClick.emit($event); })(\"keydown.enter\", function InputEditorComponent_Template_input_keydown_enter_0_listener($event) { return ctx.onEdited.emit($event); })(\"keydown.esc\", function InputEditorComponent_Template_input_keydown_esc_0_listener() { return ctx.onStopEditing.emit(); });\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"placeholder\", ctx.cell.getTitle())(\"disabled\", !ctx.cell.isEditable());\r\n    } }, directives: [i1$1.DefaultValueAccessor, i1.NgClass, i1$1.NgControlStatus, i1$1.NgModel], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputEditorComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'input-editor', template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           class=\"form-control\"\r\n           [(ngModel)]=\"cell.newValue\"\r\n           [name]=\"cell.getId()\"\r\n           [placeholder]=\"cell.getTitle()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (keydown.enter)=\"onEdited.emit($event)\"\r\n           (keydown.esc)=\"onStopEditing.emit()\">\r\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\r\n    }], function () { return []; }, null); })();\n\nfunction DefaultEditComponent_select_editor_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r6 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"select-editor\", 5);\r\n    i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_select_editor_1_Template_select_editor_onClick_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.onClick($event); })(\"onEdited\", function DefaultEditComponent_select_editor_1_Template_select_editor_onEdited_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.onEdited($event); })(\"onStopEditing\", function DefaultEditComponent_select_editor_1_Template_select_editor_onStopEditing_0_listener() { i0.ɵɵrestoreView(_r6); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.onStopEditing(); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\r\n} }\r\nfunction DefaultEditComponent_textarea_editor_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r10 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"textarea-editor\", 5);\r\n    i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onClick_0_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.onClick($event); })(\"onEdited\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onEdited_0_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.onEdited($event); })(\"onStopEditing\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onStopEditing_0_listener() { i0.ɵɵrestoreView(_r10); const ctx_r12 = i0.ɵɵnextContext(); return ctx_r12.onStopEditing(); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\r\n} }\r\nfunction DefaultEditComponent_checkbox_editor_3_Template(rf, ctx) { if (rf & 1) {\r\n    const _r14 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"checkbox-editor\", 6);\r\n    i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_checkbox_editor_3_Template_checkbox_editor_onClick_0_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(); return ctx_r13.onClick($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"cell\", ctx_r2.cell)(\"inputClass\", ctx_r2.inputClass);\r\n} }\r\nfunction DefaultEditComponent_completer_editor_4_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"completer-editor\", 7);\r\n} if (rf & 2) {\r\n    const ctx_r3 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"cell\", ctx_r3.cell);\r\n} }\r\nfunction DefaultEditComponent_input_editor_5_Template(rf, ctx) { if (rf & 1) {\r\n    const _r16 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"input-editor\", 5);\r\n    i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_input_editor_5_Template_input_editor_onClick_0_listener($event) { i0.ɵɵrestoreView(_r16); const ctx_r15 = i0.ɵɵnextContext(); return ctx_r15.onClick($event); })(\"onEdited\", function DefaultEditComponent_input_editor_5_Template_input_editor_onEdited_0_listener($event) { i0.ɵɵrestoreView(_r16); const ctx_r17 = i0.ɵɵnextContext(); return ctx_r17.onEdited($event); })(\"onStopEditing\", function DefaultEditComponent_input_editor_5_Template_input_editor_onStopEditing_0_listener() { i0.ɵɵrestoreView(_r16); const ctx_r18 = i0.ɵɵnextContext(); return ctx_r18.onStopEditing(); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r4 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"cell\", ctx_r4.cell)(\"inputClass\", ctx_r4.inputClass);\r\n} }\r\nclass DefaultEditComponent extends EditCellDefault {\r\n    constructor() {\r\n        super();\r\n    }\r\n    getEditorType() {\r\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n    }\r\n}\r\nDefaultEditComponent.ɵfac = function DefaultEditComponent_Factory(t) { return new (t || DefaultEditComponent)(); };\r\nDefaultEditComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultEditComponent, selectors: [[\"table-cell-default-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 6, vars: 5, consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"onClick\", 4, \"ngSwitchCase\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\"], [3, \"cell\", \"inputClass\", \"onClick\"], [3, \"cell\"]], template: function DefaultEditComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0);\r\n        i0.ɵɵtemplate(1, DefaultEditComponent_select_editor_1_Template, 1, 2, \"select-editor\", 1);\r\n        i0.ɵɵtemplate(2, DefaultEditComponent_textarea_editor_2_Template, 1, 2, \"textarea-editor\", 1);\r\n        i0.ɵɵtemplate(3, DefaultEditComponent_checkbox_editor_3_Template, 1, 2, \"checkbox-editor\", 2);\r\n        i0.ɵɵtemplate(4, DefaultEditComponent_completer_editor_4_Template, 1, 1, \"completer-editor\", 3);\r\n        i0.ɵɵtemplate(5, DefaultEditComponent_input_editor_5_Template, 1, 2, \"input-editor\", 4);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngSwitchCase\", \"textarea\");\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\r\n    } }, directives: [i1.NgSwitch, i1.NgSwitchCase, SelectEditorComponent, TextareaEditorComponent, CheckboxEditorComponent, CompleterEditorComponent, i1.NgSwitchDefault, InputEditorComponent], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'table-cell-default-editor', template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\r\\n    <select-editor *ngSwitchCase=\\\"'list'\\\"\\r\\n                   [cell]=\\\"cell\\\"\\r\\n                   [inputClass]=\\\"inputClass\\\"\\r\\n                   (onClick)=\\\"onClick($event)\\\"\\r\\n                   (onEdited)=\\\"onEdited($event)\\\"\\r\\n                   (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </select-editor>\\r\\n\\r\\n    <textarea-editor *ngSwitchCase=\\\"'textarea'\\\"\\r\\n                     [cell]=\\\"cell\\\"\\r\\n                     [inputClass]=\\\"inputClass\\\"\\r\\n                     (onClick)=\\\"onClick($event)\\\"\\r\\n                     (onEdited)=\\\"onEdited($event)\\\"\\r\\n                     (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </textarea-editor>\\r\\n\\r\\n    <checkbox-editor *ngSwitchCase=\\\"'checkbox'\\\"\\r\\n                     [cell]=\\\"cell\\\"\\r\\n                     [inputClass]=\\\"inputClass\\\"\\r\\n                     (onClick)=\\\"onClick($event)\\\">\\r\\n    </checkbox-editor>\\r\\n\\r\\n    <completer-editor *ngSwitchCase=\\\"'completer'\\\"\\r\\n                      [cell]=\\\"cell\\\">\\r\\n    </completer-editor>\\r\\n\\r\\n    <input-editor *ngSwitchDefault\\r\\n                  [cell]=\\\"cell\\\"\\r\\n                  [inputClass]=\\\"inputClass\\\"\\r\\n                  (onClick)=\\\"onClick($event)\\\"\\r\\n                  (onEdited)=\\\"onEdited($event)\\\"\\r\\n                  (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </input-editor>\\r\\n</div>\" }]\r\n    }], function () { return []; }, null); })();\n\nfunction EditCellComponent_table_cell_custom_editor_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r3 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"table-cell-custom-editor\", 3);\r\n    i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_custom_editor_1_Template_table_cell_custom_editor_edited_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.onEdited($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\r\n} }\r\nfunction EditCellComponent_table_cell_default_editor_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r5 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"table-cell-default-editor\", 3);\r\n    i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_default_editor_2_Template_table_cell_default_editor_edited_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onEdited($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\r\n} }\r\nclass EditCellComponent {\r\n    constructor() {\r\n        this.inputClass = '';\r\n        this.edited = new EventEmitter();\r\n    }\r\n    onEdited(event) {\r\n        this.edited.next(event);\r\n        return false;\r\n    }\r\n    getEditorType() {\r\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n    }\r\n}\r\nEditCellComponent.ɵfac = function EditCellComponent_Factory(t) { return new (t || EditCellComponent)(); };\r\nEditCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditCellComponent, selectors: [[\"table-cell-edit-mode\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, decls: 3, vars: 2, consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function EditCellComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0);\r\n        i0.ɵɵtemplate(1, EditCellComponent_table_cell_custom_editor_1_Template, 1, 2, \"table-cell-custom-editor\", 1);\r\n        i0.ɵɵtemplate(2, EditCellComponent_table_cell_default_editor_2_Template, 1, 2, \"table-cell-default-editor\", 2);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\r\n    } }, directives: [i1.NgSwitch, i1.NgSwitchCase, CustomEditComponent, i1.NgSwitchDefault, DefaultEditComponent], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'table-cell-edit-mode',\r\n                template: `\r\n      <div [ngSwitch]=\"getEditorType()\">\r\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-custom-editor>\r\n        <table-cell-default-editor *ngSwitchDefault\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-default-editor>\r\n      </div>\r\n    `,\r\n            }]\r\n    }], null, { cell: [{\r\n            type: Input\r\n        }], inputClass: [{\r\n            type: Input\r\n        }], edited: [{\r\n            type: Output\r\n        }] }); })();\n\nfunction CellComponent_table_cell_view_mode_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"table-cell-view-mode\", 2);\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell);\r\n} }\r\nfunction CellComponent_table_cell_edit_mode_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r3 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"table-cell-edit-mode\", 3);\r\n    i0.ɵɵlistener(\"edited\", function CellComponent_table_cell_edit_mode_1_Template_table_cell_edit_mode_edited_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.onEdited($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\r\n} }\r\nclass CellComponent {\r\n    constructor() {\r\n        this.inputClass = '';\r\n        this.mode = 'inline';\r\n        this.isInEditing = false;\r\n        this.edited = new EventEmitter();\r\n    }\r\n    onEdited(event) {\r\n        if (this.isNew) {\r\n            this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n        }\r\n        else {\r\n            this.grid.save(this.row, this.editConfirm);\r\n        }\r\n    }\r\n}\r\nCellComponent.ɵfac = function CellComponent_Factory(t) { return new (t || CellComponent)(); };\r\nCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CellComponent, selectors: [[\"ng2-smart-table-cell\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", isNew: \"isNew\", cell: \"cell\", inputClass: \"inputClass\", mode: \"mode\", isInEditing: \"isInEditing\" }, outputs: { edited: \"edited\" }, decls: 2, vars: 2, consts: [[3, \"cell\", 4, \"ngIf\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngIf\"], [3, \"cell\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function CellComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, CellComponent_table_cell_view_mode_0_Template, 1, 1, \"table-cell-view-mode\", 0);\r\n        i0.ɵɵtemplate(1, CellComponent_table_cell_edit_mode_1_Template, 1, 2, \"table-cell-edit-mode\", 1);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", !ctx.isInEditing);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isInEditing);\r\n    } }, directives: [i1.NgIf, ViewCellComponent, EditCellComponent], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'ng2-smart-table-cell',\r\n                template: `\r\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\r\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\r\n                          [inputClass]=\"inputClass\"\r\n                          (edited)=\"onEdited($event)\">\r\n    </table-cell-edit-mode>\r\n  `,\r\n            }]\r\n    }], null, { grid: [{\r\n            type: Input\r\n        }], row: [{\r\n            type: Input\r\n        }], editConfirm: [{\r\n            type: Input\r\n        }], createConfirm: [{\r\n            type: Input\r\n        }], isNew: [{\r\n            type: Input\r\n        }], cell: [{\r\n            type: Input\r\n        }], inputClass: [{\r\n            type: Input\r\n        }], mode: [{\r\n            type: Input\r\n        }], isInEditing: [{\r\n            type: Input\r\n        }], edited: [{\r\n            type: Output\r\n        }] }); })();\n\nconst CELL_COMPONENTS = [\r\n    CellComponent,\r\n    EditCellDefault,\r\n    DefaultEditor,\r\n    CustomEditComponent,\r\n    DefaultEditComponent,\r\n    EditCellComponent,\r\n    CheckboxEditorComponent,\r\n    CompleterEditorComponent,\r\n    InputEditorComponent,\r\n    SelectEditorComponent,\r\n    TextareaEditorComponent,\r\n    CustomViewComponent,\r\n    ViewCellComponent,\r\n];\r\nclass CellModule {\r\n}\r\nCellModule.ɵfac = function CellModule_Factory(t) { return new (t || CellModule)(); };\r\nCellModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CellModule });\r\nCellModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            Ng2CompleterModule,\r\n        ]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    CommonModule,\r\n                    FormsModule,\r\n                    Ng2CompleterModule,\r\n                ],\r\n                declarations: [\r\n                    ...CELL_COMPONENTS,\r\n                ],\r\n                exports: [\r\n                    ...CELL_COMPONENTS,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CellModule, { declarations: [CellComponent,\r\n        EditCellDefault,\r\n        DefaultEditor,\r\n        CustomEditComponent,\r\n        DefaultEditComponent,\r\n        EditCellComponent,\r\n        CheckboxEditorComponent,\r\n        CompleterEditorComponent,\r\n        InputEditorComponent,\r\n        SelectEditorComponent,\r\n        TextareaEditorComponent,\r\n        CustomViewComponent,\r\n        ViewCellComponent], imports: [CommonModule,\r\n        FormsModule,\r\n        Ng2CompleterModule], exports: [CellComponent,\r\n        EditCellDefault,\r\n        DefaultEditor,\r\n        CustomEditComponent,\r\n        DefaultEditComponent,\r\n        EditCellComponent,\r\n        CheckboxEditorComponent,\r\n        CompleterEditorComponent,\r\n        InputEditorComponent,\r\n        SelectEditorComponent,\r\n        TextareaEditorComponent,\r\n        CustomViewComponent,\r\n        ViewCellComponent] }); })();\n\nclass DataSource {\r\n    constructor() {\r\n        this.onChangedSource = new Subject();\r\n        this.onAddedSource = new Subject();\r\n        this.onUpdatedSource = new Subject();\r\n        this.onRemovedSource = new Subject();\r\n    }\r\n    refresh() {\r\n        this.emitOnChanged('refresh');\r\n    }\r\n    load(data) {\r\n        this.emitOnChanged('load');\r\n        return Promise.resolve();\r\n    }\r\n    onChanged() {\r\n        return this.onChangedSource.asObservable();\r\n    }\r\n    onAdded() {\r\n        return this.onAddedSource.asObservable();\r\n    }\r\n    onUpdated() {\r\n        return this.onUpdatedSource.asObservable();\r\n    }\r\n    onRemoved() {\r\n        return this.onRemovedSource.asObservable();\r\n    }\r\n    prepend(element) {\r\n        this.emitOnAdded(element);\r\n        this.emitOnChanged('prepend');\r\n        return Promise.resolve();\r\n    }\r\n    append(element) {\r\n        this.emitOnAdded(element);\r\n        this.emitOnChanged('append');\r\n        return Promise.resolve();\r\n    }\r\n    add(element) {\r\n        this.emitOnAdded(element);\r\n        this.emitOnChanged('add');\r\n        return Promise.resolve();\r\n    }\r\n    remove(element) {\r\n        this.emitOnRemoved(element);\r\n        this.emitOnChanged('remove');\r\n        return Promise.resolve();\r\n    }\r\n    update(element, values) {\r\n        this.emitOnUpdated(element);\r\n        this.emitOnChanged('update');\r\n        return Promise.resolve();\r\n    }\r\n    empty() {\r\n        this.emitOnChanged('empty');\r\n        return Promise.resolve();\r\n    }\r\n    setSort(conf, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('sort');\r\n        }\r\n    }\r\n    setFilter(conf, andOperator, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('filter');\r\n        }\r\n    }\r\n    addFilter(fieldConf, andOperator, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('filter');\r\n        }\r\n    }\r\n    setPaging(page, perPage, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('paging');\r\n        }\r\n    }\r\n    setPage(page, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('page');\r\n        }\r\n    }\r\n    emitOnRemoved(element) {\r\n        this.onRemovedSource.next(element);\r\n    }\r\n    emitOnUpdated(element) {\r\n        this.onUpdatedSource.next(element);\r\n    }\r\n    emitOnAdded(element) {\r\n        this.onAddedSource.next(element);\r\n    }\r\n    emitOnChanged(action) {\r\n        this.getElements().then((elements) => this.onChangedSource.next({\r\n            action: action,\r\n            elements: elements,\r\n            paging: this.getPaging(),\r\n            filter: this.getFilter(),\r\n            sort: this.getSort(),\r\n        }));\r\n    }\r\n}\n\nclass FilterDefault {\r\n    constructor() {\r\n        this.inputClass = '';\r\n        this.filter = new EventEmitter();\r\n        this.query = '';\r\n    }\r\n    onFilter(query) {\r\n        this.source.addFilter({\r\n            field: this.column.id,\r\n            search: query,\r\n            filter: this.column.getFilterFunction(),\r\n        });\r\n    }\r\n}\r\nFilterDefault.ɵfac = function FilterDefault_Factory(t) { return new (t || FilterDefault)(); };\r\nFilterDefault.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FilterDefault, selectors: [[\"ng-component\"]], inputs: { column: \"column\", source: \"source\", inputClass: \"inputClass\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function FilterDefault_Template(rf, ctx) { }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterDefault, [{\r\n        type: Component,\r\n        args: [{\r\n                template: '',\r\n            }]\r\n    }], null, { column: [{\r\n            type: Input\r\n        }], source: [{\r\n            type: Input\r\n        }], inputClass: [{\r\n            type: Input\r\n        }], filter: [{\r\n            type: Output\r\n        }] }); })();\n\nconst _c0$a = [\"dynamicTarget\"];\r\nfunction CustomFilterComponent_ng_template_0_Template(rf, ctx) { }\r\nclass CustomFilterComponent extends FilterDefault {\r\n    constructor(resolver) {\r\n        super();\r\n        this.resolver = resolver;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.column && !this.customComponent) {\r\n            const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\r\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n            // set @Inputs and @Outputs of custom component\r\n            this.customComponent.instance.query = this.query;\r\n            this.customComponent.instance.column = this.column;\r\n            this.customComponent.instance.source = this.source;\r\n            this.customComponent.instance.inputClass = this.inputClass;\r\n            this.customComponent.instance.filter.subscribe((event) => this.onFilter(event));\r\n        }\r\n        if (this.customComponent) {\r\n            this.customComponent.instance.ngOnChanges(changes);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.customComponent) {\r\n            this.customComponent.destroy();\r\n        }\r\n    }\r\n}\r\nCustomFilterComponent.ɵfac = function CustomFilterComponent_Factory(t) { return new (t || CustomFilterComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\r\nCustomFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomFilterComponent, selectors: [[\"custom-table-filter\"]], viewQuery: function CustomFilterComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0$a, 7, ViewContainerRef);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\r\n    } }, inputs: { query: \"query\" }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomFilterComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, CustomFilterComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\r\n    } }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomFilterComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'custom-table-filter',\r\n                template: `<ng-template #dynamicTarget></ng-template>`,\r\n            }]\r\n    }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { query: [{\r\n            type: Input\r\n        }], dynamicTarget: [{\r\n            type: ViewChild,\r\n            args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\r\n        }] }); })();\n\nclass DefaultFilter {\r\n    constructor() {\r\n        this.delay = 300;\r\n        this.filter = new EventEmitter();\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.changesSubscription) {\r\n            this.changesSubscription.unsubscribe();\r\n        }\r\n    }\r\n    setFilter() {\r\n        this.filter.emit(this.query);\r\n    }\r\n}\r\nDefaultFilter.ɵfac = function DefaultFilter_Factory(t) { return new (t || DefaultFilter)(); };\r\nDefaultFilter.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultFilter, selectors: [[\"ng-component\"]], inputs: { query: \"query\", inputClass: \"inputClass\", column: \"column\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function DefaultFilter_Template(rf, ctx) { }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilter, [{\r\n        type: Component,\r\n        args: [{\r\n                template: '',\r\n            }]\r\n    }], null, { query: [{\r\n            type: Input\r\n        }], inputClass: [{\r\n            type: Input\r\n        }], column: [{\r\n            type: Input\r\n        }], filter: [{\r\n            type: Output\r\n        }] }); })();\n\nconst _c0$9 = [\"inputControl\"];\r\nfunction SelectFilterComponent_option_4_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"option\", 4);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const option_r2 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"value\", option_r2.value);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", option_r2.title, \" \");\r\n} }\r\nclass SelectFilterComponent extends DefaultFilter {\r\n    constructor() {\r\n        super();\r\n    }\r\n    ngOnInit() {\r\n        this.inputControl.valueChanges\r\n            .pipe(skip(1), distinctUntilChanged(), debounceTime(this.delay))\r\n            .subscribe((value) => this.setFilter());\r\n    }\r\n}\r\nSelectFilterComponent.ɵfac = function SelectFilterComponent_Factory(t) { return new (t || SelectFilterComponent)(); };\r\nSelectFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectFilterComponent, selectors: [[\"select-filter\"]], viewQuery: function SelectFilterComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0$9, 7, NgControl);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputControl = _t.first);\r\n    } }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"inputControl\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function SelectFilterComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"select\", 0, 1);\r\n        i0.ɵɵlistener(\"ngModelChange\", function SelectFilterComponent_Template_select_ngModelChange_0_listener($event) { return ctx.query = $event; });\r\n        i0.ɵɵelementStart(2, \"option\", 2);\r\n        i0.ɵɵtext(3);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(4, SelectFilterComponent_option_4_Template, 2, 2, \"option\", 3);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.query);\r\n        i0.ɵɵadvance(3);\r\n        i0.ɵɵtextInterpolate(ctx.column.getFilterConfig().selectText);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.column.getFilterConfig().list);\r\n    } }, directives: [i1$1.SelectControlValueAccessor, i1.NgClass, i1$1.NgControlStatus, i1$1.NgModel, i1$1.NgSelectOption, i1$1.ɵNgSelectMultipleOption, i1.NgForOf], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectFilterComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'select-filter',\r\n                template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            #inputControl\r\n            [(ngModel)]=\"query\">\r\n\r\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\r\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\r\n          {{ option.title }}\r\n        </option>\r\n    </select>\r\n  `,\r\n            }]\r\n    }], function () { return []; }, { inputControl: [{\r\n            type: ViewChild,\r\n            args: ['inputControl', { read: NgControl, static: true }]\r\n        }] }); })();\n\nfunction CheckboxFilterComponent_a_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r2 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"a\", 2);\r\n    i0.ɵɵlistener(\"click\", function CheckboxFilterComponent_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return ctx_r1.resetFilter($event); });\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    let tmp_0_0;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(((tmp_0_0 = ctx_r0.column.getFilterConfig()) == null ? null : tmp_0_0.resetText) || \"reset\");\r\n} }\r\nclass CheckboxFilterComponent extends DefaultFilter {\r\n    constructor() {\r\n        super();\r\n        this.filterActive = false;\r\n        this.inputControl = new FormControl();\r\n    }\r\n    ngOnInit() {\r\n        this.changesSubscription = this.inputControl.valueChanges\r\n            .pipe(debounceTime(this.delay))\r\n            .subscribe((checked) => {\r\n            this.filterActive = true;\r\n            const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\r\n            const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\r\n            this.query = checked ? trueVal : falseVal;\r\n            this.setFilter();\r\n        });\r\n    }\r\n    resetFilter(event) {\r\n        event.preventDefault();\r\n        this.query = '';\r\n        this.inputControl.setValue(false, { emitEvent: false });\r\n        this.filterActive = false;\r\n        this.setFilter();\r\n    }\r\n}\r\nCheckboxFilterComponent.ɵfac = function CheckboxFilterComponent_Factory(t) { return new (t || CheckboxFilterComponent)(); };\r\nCheckboxFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxFilterComponent, selectors: [[\"checkbox-filter\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 3, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 3, \"click\"]], template: function CheckboxFilterComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelement(0, \"input\", 0);\r\n        i0.ɵɵtemplate(1, CheckboxFilterComponent_a_1_Template, 2, 1, \"a\", 1);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"formControl\", ctx.inputControl)(\"ngClass\", ctx.inputClass);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.filterActive);\r\n    } }, directives: [i1$1.CheckboxControlValueAccessor, i1$1.NgControlStatus, i1$1.FormControlDirective, i1.NgClass, i1.NgIf], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxFilterComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'checkbox-filter',\r\n                template: `\r\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n    <a href=\"#\" *ngIf=\"filterActive\"\r\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\r\n  `,\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nclass CompleterFilterComponent extends DefaultFilter {\r\n    constructor(completerService) {\r\n        super();\r\n        this.completerService = completerService;\r\n        this.completerContent = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        const config = this.column.getFilterConfig().completer;\r\n        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n        config.dataService.descriptionField(config.descriptionField);\r\n        this.changesSubscription = this.completerContent\r\n            .pipe(map((ev) => (ev && ev.title) || ev || ''), distinctUntilChanged(), debounceTime(this.delay))\r\n            .subscribe((search) => {\r\n            this.query = search;\r\n            this.setFilter();\r\n        });\r\n    }\r\n    inputTextChanged(event) {\r\n        // workaround to trigger the search event when the home/end buttons are clicked\r\n        // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\r\n        // so here it gets called manually\r\n        if (event === '') {\r\n            this.completerContent.next(event);\r\n        }\r\n    }\r\n}\r\nCompleterFilterComponent.ɵfac = function CompleterFilterComponent_Factory(t) { return new (t || CompleterFilterComponent)(i0.ɵɵdirectiveInject(i1$2.CompleterService)); };\r\nCompleterFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CompleterFilterComponent, selectors: [[\"completer-filter\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterFilterComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"ng2-completer\", 0);\r\n        i0.ɵɵlistener(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.query = $event; })(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.inputTextChanged($event); })(\"selected\", function CompleterFilterComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.completerContent.next($event); });\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngModel\", ctx.query)(\"dataService\", ctx.column.getFilterConfig().completer.dataService)(\"minSearchLength\", ctx.column.getFilterConfig().completer.minSearchLength || 0)(\"pause\", ctx.column.getFilterConfig().completer.pause || 0)(\"placeholder\", ctx.column.getFilterConfig().completer.placeholder || \"Start typing...\");\r\n    } }, directives: [i1$2.CompleterCmp, i1$1.NgControlStatus, i1$1.NgModel], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterFilterComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'completer-filter',\r\n                template: `\r\n    <ng2-completer [(ngModel)]=\"query\"\r\n                   (ngModelChange)=\"inputTextChanged($event)\"\r\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\r\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\r\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"completerContent.next($event)\">\r\n    </ng2-completer>\r\n  `,\r\n            }]\r\n    }], function () { return [{ type: i1$2.CompleterService }]; }, null); })();\n\nclass InputFilterComponent extends DefaultFilter {\r\n    constructor() {\r\n        super();\r\n        this.inputControl = new FormControl();\r\n    }\r\n    ngOnInit() {\r\n        if (this.query) {\r\n            this.inputControl.setValue(this.query);\r\n        }\r\n        this.inputControl.valueChanges\r\n            .pipe(distinctUntilChanged(), debounceTime(this.delay))\r\n            .subscribe((value) => {\r\n            this.query = this.inputControl.value;\r\n            this.setFilter();\r\n        });\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.query) {\r\n            this.inputControl.setValue(this.query);\r\n        }\r\n    }\r\n}\r\nInputFilterComponent.ɵfac = function InputFilterComponent_Factory(t) { return new (t || InputFilterComponent)(); };\r\nInputFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputFilterComponent, selectors: [[\"input-filter\"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 1, vars: 3, consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"formControl\", \"placeholder\"]], template: function InputFilterComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelement(0, \"input\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.column.title);\r\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"formControl\", ctx.inputControl);\r\n    } }, directives: [i1$1.DefaultValueAccessor, i1.NgClass, i1$1.NgControlStatus, i1$1.FormControlDirective], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputFilterComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'input-filter',\r\n                template: `\r\n    <input\r\n      [ngClass]=\"inputClass\"\r\n      [formControl]=\"inputControl\"\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      placeholder=\"{{ column.title }}\"/>\r\n  `,\r\n            }]\r\n    }], function () { return []; }, null); })();\n\nfunction DefaultFilterComponent_select_filter_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r5 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"select-filter\", 3);\r\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_select_filter_1_Template_select_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onFilter($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"query\", ctx_r0.query)(\"ngClass\", ctx_r0.inputClass)(\"column\", ctx_r0.column);\r\n} }\r\nfunction DefaultFilterComponent_checkbox_filter_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r7 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"checkbox-filter\", 3);\r\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_checkbox_filter_2_Template_checkbox_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.onFilter($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"query\", ctx_r1.query)(\"ngClass\", ctx_r1.inputClass)(\"column\", ctx_r1.column);\r\n} }\r\nfunction DefaultFilterComponent_completer_filter_3_Template(rf, ctx) { if (rf & 1) {\r\n    const _r9 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"completer-filter\", 3);\r\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_completer_filter_3_Template_completer_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.onFilter($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"query\", ctx_r2.query)(\"ngClass\", ctx_r2.inputClass)(\"column\", ctx_r2.column);\r\n} }\r\nfunction DefaultFilterComponent_input_filter_4_Template(rf, ctx) { if (rf & 1) {\r\n    const _r11 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"input-filter\", 3);\r\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_input_filter_4_Template_input_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r11); const ctx_r10 = i0.ɵɵnextContext(); return ctx_r10.onFilter($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r3 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"query\", ctx_r3.query)(\"ngClass\", ctx_r3.inputClass)(\"column\", ctx_r3.column);\r\n} }\r\nclass DefaultFilterComponent extends FilterDefault {\r\n}\r\nDefaultFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵDefaultFilterComponent_BaseFactory; return function DefaultFilterComponent_Factory(t) { return (ɵDefaultFilterComponent_BaseFactory || (ɵDefaultFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultFilterComponent)))(t || DefaultFilterComponent); }; }();\r\nDefaultFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultFilterComponent, selectors: [[\"default-table-filter\"]], inputs: { query: \"query\" }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[3, \"ngSwitch\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"ngClass\", \"column\", \"filter\"]], template: function DefaultFilterComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementContainerStart(0, 0);\r\n        i0.ɵɵtemplate(1, DefaultFilterComponent_select_filter_1_Template, 1, 3, \"select-filter\", 1);\r\n        i0.ɵɵtemplate(2, DefaultFilterComponent_checkbox_filter_2_Template, 1, 3, \"checkbox-filter\", 1);\r\n        i0.ɵɵtemplate(3, DefaultFilterComponent_completer_filter_3_Template, 1, 3, \"completer-filter\", 1);\r\n        i0.ɵɵtemplate(4, DefaultFilterComponent_input_filter_4_Template, 1, 3, \"input-filter\", 2);\r\n        i0.ɵɵelementContainerEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngSwitch\", ctx.column.getFilterType());\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\r\n    } }, directives: [i1.NgSwitch, i1.NgSwitchCase, SelectFilterComponent, i1.NgClass, CheckboxFilterComponent, CompleterFilterComponent, i1.NgSwitchDefault, InputFilterComponent], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilterComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'default-table-filter',\r\n                template: `\r\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\r\n      <select-filter *ngSwitchCase=\"'list'\"\r\n                     [query]=\"query\"\r\n                     [ngClass]=\"inputClass\"\r\n                     [column]=\"column\"\r\n                     (filter)=\"onFilter($event)\">\r\n      </select-filter>\r\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\r\n                       [query]=\"query\"\r\n                       [ngClass]=\"inputClass\"\r\n                       [column]=\"column\"\r\n                       (filter)=\"onFilter($event)\">\r\n      </checkbox-filter>\r\n      <completer-filter *ngSwitchCase=\"'completer'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </completer-filter>\r\n      <input-filter *ngSwitchDefault\r\n                    [query]=\"query\"\r\n                    [ngClass]=\"inputClass\"\r\n                    [column]=\"column\"\r\n                    (filter)=\"onFilter($event)\">\r\n      </input-filter>\r\n    </ng-container>\r\n  `,\r\n            }]\r\n    }], null, { query: [{\r\n            type: Input\r\n        }] }); })();\n\nfunction FilterComponent_div_0_custom_table_filter_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r4 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"custom-table-filter\", 4);\r\n    i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_custom_table_filter_1_Template_custom_table_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(2); return ctx_r3.onFilter($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵproperty(\"query\", ctx_r1.query)(\"column\", ctx_r1.column)(\"source\", ctx_r1.source)(\"inputClass\", ctx_r1.inputClass);\r\n} }\r\nfunction FilterComponent_div_0_default_table_filter_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r6 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"default-table-filter\", 4);\r\n    i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_default_table_filter_2_Template_default_table_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(2); return ctx_r5.onFilter($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵproperty(\"query\", ctx_r2.query)(\"column\", ctx_r2.column)(\"source\", ctx_r2.source)(\"inputClass\", ctx_r2.inputClass);\r\n} }\r\nfunction FilterComponent_div_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\", 1);\r\n    i0.ɵɵtemplate(1, FilterComponent_div_0_custom_table_filter_1_Template, 1, 4, \"custom-table-filter\", 2);\r\n    i0.ɵɵtemplate(2, FilterComponent_div_0_default_table_filter_2_Template, 1, 4, \"default-table-filter\", 3);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r0.column.getFilterType());\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\r\n} }\r\nclass FilterComponent extends FilterDefault {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.query = '';\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.source) {\r\n            if (!changes.source.firstChange) {\r\n                this.dataChangedSub.unsubscribe();\r\n            }\r\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n                const filterConf = this.source.getFilter();\r\n                if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\r\n                    this.query = '';\r\n                    // add a check for existing filters an set the query if one exists for this column\r\n                    // this covers instances where the filter is set by user code while maintaining existing functionality\r\n                }\r\n                else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\r\n                    filterConf.filters.forEach((k, v) => {\r\n                        if (k.field == this.column.id) {\r\n                            this.query = k.search;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵFilterComponent_BaseFactory; return function FilterComponent_Factory(t) { return (ɵFilterComponent_BaseFactory || (ɵFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FilterComponent)))(t || FilterComponent); }; }();\r\nFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FilterComponent, selectors: [[\"ng2-smart-table-filter\"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"class\", \"ng2-smart-filter\", 3, \"ngSwitch\", 4, \"ngIf\"], [1, \"ng2-smart-filter\", 3, \"ngSwitch\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\"]], template: function FilterComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, FilterComponent_div_0_Template, 3, 2, \"div\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.column.isFilterable);\r\n    } }, directives: [i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, CustomFilterComponent, i1.NgSwitchDefault, DefaultFilterComponent], styles: [\"[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     input, [_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     input[type=search]{box-sizing:inherit}[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     .completer-dropdown-holder{font-weight:400}[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     a{font-weight:400}\"] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'ng2-smart-table-filter', template: `\r\n      <div class=\"ng2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\r\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\r\n                             [query]=\"query\"\r\n                             [column]=\"column\"\r\n                             [source]=\"source\"\r\n                             [inputClass]=\"inputClass\"\r\n                             (filter)=\"onFilter($event)\">\r\n        </custom-table-filter>\r\n        <default-table-filter *ngSwitchDefault\r\n                              [query]=\"query\"\r\n                              [column]=\"column\"\r\n                              [source]=\"source\"\r\n                              [inputClass]=\"inputClass\"\r\n                              (filter)=\"onFilter($event)\">\r\n        </default-table-filter>\r\n      </div>\r\n    `, styles: [\":host .ng2-smart-filter ::ng-deep input,:host .ng2-smart-filter ::ng-deep select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}:host .ng2-smart-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .ng2-smart-filter ::ng-deep .completer-dropdown-holder{font-weight:400}:host .ng2-smart-filter ::ng-deep a{font-weight:400}\\n\"] }]\r\n    }], null, null); })();\n\nconst FILTER_COMPONENTS = [\r\n    FilterDefault,\r\n    DefaultFilter,\r\n    FilterComponent,\r\n    DefaultFilterComponent,\r\n    CustomFilterComponent,\r\n    CheckboxFilterComponent,\r\n    CompleterFilterComponent,\r\n    InputFilterComponent,\r\n    SelectFilterComponent,\r\n];\r\nclass FilterModule {\r\n}\r\nFilterModule.ɵfac = function FilterModule_Factory(t) { return new (t || FilterModule)(); };\r\nFilterModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FilterModule });\r\nFilterModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            ReactiveFormsModule,\r\n            Ng2CompleterModule,\r\n        ]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    CommonModule,\r\n                    FormsModule,\r\n                    ReactiveFormsModule,\r\n                    Ng2CompleterModule,\r\n                ],\r\n                declarations: [\r\n                    ...FILTER_COMPONENTS,\r\n                ],\r\n                exports: [\r\n                    ...FILTER_COMPONENTS,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FilterModule, { declarations: [FilterDefault,\r\n        DefaultFilter,\r\n        FilterComponent,\r\n        DefaultFilterComponent,\r\n        CustomFilterComponent,\r\n        CheckboxFilterComponent,\r\n        CompleterFilterComponent,\r\n        InputFilterComponent,\r\n        SelectFilterComponent], imports: [CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        Ng2CompleterModule], exports: [FilterDefault,\r\n        DefaultFilter,\r\n        FilterComponent,\r\n        DefaultFilterComponent,\r\n        CustomFilterComponent,\r\n        CheckboxFilterComponent,\r\n        CompleterFilterComponent,\r\n        InputFilterComponent,\r\n        SelectFilterComponent] }); })();\n\nfunction PagerComponent_nav_0_li_14_span_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"span\", 14);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementStart(2, \"span\", 7);\r\n    i0.ɵɵtext(3, \"(current)\");\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const page_r3 = i0.ɵɵnextContext().$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\"\", page_r3, \" \");\r\n} }\r\nfunction PagerComponent_nav_0_li_14_a_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r9 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"a\", 15);\r\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_li_14_a_2_Template_a_click_0_listener() { i0.ɵɵrestoreView(_r9); const page_r3 = i0.ɵɵnextContext().$implicit; const ctx_r7 = i0.ɵɵnextContext(2); return ctx_r7.paginate(page_r3); });\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const page_r3 = i0.ɵɵnextContext().$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(page_r3);\r\n} }\r\nconst _c0$8 = function (a0) { return { active: a0 }; };\r\nfunction PagerComponent_nav_0_li_14_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"li\", 4);\r\n    i0.ɵɵtemplate(1, PagerComponent_nav_0_li_14_span_1_Template, 4, 1, \"span\", 12);\r\n    i0.ɵɵtemplate(2, PagerComponent_nav_0_li_14_a_2_Template, 2, 1, \"a\", 13);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const page_r3 = ctx.$implicit;\r\n    const ctx_r2 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0$8, ctx_r2.getPage() == page_r3));\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() == page_r3);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() != page_r3);\r\n} }\r\nconst _c1$1 = function (a0) { return { disabled: a0 }; };\r\nfunction PagerComponent_nav_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r12 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"nav\", 2)(1, \"ul\", 3)(2, \"li\", 4)(3, \"a\", 5);\r\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_3_listener() { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.getPage() == 1 ? false : ctx_r11.paginate(1); });\r\n    i0.ɵɵelementStart(4, \"span\", 6);\r\n    i0.ɵɵtext(5, \"\\u00AB\");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(6, \"span\", 7);\r\n    i0.ɵɵtext(7, \"First\");\r\n    i0.ɵɵelementEnd()()();\r\n    i0.ɵɵelementStart(8, \"li\", 4)(9, \"a\", 8);\r\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_9_listener() { i0.ɵɵrestoreView(_r12); const ctx_r13 = i0.ɵɵnextContext(); return ctx_r13.getPage() == 1 ? false : ctx_r13.prev(); });\r\n    i0.ɵɵelementStart(10, \"span\", 6);\r\n    i0.ɵɵtext(11, \"<\");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(12, \"span\", 7);\r\n    i0.ɵɵtext(13, \"Prev\");\r\n    i0.ɵɵelementEnd()()();\r\n    i0.ɵɵtemplate(14, PagerComponent_nav_0_li_14_Template, 3, 5, \"li\", 9);\r\n    i0.ɵɵelementStart(15, \"li\", 4)(16, \"a\", 10);\r\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_16_listener() { i0.ɵɵrestoreView(_r12); const ctx_r14 = i0.ɵɵnextContext(); return ctx_r14.getPage() == ctx_r14.getLast() ? false : ctx_r14.next(); });\r\n    i0.ɵɵelementStart(17, \"span\", 6);\r\n    i0.ɵɵtext(18, \">\");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(19, \"span\", 7);\r\n    i0.ɵɵtext(20, \"Next\");\r\n    i0.ɵɵelementEnd()()();\r\n    i0.ɵɵelementStart(21, \"li\", 4)(22, \"a\", 11);\r\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_22_listener() { i0.ɵɵrestoreView(_r12); const ctx_r15 = i0.ɵɵnextContext(); return ctx_r15.getPage() == ctx_r15.getLast() ? false : ctx_r15.paginate(ctx_r15.getLast()); });\r\n    i0.ɵɵelementStart(23, \"span\", 6);\r\n    i0.ɵɵtext(24, \"\\u00BB\");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(25, \"span\", 7);\r\n    i0.ɵɵtext(26, \"Last\");\r\n    i0.ɵɵelementEnd()()()()();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1$1, ctx_r0.getPage() == 1));\r\n    i0.ɵɵadvance(6);\r\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1$1, ctx_r0.getPage() == 1));\r\n    i0.ɵɵadvance(6);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getPages());\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1$1, ctx_r0.getPage() == ctx_r0.getLast()));\r\n    i0.ɵɵadvance(6);\r\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c1$1, ctx_r0.getPage() == ctx_r0.getLast()));\r\n} }\r\nfunction PagerComponent_nav_1_option_4_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"option\", 20);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const item_r17 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"value\", item_r17);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(item_r17);\r\n} }\r\nfunction PagerComponent_nav_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r19 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"nav\", 16)(1, \"label\", 17);\r\n    i0.ɵɵtext(2, \" Per Page: \");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(3, \"select\", 18);\r\n    i0.ɵɵlistener(\"change\", function PagerComponent_nav_1_Template_select_change_3_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(); return ctx_r18.onChangePerPage($event); })(\"ngModelChange\", function PagerComponent_nav_1_Template_select_ngModelChange_3_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r20 = i0.ɵɵnextContext(); return ctx_r20.currentPerPage = $event; });\r\n    i0.ɵɵtemplate(4, PagerComponent_nav_1_option_4_Template, 2, 2, \"option\", 19);\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(3);\r\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.currentPerPage);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.perPageSelect);\r\n} }\r\nclass PagerComponent {\r\n    constructor() {\r\n        this.perPageSelect = [];\r\n        this.changePage = new EventEmitter();\r\n        this.count = 0;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.source) {\r\n            if (!changes.source.firstChange) {\r\n                this.dataChangedSub.unsubscribe();\r\n            }\r\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n                this.page = this.source.getPaging().page;\r\n                this.perPage = this.source.getPaging().perPage;\r\n                this.currentPerPage = this.perPage;\r\n                this.count = this.source.count();\r\n                if (this.isPageOutOfBounce()) {\r\n                    this.source.setPage(--this.page);\r\n                }\r\n                this.processPageChange(dataChanges);\r\n                this.initPages();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * We change the page here depending on the action performed against data source\r\n     * if a new element was added to the end of the table - then change the page to the last\r\n     * if a new element was added to the beginning of the table - then to the first page\r\n     * @param changes\r\n     */\r\n    processPageChange(changes) {\r\n        if (changes['action'] === 'prepend') {\r\n            this.source.setPage(1);\r\n        }\r\n        if (changes['action'] === 'append') {\r\n            this.source.setPage(this.getLast());\r\n        }\r\n    }\r\n    shouldShow() {\r\n        return this.source.count() > this.perPage;\r\n    }\r\n    paginate(page) {\r\n        this.source.setPage(page);\r\n        this.page = page;\r\n        this.changePage.emit({ page });\r\n        return false;\r\n    }\r\n    next() {\r\n        return this.paginate(this.getPage() + 1);\r\n    }\r\n    prev() {\r\n        return this.paginate(this.getPage() - 1);\r\n    }\r\n    getPage() {\r\n        return this.page;\r\n    }\r\n    getPages() {\r\n        return this.pages;\r\n    }\r\n    getLast() {\r\n        return Math.ceil(this.count / this.perPage);\r\n    }\r\n    isPageOutOfBounce() {\r\n        return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\r\n    }\r\n    initPages() {\r\n        const pagesCount = this.getLast();\r\n        let showPagesCount = 4;\r\n        showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\r\n        this.pages = [];\r\n        if (this.shouldShow()) {\r\n            let middleOne = Math.ceil(showPagesCount / 2);\r\n            middleOne = this.page >= middleOne ? this.page : middleOne;\r\n            let lastOne = middleOne + Math.floor(showPagesCount / 2);\r\n            lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\r\n            const firstOne = lastOne - showPagesCount + 1;\r\n            for (let i = firstOne; i <= lastOne; i++) {\r\n                this.pages.push(i);\r\n            }\r\n        }\r\n    }\r\n    onChangePerPage(event) {\r\n        if (this.currentPerPage) {\r\n            if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\r\n                this.source.getPaging().perPage = null;\r\n            }\r\n            else {\r\n                this.source.getPaging().perPage = this.currentPerPage * 1;\r\n                this.source.refresh();\r\n            }\r\n            this.initPages();\r\n        }\r\n    }\r\n}\r\nPagerComponent.ɵfac = function PagerComponent_Factory(t) { return new (t || PagerComponent)(); };\r\nPagerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PagerComponent, selectors: [[\"ng2-smart-table-pager\"]], inputs: { source: \"source\", perPageSelect: \"perPageSelect\" }, outputs: { changePage: \"changePage\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"class\", \"ng2-smart-pagination-nav\", 4, \"ngIf\"], [\"class\", \"ng2-smart-pagination-per-page\", 4, \"ngIf\"], [1, \"ng2-smart-pagination-nav\"], [1, \"ng2-smart-pagination\", \"pagination\"], [1, \"ng2-smart-page-item\", \"page-item\", 3, \"ngClass\"], [\"href\", \"#\", \"aria-label\", \"First\", 1, \"ng2-smart-page-link\", \"page-link\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"href\", \"#\", \"aria-label\", \"Prev\", 1, \"ng2-smart-page-link\", \"page-link\", \"page-link-prev\", 3, \"click\"], [\"class\", \"ng2-smart-page-item page-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"aria-label\", \"Next\", 1, \"ng2-smart-page-link\", \"page-link\", \"page-link-next\", 3, \"click\"], [\"href\", \"#\", \"aria-label\", \"Last\", 1, \"ng2-smart-page-link\", \"page-link\", 3, \"click\"], [\"class\", \"ng2-smart-page-link page-link\", 4, \"ngIf\"], [\"class\", \"ng2-smart-page-link page-link\", \"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [1, \"ng2-smart-page-link\", \"page-link\"], [\"href\", \"#\", 1, \"ng2-smart-page-link\", \"page-link\", 3, \"click\"], [1, \"ng2-smart-pagination-per-page\"], [\"for\", \"per-page\"], [\"id\", \"per-page\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function PagerComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, PagerComponent_nav_0_Template, 27, 13, \"nav\", 0);\r\n        i0.ɵɵtemplate(1, PagerComponent_nav_1_Template, 5, 2, \"nav\", 1);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.shouldShow());\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.perPageSelect && ctx.perPageSelect.length > 0);\r\n    } }, directives: [i1.NgIf, i1.NgClass, i1.NgForOf, i1$1.SelectControlValueAccessor, i1$1.NgControlStatus, i1$1.NgModel, i1$1.NgSelectOption, i1$1.ɵNgSelectMultipleOption], styles: [\".ng2-smart-pagination[_ngcontent-%COMP%]{display:inline-flex;font-size:.875em;padding:0}.ng2-smart-pagination[_ngcontent-%COMP%]   .sr-only[_ngcontent-%COMP%]{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.ng2-smart-pagination[_ngcontent-%COMP%]   .ng2-smart-page-item[_ngcontent-%COMP%]{display:inline}.ng2-smart-pagination[_ngcontent-%COMP%]   .page-link-next[_ngcontent-%COMP%], .ng2-smart-pagination[_ngcontent-%COMP%]   .page-link-prev[_ngcontent-%COMP%]{font-size:10px}[_nghost-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   select[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem;line-height:2.5rem}\"] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'ng2-smart-table-pager', template: `\r\n    <nav *ngIf=\"shouldShow()\" class=\"ng2-smart-pagination-nav\">\r\n      <ul class=\"ng2-smart-pagination pagination\">\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span class=\"sr-only\">First</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link page-link-prev\" href=\"#\"\r\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\r\n            <span aria-hidden=\"true\">&lt;</span>\r\n            <span class=\"sr-only\">Prev</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\r\n          <span class=\"ng2-smart-page-link page-link\"\r\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\r\n        </li>\r\n\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link page-link-next\" href=\"#\"\r\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\r\n            <span aria-hidden=\"true\">&gt;</span>\r\n            <span class=\"sr-only\">Next</span>\r\n          </a>\r\n        </li>\r\n        \r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span class=\"sr-only\">Last</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    \r\n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"ng2-smart-pagination-per-page\">\r\n      <label for=\"per-page\">\r\n        Per Page:\r\n      </label>\r\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\r\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\r\n      </select>\r\n    </nav>\r\n  `, styles: [\".ng2-smart-pagination{display:inline-flex;font-size:.875em;padding:0}.ng2-smart-pagination .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.ng2-smart-pagination .ng2-smart-page-item{display:inline}.ng2-smart-pagination .page-link-next,.ng2-smart-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host select{margin:1rem 0 1rem 1rem}:host label{margin:1rem 0 1rem 1rem;line-height:2.5rem}\\n\"] }]\r\n    }], null, { source: [{\r\n            type: Input\r\n        }], perPageSelect: [{\r\n            type: Input\r\n        }], changePage: [{\r\n            type: Output\r\n        }] }); })();\n\nclass PagerModule {\r\n}\r\nPagerModule.ɵfac = function PagerModule_Factory(t) { return new (t || PagerModule)(); };\r\nPagerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PagerModule });\r\nPagerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n        ]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    CommonModule,\r\n                    FormsModule,\r\n                ],\r\n                declarations: [\r\n                    PagerComponent,\r\n                ],\r\n                exports: [\r\n                    PagerComponent,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PagerModule, { declarations: [PagerComponent], imports: [CommonModule,\r\n        FormsModule], exports: [PagerComponent] }); })();\n\nfunction TbodyCustomComponent_a_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r3 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"a\", 1);\r\n    i0.ɵɵlistener(\"click\", function TbodyCustomComponent_a_0_Template_a_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r3); const action_r1 = restoredCtx.$implicit; const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.onCustom(action_r1, $event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const action_r1 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"innerHTML\", action_r1.title, i0.ɵɵsanitizeHtml);\r\n} }\r\nclass TbodyCustomComponent {\r\n    constructor() {\r\n        this.custom = new EventEmitter();\r\n    }\r\n    onCustom(action, event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.custom.emit({\r\n            action: action.name,\r\n            data: this.row.getData(),\r\n            source: this.source\r\n        });\r\n    }\r\n}\r\nTbodyCustomComponent.ɵfac = function TbodyCustomComponent_Factory(t) { return new (t || TbodyCustomComponent)(); };\r\nTbodyCustomComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyCustomComponent, selectors: [[\"ng2-st-tbody-custom\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\" }, outputs: { custom: \"custom\" }, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-custom-custom\", 3, \"innerHTML\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-custom-custom\", 3, \"innerHTML\", \"click\"]], template: function TbodyCustomComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, TbodyCustomComponent_a_0_Template, 1, 1, \"a\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.grid.getSetting(\"actions.custom\"));\r\n    } }, directives: [i1.NgForOf], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCustomComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'ng2-st-tbody-custom',\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                template: `\r\n      <a *ngFor=\"let action of grid.getSetting('actions.custom')\" href=\"#\"\r\n         class=\"ng2-smart-action ng2-smart-action-custom-custom\" \r\n         [innerHTML]=\"action.title\"\r\n         (click)=\"onCustom(action, $event)\"></a>\r\n        `\r\n            }]\r\n    }], null, { grid: [{\r\n            type: Input\r\n        }], row: [{\r\n            type: Input\r\n        }], source: [{\r\n            type: Input\r\n        }], custom: [{\r\n            type: Output\r\n        }] }); })();\n\nfunction TbodyEditDeleteComponent_a_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r3 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"a\", 2);\r\n    i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.onEdit($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.editRowButtonContent, i0.ɵɵsanitizeHtml);\r\n} }\r\nfunction TbodyEditDeleteComponent_a_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r5 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"a\", 3);\r\n    i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onDelete($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.deleteRowButtonContent, i0.ɵɵsanitizeHtml);\r\n} }\r\nclass TbodyEditDeleteComponent {\r\n    constructor() {\r\n        this.edit = new EventEmitter();\r\n        this.delete = new EventEmitter();\r\n        this.editRowSelect = new EventEmitter();\r\n    }\r\n    onEdit(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.editRowSelect.emit(this.row);\r\n        if (this.grid.getSetting('mode') === 'external') {\r\n            this.edit.emit({\r\n                data: this.row.getData(),\r\n                source: this.source,\r\n            });\r\n        }\r\n        else {\r\n            this.grid.edit(this.row);\r\n        }\r\n    }\r\n    onDelete(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (this.grid.getSetting('mode') === 'external') {\r\n            this.delete.emit({\r\n                data: this.row.getData(),\r\n                source: this.source,\r\n            });\r\n        }\r\n        else {\r\n            this.grid.delete(this.row, this.deleteConfirm);\r\n        }\r\n    }\r\n    ngOnChanges() {\r\n        this.isActionEdit = this.grid.getSetting('actions.edit');\r\n        this.isActionDelete = this.grid.getSetting('actions.delete');\r\n        this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\r\n        this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\r\n    }\r\n}\r\nTbodyEditDeleteComponent.ɵfac = function TbodyEditDeleteComponent_Factory(t) { return new (t || TbodyEditDeleteComponent)(); };\r\nTbodyEditDeleteComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyEditDeleteComponent, selectors: [[\"ng2-st-tbody-edit-delete\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\" }, outputs: { edit: \"edit\", delete: \"delete\", editRowSelect: \"editRowSelect\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-edit-edit\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-delete-delete\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-edit-edit\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-delete-delete\", 3, \"innerHTML\", \"click\"]], template: function TbodyEditDeleteComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, TbodyEditDeleteComponent_a_0_Template, 1, 1, \"a\", 0);\r\n        i0.ɵɵtemplate(1, TbodyEditDeleteComponent_a_1_Template, 1, 1, \"a\", 1);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isActionEdit);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isActionDelete);\r\n    } }, directives: [i1.NgIf], encapsulation: 2, changeDetection: 0 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyEditDeleteComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'ng2-st-tbody-edit-delete',\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                template: `\r\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"ng2-smart-action ng2-smart-action-edit-edit\"\r\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\r\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"ng2-smart-action ng2-smart-action-delete-delete\"\r\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\r\n  `,\r\n            }]\r\n    }], null, { grid: [{\r\n            type: Input\r\n        }], row: [{\r\n            type: Input\r\n        }], source: [{\r\n            type: Input\r\n        }], deleteConfirm: [{\r\n            type: Input\r\n        }], editConfirm: [{\r\n            type: Input\r\n        }], edit: [{\r\n            type: Output\r\n        }], delete: [{\r\n            type: Output\r\n        }], editRowSelect: [{\r\n            type: Output\r\n        }] }); })();\n\nclass TbodyCreateCancelComponent {\r\n    onSave(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.grid.save(this.row, this.editConfirm);\r\n    }\r\n    onCancelEdit(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.row.isInEditing = false;\r\n    }\r\n    ngOnChanges() {\r\n        this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\r\n        this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent');\r\n    }\r\n}\r\nTbodyCreateCancelComponent.ɵfac = function TbodyCreateCancelComponent_Factory(t) { return new (t || TbodyCreateCancelComponent)(); };\r\nTbodyCreateCancelComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyCreateCancelComponent, selectors: [[\"ng2-st-tbody-create-cancel\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-edit-save\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-edit-cancel\", 3, \"innerHTML\", \"click\"]], template: function TbodyCreateCancelComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"a\", 0);\r\n        i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_0_listener($event) { return ctx.onSave($event); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(1, \"a\", 1);\r\n        i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_1_listener($event) { return ctx.onCancelEdit($event); });\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"innerHTML\", ctx.saveButtonContent, i0.ɵɵsanitizeHtml);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\r\n    } }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCreateCancelComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'ng2-st-tbody-create-cancel',\r\n                template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-save\"\r\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\r\n  `,\r\n            }]\r\n    }], null, { grid: [{\r\n            type: Input\r\n        }], row: [{\r\n            type: Input\r\n        }], editConfirm: [{\r\n            type: Input\r\n        }] }); })();\n\nconst _c0$7 = [\"ng2-st-tbody\", \"\"];\r\nfunction Ng2SmartTableTbodyComponent_tr_0_td_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r11 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"td\", 6);\r\n    i0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_td_1_Template_td_click_0_listener() { i0.ɵɵrestoreView(_r11); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.multipleSelectRow.emit(row_r2); });\r\n    i0.ɵɵelement(1, \"input\", 7);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const row_r2 = i0.ɵɵnextContext().$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngModel\", row_r2.isSelected);\r\n} }\r\nfunction Ng2SmartTableTbodyComponent_tr_0_td_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r14 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"td\", 8)(1, \"ng2-st-tbody-custom\", 9);\r\n    i0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_custom_custom_1_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(2); return ctx_r13.custom.emit($event); });\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(2, \"ng2-st-tbody-edit-delete\", 10);\r\n    i0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_edit_delete_edit_2_listener() { i0.ɵɵrestoreView(_r14); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r15 = i0.ɵɵnextContext(); return ctx_r15.edit.emit(row_r2); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_edit_delete_delete_2_listener() { i0.ɵɵrestoreView(_r14); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r17 = i0.ɵɵnextContext(); return ctx_r17.delete.emit(row_r2); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_edit_delete_editRowSelect_2_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r19 = i0.ɵɵnextContext(2); return ctx_r19.editRowSelect.emit($event); });\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const row_r2 = i0.ɵɵnextContext().$implicit;\r\n    const ctx_r4 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"row\", row_r2)(\"source\", ctx_r4.source);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"deleteConfirm\", ctx_r4.deleteConfirm)(\"editConfirm\", ctx_r4.editConfirm)(\"row\", row_r2)(\"source\", ctx_r4.source);\r\n} }\r\nfunction Ng2SmartTableTbodyComponent_tr_0_td_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"td\", 8);\r\n    i0.ɵɵelement(1, \"ng2-st-tbody-create-cancel\", 11);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const row_r2 = i0.ɵɵnextContext().$implicit;\r\n    const ctx_r5 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"grid\", ctx_r5.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r5.editConfirm);\r\n} }\r\nfunction Ng2SmartTableTbodyComponent_tr_0_td_4_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"td\");\r\n    i0.ɵɵelement(1, \"ng2-smart-table-cell\", 12);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const cell_r22 = ctx.$implicit;\r\n    const row_r2 = i0.ɵɵnextContext().$implicit;\r\n    const ctx_r6 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"cell\", cell_r22)(\"grid\", ctx_r6.grid)(\"row\", row_r2)(\"isNew\", false)(\"mode\", ctx_r6.mode)(\"editConfirm\", ctx_r6.editConfirm)(\"inputClass\", ctx_r6.editInputClass)(\"isInEditing\", row_r2.isInEditing);\r\n} }\r\nfunction Ng2SmartTableTbodyComponent_tr_0_td_5_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"td\", 8);\r\n    i0.ɵɵelement(1, \"ng2-st-tbody-create-cancel\", 11);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const row_r2 = i0.ɵɵnextContext().$implicit;\r\n    const ctx_r7 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"grid\", ctx_r7.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r7.editConfirm);\r\n} }\r\nfunction Ng2SmartTableTbodyComponent_tr_0_td_6_Template(rf, ctx) { if (rf & 1) {\r\n    const _r26 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"td\", 8)(1, \"ng2-st-tbody-custom\", 9);\r\n    i0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_custom_custom_1_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r25 = i0.ɵɵnextContext(2); return ctx_r25.custom.emit($event); });\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(2, \"ng2-st-tbody-edit-delete\", 10);\r\n    i0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_edit_delete_edit_2_listener() { i0.ɵɵrestoreView(_r26); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r27 = i0.ɵɵnextContext(); return ctx_r27.edit.emit(row_r2); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_edit_delete_delete_2_listener() { i0.ɵɵrestoreView(_r26); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r29 = i0.ɵɵnextContext(); return ctx_r29.delete.emit(row_r2); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_edit_delete_editRowSelect_2_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r31 = i0.ɵɵnextContext(2); return ctx_r31.editRowSelect.emit($event); });\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const row_r2 = i0.ɵɵnextContext().$implicit;\r\n    const ctx_r8 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"row\", row_r2)(\"source\", ctx_r8.source);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"deleteConfirm\", ctx_r8.deleteConfirm)(\"editConfirm\", ctx_r8.editConfirm)(\"row\", row_r2)(\"source\", ctx_r8.source);\r\n} }\r\nconst _c1 = function (a0) { return { selected: a0 }; };\r\nfunction Ng2SmartTableTbodyComponent_tr_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r34 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"tr\", 2);\r\n    i0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r33 = i0.ɵɵnextContext(); return ctx_r33.userSelectRow.emit(row_r2); })(\"mouseover\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_mouseover_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r35 = i0.ɵɵnextContext(); return ctx_r35.rowHover.emit(row_r2); });\r\n    i0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_0_td_1_Template, 2, 1, \"td\", 3);\r\n    i0.ɵɵtemplate(2, Ng2SmartTableTbodyComponent_tr_0_td_2_Template, 3, 8, \"td\", 4);\r\n    i0.ɵɵtemplate(3, Ng2SmartTableTbodyComponent_tr_0_td_3_Template, 2, 3, \"td\", 4);\r\n    i0.ɵɵtemplate(4, Ng2SmartTableTbodyComponent_tr_0_td_4_Template, 2, 8, \"td\", 5);\r\n    i0.ɵɵtemplate(5, Ng2SmartTableTbodyComponent_tr_0_td_5_Template, 2, 3, \"td\", 4);\r\n    i0.ɵɵtemplate(6, Ng2SmartTableTbodyComponent_tr_0_td_6_Template, 3, 8, \"td\", 4);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const row_r2 = ctx.$implicit;\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"className\", ctx_r0.rowClassFunction(row_r2))(\"ngClass\", i0.ɵɵpureFunction1(8, _c1, row_r2.isSelected));\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiSelectVisible);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnLeft);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnLeft);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getVisibleCells(row_r2.cells));\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnRight);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnRight);\r\n} }\r\nfunction Ng2SmartTableTbodyComponent_tr_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\r\n    i0.ɵɵtext(2);\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵattribute(\"colspan\", ctx_r1.tableColumnsCount);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.noDataMessage, \" \");\r\n} }\r\nclass Ng2SmartTableTbodyComponent {\r\n    constructor() {\r\n        this.save = new EventEmitter();\r\n        this.cancel = new EventEmitter();\r\n        this.edit = new EventEmitter();\r\n        this.delete = new EventEmitter();\r\n        this.custom = new EventEmitter();\r\n        this.edited = new EventEmitter();\r\n        this.userSelectRow = new EventEmitter();\r\n        this.editRowSelect = new EventEmitter();\r\n        this.multipleSelectRow = new EventEmitter();\r\n        this.rowHover = new EventEmitter();\r\n    }\r\n    get tableColumnsCount() {\r\n        const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\r\n        return this.grid.getColumns().length + actionColumns;\r\n    }\r\n    ngOnChanges() {\r\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n        this.mode = this.grid.getSetting('mode');\r\n        this.editInputClass = this.grid.getSetting('edit.inputClass');\r\n        this.showActionColumnRight = this.grid.showActionColumn('right');\r\n        this.isActionAdd = this.grid.getSetting('actions.add');\r\n        this.isActionEdit = this.grid.getSetting('actions.edit');\r\n        this.isActionDelete = this.grid.getSetting('actions.delete');\r\n        this.noDataMessage = this.grid.getSetting('noDataMessage');\r\n    }\r\n    getVisibleCells(cells) {\r\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\r\n    }\r\n}\r\nNg2SmartTableTbodyComponent.ɵfac = function Ng2SmartTableTbodyComponent_Factory(t) { return new (t || Ng2SmartTableTbodyComponent)(); };\r\nNg2SmartTableTbodyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableTbodyComponent, selectors: [[\"\", \"ng2-st-tbody\", \"\"]], inputs: { grid: \"grid\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", rowClassFunction: \"rowClassFunction\" }, outputs: { save: \"save\", cancel: \"cancel\", edit: \"edit\", delete: \"delete\", custom: \"custom\", edited: \"edited\", userSelectRow: \"userSelectRow\", editRowSelect: \"editRowSelect\", multipleSelectRow: \"multipleSelectRow\", rowHover: \"rowHover\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$7, decls: 2, vars: 2, consts: [[\"class\", \"ng2-smart-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"ng2-smart-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\"], [\"class\", \"ng2-smart-actions ng2-smart-action-multiple-select\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"ng2-smart-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"ng2-smart-actions\", \"ng2-smart-action-multiple-select\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngModel\"], [1, \"ng2-smart-actions\"], [3, \"grid\", \"row\", \"source\", \"custom\"], [3, \"grid\", \"deleteConfirm\", \"editConfirm\", \"row\", \"source\", \"edit\", \"delete\", \"editRowSelect\"], [3, \"grid\", \"row\", \"editConfirm\"], [3, \"cell\", \"grid\", \"row\", \"isNew\", \"mode\", \"editConfirm\", \"inputClass\", \"isInEditing\"]], template: function Ng2SmartTableTbodyComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, Ng2SmartTableTbodyComponent_tr_0_Template, 7, 10, \"tr\", 0);\r\n        i0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_1_Template, 3, 2, \"tr\", 1);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.grid.getRows());\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.grid.getRows().length == 0);\r\n    } }, directives: [i1.NgForOf, i1.NgClass, i1.NgIf, i1$1.CheckboxControlValueAccessor, i1$1.NgControlStatus, i1$1.NgModel, TbodyCustomComponent, TbodyEditDeleteComponent, TbodyCreateCancelComponent, CellComponent], styles: [\"[_nghost-%COMP%]   .ng2-smart-row.selected[_ngcontent-%COMP%]{background:rgba(0,0,0,.05)}[_nghost-%COMP%]   .ng2-smart-row[_ngcontent-%COMP%]   .ng2-smart-actions.ng2-smart-action-multiple-select[_ngcontent-%COMP%]{text-align:center}[_nghost-%COMP%]     ng2-st-tbody-edit-delete a:first-child, [_nghost-%COMP%]     ng2-st-tbody-create-cancel a:first-child{margin-right:.25rem}\"] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableTbodyComponent, [{\r\n        type: Component,\r\n        args: [{ selector: '[ng2-st-tbody]', template: \"<tr *ngFor=\\\"let row of grid.getRows()\\\" (click)=\\\"userSelectRow.emit(row)\\\" (mouseover)=\\\"rowHover.emit(row)\\\" class=\\\"ng2-smart-row\\\" [className]=\\\"rowClassFunction(row)\\\" [ngClass]=\\\"{selected: row.isSelected}\\\">\\r\\n  <td *ngIf=\\\"isMultiSelectVisible\\\" class=\\\"ng2-smart-actions ng2-smart-action-multiple-select\\\" (click)=\\\"multipleSelectRow.emit(row)\\\">\\r\\n    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [ngModel]=\\\"row.isSelected\\\">\\r\\n  </td>\\r\\n  <td *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\" class=\\\"ng2-smart-actions\\\">\\r\\n    <ng2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></ng2-st-tbody-custom>\\r\\n\\r\\n    <ng2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\r\\n                              [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                              [editConfirm]=\\\"editConfirm\\\"\\r\\n                              (edit)=\\\"edit.emit(row)\\\"\\r\\n                              (delete)=\\\"delete.emit(row)\\\"\\r\\n                              (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\r\\n                              [row]=\\\"row\\\"\\r\\n                              [source]=\\\"source\\\">\\r\\n    </ng2-st-tbody-edit-delete>\\r\\n  </td>\\r\\n   <td *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"  class=\\\"ng2-smart-actions\\\">\\r\\n    <ng2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></ng2-st-tbody-create-cancel>\\r\\n  </td>\\r\\n  <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\r\\n    <ng2-smart-table-cell [cell]=\\\"cell\\\"\\r\\n                          [grid]=\\\"grid\\\"\\r\\n                          [row]=\\\"row\\\"\\r\\n                          [isNew]=\\\"false\\\"\\r\\n                          [mode]=\\\"mode\\\"\\r\\n                          [editConfirm]=\\\"editConfirm\\\"\\r\\n                          [inputClass]=\\\"editInputClass\\\"\\r\\n                          [isInEditing]=\\\"row.isInEditing\\\">\\r\\n    </ng2-smart-table-cell>\\r\\n  </td>\\r\\n\\r\\n  <td *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"  class=\\\"ng2-smart-actions\\\">\\r\\n    <ng2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></ng2-st-tbody-create-cancel>\\r\\n  </td>\\r\\n\\r\\n  <td *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\" class=\\\"ng2-smart-actions\\\">\\r\\n    <ng2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></ng2-st-tbody-custom>\\r\\n\\r\\n    <ng2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\r\\n                              [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                              [editConfirm]=\\\"editConfirm\\\"\\r\\n                              [row]=\\\"row\\\"\\r\\n                              [source]=\\\"source\\\"\\r\\n                              (edit)=\\\"edit.emit(row)\\\"\\r\\n                              (delete)=\\\"delete.emit(row)\\\"\\r\\n                              (editRowSelect)=\\\"editRowSelect.emit($event)\\\">\\r\\n    </ng2-st-tbody-edit-delete>\\r\\n  </td>\\r\\n</tr>\\r\\n\\r\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\r\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\r\\n    {{ noDataMessage }}\\r\\n  </td>\\r\\n</tr>\\r\\n\", styles: [\":host .ng2-smart-row.selected{background:rgba(0,0,0,.05)}:host .ng2-smart-row .ng2-smart-actions.ng2-smart-action-multiple-select{text-align:center}:host ::ng-deep ng2-st-tbody-edit-delete a:first-child,:host ::ng-deep ng2-st-tbody-create-cancel a:first-child{margin-right:.25rem}\\n\"] }]\r\n    }], null, { grid: [{\r\n            type: Input\r\n        }], source: [{\r\n            type: Input\r\n        }], deleteConfirm: [{\r\n            type: Input\r\n        }], editConfirm: [{\r\n            type: Input\r\n        }], rowClassFunction: [{\r\n            type: Input\r\n        }], save: [{\r\n            type: Output\r\n        }], cancel: [{\r\n            type: Output\r\n        }], edit: [{\r\n            type: Output\r\n        }], delete: [{\r\n            type: Output\r\n        }], custom: [{\r\n            type: Output\r\n        }], edited: [{\r\n            type: Output\r\n        }], userSelectRow: [{\r\n            type: Output\r\n        }], editRowSelect: [{\r\n            type: Output\r\n        }], multipleSelectRow: [{\r\n            type: Output\r\n        }], rowHover: [{\r\n            type: Output\r\n        }] }); })();\n\nconst TBODY_COMPONENTS = [\r\n    TbodyCreateCancelComponent,\r\n    TbodyEditDeleteComponent,\r\n    TbodyCustomComponent,\r\n    Ng2SmartTableTbodyComponent\r\n];\r\nclass TBodyModule {\r\n}\r\nTBodyModule.ɵfac = function TBodyModule_Factory(t) { return new (t || TBodyModule)(); };\r\nTBodyModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TBodyModule });\r\nTBodyModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            CellModule,\r\n        ]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TBodyModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    CommonModule,\r\n                    FormsModule,\r\n                    CellModule,\r\n                ],\r\n                declarations: [\r\n                    ...TBODY_COMPONENTS,\r\n                ],\r\n                exports: [\r\n                    ...TBODY_COMPONENTS,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TBodyModule, { declarations: [TbodyCreateCancelComponent,\r\n        TbodyEditDeleteComponent,\r\n        TbodyCustomComponent,\r\n        Ng2SmartTableTbodyComponent], imports: [CommonModule,\r\n        FormsModule,\r\n        CellModule], exports: [TbodyCreateCancelComponent,\r\n        TbodyEditDeleteComponent,\r\n        TbodyCustomComponent,\r\n        Ng2SmartTableTbodyComponent] }); })();\n\nconst _c0$6 = [\"ng2-st-checkbox-select-all\", \"\"];\r\nclass CheckboxSelectAllComponent {\r\n}\r\nCheckboxSelectAllComponent.ɵfac = function CheckboxSelectAllComponent_Factory(t) { return new (t || CheckboxSelectAllComponent)(); };\r\nCheckboxSelectAllComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxSelectAllComponent, selectors: [[\"\", \"ng2-st-checkbox-select-all\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\" }, attrs: _c0$6, decls: 1, vars: 1, consts: [[\"type\", \"checkbox\", 3, \"ngModel\"]], template: function CheckboxSelectAllComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelement(0, \"input\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngModel\", ctx.isAllSelected);\r\n    } }, directives: [i1$1.CheckboxControlValueAccessor, i1$1.NgControlStatus, i1$1.NgModel], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxSelectAllComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: '[ng2-st-checkbox-select-all]',\r\n                template: `\r\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\r\n  `,\r\n            }]\r\n    }], null, { grid: [{\r\n            type: Input\r\n        }], source: [{\r\n            type: Input\r\n        }], isAllSelected: [{\r\n            type: Input\r\n        }] }); })();\n\nconst _c0$5 = [\"ng2-st-actions-title\", \"\"];\r\nclass ActionsTitleComponent {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n    }\r\n    ngAfterViewInit() {\r\n        this.ref.nativeElement.classList.add('ng2-smart-actions');\r\n    }\r\n    ngOnChanges() {\r\n        this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\r\n    }\r\n}\r\nActionsTitleComponent.ɵfac = function ActionsTitleComponent_Factory(t) { return new (t || ActionsTitleComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nActionsTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionsTitleComponent, selectors: [[\"\", \"ng2-st-actions-title\", \"\"]], inputs: { grid: \"grid\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$5, decls: 2, vars: 1, consts: [[1, \"ng2-smart-title\"]], template: function ActionsTitleComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0);\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate(ctx.actionsColumnTitle);\r\n    } }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsTitleComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: '[ng2-st-actions-title]',\r\n                template: `\r\n    <div class=\"ng2-smart-title\">{{ actionsColumnTitle }}</div>\r\n  `,\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }]; }, { grid: [{\r\n            type: Input\r\n        }] }); })();\n\nfunction TitleComponent_a_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r3 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"a\", 2);\r\n    i0.ɵɵlistener(\"click\", function TitleComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2._sort($event); });\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.currentDirection);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.column.title, \" \");\r\n} }\r\nfunction TitleComponent_span_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"span\", 3);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(ctx_r1.column.title);\r\n} }\r\nclass TitleComponent {\r\n    constructor() {\r\n        this.currentDirection = '';\r\n        this.sort = new EventEmitter();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.source) {\r\n            if (!changes.source.firstChange) {\r\n                this.dataChangedSub.unsubscribe();\r\n            }\r\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n                const sortConf = this.source.getSort();\r\n                if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\r\n                    this.currentDirection = sortConf[0]['direction'];\r\n                }\r\n                else {\r\n                    this.currentDirection = '';\r\n                }\r\n                sortConf.forEach((fieldConf) => {\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _sort(event) {\r\n        event.preventDefault();\r\n        this.changeSortDirection();\r\n        this.source.setSort([\r\n            {\r\n                field: this.column.id,\r\n                direction: this.currentDirection,\r\n                compare: this.column.getCompareFunction(),\r\n            },\r\n        ]);\r\n        this.sort.emit(null);\r\n    }\r\n    changeSortDirection() {\r\n        if (this.currentDirection) {\r\n            const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\r\n            this.currentDirection = newDirection;\r\n        }\r\n        else {\r\n            this.currentDirection = this.column.sortDirection;\r\n        }\r\n        return this.currentDirection;\r\n    }\r\n}\r\nTitleComponent.ɵfac = function TitleComponent_Factory(t) { return new (t || TitleComponent)(); };\r\nTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TitleComponent, selectors: [[\"ng2-smart-table-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"ng2-smart-sort-link sort\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"ng2-smart-sort\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"ng2-smart-sort-link\", \"sort\", 3, \"ngClass\", \"click\"], [1, \"ng2-smart-sort\"]], template: function TitleComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, TitleComponent_a_0_Template, 2, 2, \"a\", 0);\r\n        i0.ɵɵtemplate(1, TitleComponent_span_1_Template, 2, 1, \"span\", 1);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.column.isSortable);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", !ctx.column.isSortable);\r\n    } }, directives: [i1.NgIf, i1.NgClass], styles: [\"a.sort.asc[_ngcontent-%COMP%], a.sort.desc[_ngcontent-%COMP%]{font-weight:700}a.sort.asc[_ngcontent-%COMP%]:after, a.sort.desc[_ngcontent-%COMP%]:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc[_ngcontent-%COMP%]:after{transform:rotate(-180deg);margin-bottom:-2px}\"] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TitleComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'ng2-smart-table-title', template: `\r\n    <a href=\"#\" *ngIf=\"column.isSortable\"\r\n                (click)=\"_sort($event)\"\r\n                class=\"ng2-smart-sort-link sort\"\r\n                [ngClass]=\"currentDirection\">\r\n      {{ column.title }}\r\n    </a>\r\n    <span class=\"ng2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\r\n  `, styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc:after{transform:rotate(-180deg);margin-bottom:-2px}\\n\"] }]\r\n    }], null, { column: [{\r\n            type: Input\r\n        }], source: [{\r\n            type: Input\r\n        }], sort: [{\r\n            type: Output\r\n        }] }); })();\n\nclass ColumnTitleComponent {\r\n    constructor() {\r\n        this.sort = new EventEmitter();\r\n    }\r\n}\r\nColumnTitleComponent.ɵfac = function ColumnTitleComponent_Factory(t) { return new (t || ColumnTitleComponent)(); };\r\nColumnTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnTitleComponent, selectors: [[\"ng2-st-column-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, decls: 2, vars: 2, consts: [[1, \"ng2-smart-title\"], [3, \"source\", \"column\", \"sort\"]], template: function ColumnTitleComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"ng2-smart-table-title\", 1);\r\n        i0.ɵɵlistener(\"sort\", function ColumnTitleComponent_Template_ng2_smart_table_title_sort_1_listener($event) { return ctx.sort.emit($event); });\r\n        i0.ɵɵelementEnd()();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"source\", ctx.source)(\"column\", ctx.column);\r\n    } }, directives: [TitleComponent], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnTitleComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'ng2-st-column-title',\r\n                template: `\r\n    <div class=\"ng2-smart-title\">\r\n      <ng2-smart-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-smart-table-title>\r\n    </div>\r\n  `,\r\n            }]\r\n    }], null, { column: [{\r\n            type: Input\r\n        }], source: [{\r\n            type: Input\r\n        }], sort: [{\r\n            type: Output\r\n        }] }); })();\n\nconst _c0$4 = [\"ng2-st-thead-titles-row\", \"\"];\r\nfunction TheadTitlesRowComponent_th_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r5 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"th\", 3);\r\n    i0.ɵɵlistener(\"click\", function TheadTitlesRowComponent_th_0_Template_th_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.selectAllRows.emit($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"source\", ctx_r0.source)(\"isAllSelected\", ctx_r0.isAllSelected);\r\n} }\r\nfunction TheadTitlesRowComponent_th_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"th\", 4);\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\r\n} }\r\nfunction TheadTitlesRowComponent_th_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r8 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"th\", 5)(1, \"ng2-st-column-title\", 6);\r\n    i0.ɵɵlistener(\"sort\", function TheadTitlesRowComponent_th_2_Template_ng2_st_column_title_sort_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.sort.emit($event); });\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const column_r6 = ctx.$implicit;\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵclassMapInterpolate1(\"ng2-smart-th \", column_r6.id, \"\");\r\n    i0.ɵɵstyleProp(\"width\", column_r6.width);\r\n    i0.ɵɵproperty(\"ngClass\", column_r6.class);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6);\r\n} }\r\nfunction TheadTitlesRowComponent_th_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"th\", 4);\r\n} if (rf & 2) {\r\n    const ctx_r3 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid);\r\n} }\r\nclass TheadTitlesRowComponent {\r\n    constructor() {\r\n        this.sort = new EventEmitter();\r\n        this.selectAllRows = new EventEmitter();\r\n    }\r\n    ngOnChanges() {\r\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n        this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    }\r\n    getVisibleColumns(columns) {\r\n        return (columns || []).filter((column) => !column.hide);\r\n    }\r\n}\r\nTheadTitlesRowComponent.ɵfac = function TheadTitlesRowComponent_Factory(t) { return new (t || TheadTitlesRowComponent)(); };\r\nTheadTitlesRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadTitlesRowComponent, selectors: [[\"\", \"ng2-st-thead-titles-row\", \"\"]], inputs: { grid: \"grid\", isAllSelected: \"isAllSelected\", source: \"source\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$4, decls: 4, vars: 4, consts: [[\"ng2-st-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\", 4, \"ngIf\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\", 4, \"ngIf\"], [3, \"class\", \"ngClass\", \"width\", 4, \"ngFor\", \"ngForOf\"], [\"ng2-st-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\"], [3, \"ngClass\"], [3, \"source\", \"column\", \"sort\"]], template: function TheadTitlesRowComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, TheadTitlesRowComponent_th_0_Template, 1, 3, \"th\", 0);\r\n        i0.ɵɵtemplate(1, TheadTitlesRowComponent_th_1_Template, 1, 1, \"th\", 1);\r\n        i0.ɵɵtemplate(2, TheadTitlesRowComponent_th_2_Template, 2, 8, \"th\", 2);\r\n        i0.ɵɵtemplate(3, TheadTitlesRowComponent_th_3_Template, 1, 1, \"th\", 1);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\r\n    } }, directives: [i1.NgIf, CheckboxSelectAllComponent, ActionsTitleComponent, i1.NgForOf, i1.NgClass, ColumnTitleComponent], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadTitlesRowComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: '[ng2-st-thead-titles-row]',\r\n                template: `\r\n    <th ng2-st-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\r\n                                   [grid]=\"grid\"\r\n                                   [source]=\"source\"\r\n                                   [isAllSelected]=\"isAllSelected\"\r\n                                   (click)=\"selectAllRows.emit($event)\">\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\r\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\r\n        class=\"ng2-smart-th {{ column.id }}\"\r\n        [ngClass]=\"column.class\"\r\n        [style.width]=\"column.width\">\r\n      <ng2-st-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-st-column-title>\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\r\n  `,\r\n            }]\r\n    }], null, { grid: [{\r\n            type: Input\r\n        }], isAllSelected: [{\r\n            type: Input\r\n        }], source: [{\r\n            type: Input\r\n        }], sort: [{\r\n            type: Output\r\n        }], selectAllRows: [{\r\n            type: Output\r\n        }] }); })();\n\nconst _c0$3 = [\"ng2-st-add-button\", \"\"];\r\nfunction AddButtonComponent_a_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r2 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"a\", 1);\r\n    i0.ɵɵlistener(\"click\", function AddButtonComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return ctx_r1.onAdd($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.addNewButtonContent, i0.ɵɵsanitizeHtml);\r\n} }\r\nclass AddButtonComponent {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.create = new EventEmitter();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.ref.nativeElement.classList.add('ng2-smart-actions-title', 'ng2-smart-actions-title-add');\r\n    }\r\n    ngOnChanges() {\r\n        this.isActionAdd = this.grid.getSetting('actions.add');\r\n        this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\r\n    }\r\n    onAdd(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (this.grid.getSetting('mode') === 'external') {\r\n            this.create.emit({\r\n                source: this.source,\r\n            });\r\n        }\r\n        else {\r\n            this.grid.createFormShown = true;\r\n        }\r\n    }\r\n}\r\nAddButtonComponent.ɵfac = function AddButtonComponent_Factory(t) { return new (t || AddButtonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nAddButtonComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AddButtonComponent, selectors: [[\"\", \"ng2-st-add-button\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$3, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-add-add\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-add-add\", 3, \"innerHTML\", \"click\"]], template: function AddButtonComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, AddButtonComponent_a_0_Template, 1, 1, \"a\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isActionAdd);\r\n    } }, directives: [i1.NgIf], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddButtonComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: '[ng2-st-add-button]',\r\n                template: `\r\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-add\"\r\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\r\n  `,\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }]; }, { grid: [{\r\n            type: Input\r\n        }], source: [{\r\n            type: Input\r\n        }], create: [{\r\n            type: Output\r\n        }] }); })();\n\nconst _c0$2 = [\"ng2-st-thead-filters-row\", \"\"];\r\nfunction TheadFitlersRowComponent_th_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"th\");\r\n} }\r\nfunction TheadFitlersRowComponent_th_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r5 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"th\", 4);\r\n    i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_1_Template_th_create_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.create.emit($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\r\n} }\r\nfunction TheadFitlersRowComponent_th_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r8 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"th\")(1, \"ng2-smart-table-filter\", 5);\r\n    i0.ɵɵlistener(\"filter\", function TheadFitlersRowComponent_th_2_Template_ng2_smart_table_filter_filter_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.filter.emit($event); });\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const column_r6 = ctx.$implicit;\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵclassMapInterpolate1(\"ng2-smart-th \", column_r6.id, \"\");\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6)(\"inputClass\", ctx_r2.filterInputClass);\r\n} }\r\nfunction TheadFitlersRowComponent_th_3_Template(rf, ctx) { if (rf & 1) {\r\n    const _r10 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"th\", 6);\r\n    i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_3_Template_th_create_0_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.create.emit($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r3 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid)(\"source\", ctx_r3.source);\r\n} }\r\nclass TheadFitlersRowComponent {\r\n    constructor() {\r\n        this.create = new EventEmitter();\r\n        this.filter = new EventEmitter();\r\n    }\r\n    ngOnChanges() {\r\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n        this.showActionColumnRight = this.grid.showActionColumn('right');\r\n        this.filterInputClass = this.grid.getSetting('filter.inputClass');\r\n    }\r\n    getVisibleColumns(columns) {\r\n        return (columns || []).filter((column) => !column.hide);\r\n    }\r\n}\r\nTheadFitlersRowComponent.ɵfac = function TheadFitlersRowComponent_Factory(t) { return new (t || TheadFitlersRowComponent)(); };\r\nTheadFitlersRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadFitlersRowComponent, selectors: [[\"\", \"ng2-st-thead-filters-row\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\", filter: \"filter\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$2, decls: 4, vars: 4, consts: [[4, \"ngIf\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"create\", 4, \"ngIf\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"source\", \"create\", 4, \"ngIf\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"create\"], [3, \"source\", \"column\", \"inputClass\", \"filter\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"source\", \"create\"]], template: function TheadFitlersRowComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, TheadFitlersRowComponent_th_0_Template, 1, 0, \"th\", 0);\r\n        i0.ɵɵtemplate(1, TheadFitlersRowComponent_th_1_Template, 1, 1, \"th\", 1);\r\n        i0.ɵɵtemplate(2, TheadFitlersRowComponent_th_2_Template, 2, 6, \"th\", 2);\r\n        i0.ɵɵtemplate(3, TheadFitlersRowComponent_th_3_Template, 1, 2, \"th\", 3);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\r\n    } }, directives: [i1.NgIf, AddButtonComponent, i1.NgForOf, FilterComponent], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFitlersRowComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: '[ng2-st-thead-filters-row]',\r\n                template: `\r\n    <th *ngIf=\"isMultiSelectVisible\"></th>\r\n    <th ng2-st-add-button *ngIf=\"showActionColumnLeft\"\r\n                          [grid]=\"grid\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"ng2-smart-th {{ column.id }}\">\r\n      <ng2-smart-table-filter [source]=\"source\"\r\n                              [column]=\"column\"\r\n                              [inputClass]=\"filterInputClass\"\r\n                              (filter)=\"filter.emit($event)\">\r\n      </ng2-smart-table-filter>\r\n    </th>\r\n    <th ng2-st-add-button *ngIf=\"showActionColumnRight\"\r\n                          [grid]=\"grid\"\r\n                          [source]=\"source\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n  `,\r\n            }]\r\n    }], null, { grid: [{\r\n            type: Input\r\n        }], source: [{\r\n            type: Input\r\n        }], create: [{\r\n            type: Output\r\n        }], filter: [{\r\n            type: Output\r\n        }] }); })();\n\nclass ActionsComponent {\r\n    constructor() {\r\n        this.create = new EventEmitter();\r\n    }\r\n    ngOnChanges() {\r\n        this.createButtonContent = this.grid.getSetting('add.createButtonContent');\r\n        this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\r\n    }\r\n}\r\nActionsComponent.ɵfac = function ActionsComponent_Factory(t) { return new (t || ActionsComponent)(); };\r\nActionsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionsComponent, selectors: [[\"ng2-st-actions\"]], inputs: { grid: \"grid\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-add-create\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-add-cancel\", 3, \"innerHTML\", \"click\"]], template: function ActionsComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"a\", 0);\r\n        i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_0_listener($event) { $event.preventDefault(); return ctx.create.emit($event); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(1, \"a\", 1);\r\n        i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_1_listener($event) { $event.preventDefault(); return ctx.grid.createFormShown = false; });\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"innerHTML\", ctx.createButtonContent, i0.ɵɵsanitizeHtml);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\r\n    } }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'ng2-st-actions',\r\n                template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-create\"\r\n        [innerHTML]=\"createButtonContent\"\r\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\"\r\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\r\n  `,\r\n            }]\r\n    }], null, { grid: [{\r\n            type: Input\r\n        }], create: [{\r\n            type: Output\r\n        }] }); })();\n\nconst _c0$1 = [\"ng2-st-thead-form-row\", \"\"];\r\nfunction TheadFormRowComponent_td_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"td\");\r\n} }\r\nfunction TheadFormRowComponent_td_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r5 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\r\n    i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_1_Template_ng2_st_actions_create_1_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onCreate($event); });\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\r\n} }\r\nfunction TheadFormRowComponent_td_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r8 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"td\")(1, \"ng2-smart-table-cell\", 5);\r\n    i0.ɵɵlistener(\"edited\", function TheadFormRowComponent_td_2_Template_ng2_smart_table_cell_edited_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.onCreate($event); });\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const cell_r6 = ctx.$implicit;\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"cell\", cell_r6)(\"grid\", ctx_r2.grid)(\"isNew\", true)(\"createConfirm\", ctx_r2.createConfirm)(\"inputClass\", ctx_r2.addInputClass)(\"isInEditing\", ctx_r2.grid.getNewRow().isInEditing);\r\n} }\r\nfunction TheadFormRowComponent_td_3_Template(rf, ctx) { if (rf & 1) {\r\n    const _r10 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\r\n    i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_3_Template_ng2_st_actions_create_1_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.onCreate($event); });\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const ctx_r3 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid);\r\n} }\r\nclass TheadFormRowComponent {\r\n    constructor() {\r\n        this.create = new EventEmitter();\r\n    }\r\n    onCreate(event) {\r\n        event.stopPropagation();\r\n        this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n    }\r\n    ngOnChanges() {\r\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n        this.showActionColumnRight = this.grid.showActionColumn('right');\r\n        this.addInputClass = this.grid.getSetting('add.inputClass');\r\n    }\r\n    getVisibleCells(cells) {\r\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\r\n    }\r\n}\r\nTheadFormRowComponent.ɵfac = function TheadFormRowComponent_Factory(t) { return new (t || TheadFormRowComponent)(); };\r\nTheadFormRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadFormRowComponent, selectors: [[\"\", \"ng2-st-thead-form-row\", \"\"]], inputs: { grid: \"grid\", row: \"row\", createConfirm: \"createConfirm\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$1, decls: 4, vars: 3, consts: [[4, \"ngIf\"], [\"class\", \"ng2-smart-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"ng2-smart-actions\"], [3, \"grid\", \"create\"], [3, \"cell\", \"grid\", \"isNew\", \"createConfirm\", \"inputClass\", \"isInEditing\", \"edited\"]], template: function TheadFormRowComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, TheadFormRowComponent_td_0_Template, 1, 0, \"td\", 0);\r\n        i0.ɵɵtemplate(1, TheadFormRowComponent_td_1_Template, 2, 1, \"td\", 1);\r\n        i0.ɵɵtemplate(2, TheadFormRowComponent_td_2_Template, 2, 6, \"td\", 2);\r\n        i0.ɵɵtemplate(3, TheadFormRowComponent_td_3_Template, 2, 1, \"td\", 1);\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleCells(ctx.grid.getNewRow().getCells()));\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\r\n    } }, directives: [i1.NgIf, ActionsComponent, i1.NgForOf, CellComponent], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFormRowComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: '[ng2-st-thead-form-row]',\r\n                template: `\r\n      <td *ngIf=\"\"></td>\r\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\r\n        <ng2-smart-table-cell [cell]=\"cell\"\r\n                              [grid]=\"grid\"\r\n                              [isNew]=\"true\"\r\n                              [createConfirm]=\"createConfirm\"\r\n                              [inputClass]=\"addInputClass\"\r\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\r\n                              (edited)=\"onCreate($event)\">\r\n        </ng2-smart-table-cell>\r\n      </td>\r\n      <td  *ngIf=\"showActionColumnRight\"  class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n  `,\r\n            }]\r\n    }], null, { grid: [{\r\n            type: Input\r\n        }], row: [{\r\n            type: Input\r\n        }], createConfirm: [{\r\n            type: Input\r\n        }], create: [{\r\n            type: Output\r\n        }] }); })();\n\nconst _c0 = [\"ng2-st-thead\", \"\"];\r\nfunction Ng2SmartTableTheadComponent_tr_0_Template(rf, ctx) { if (rf & 1) {\r\n    const _r4 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"tr\", 3);\r\n    i0.ɵɵlistener(\"sort\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_sort_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.sort.emit($event); })(\"selectAllRows\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_selectAllRows_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.selectAllRows.emit($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source);\r\n} }\r\nfunction Ng2SmartTableTheadComponent_tr_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r7 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"tr\", 4);\r\n    i0.ɵɵlistener(\"create\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_create_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.create.emit($event); })(\"filter\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_filter_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.filter.emit($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid)(\"source\", ctx_r1.source);\r\n} }\r\nfunction Ng2SmartTableTheadComponent_tr_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"tr\", 5);\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"grid\", ctx_r2.grid)(\"createConfirm\", ctx_r2.createConfirm);\r\n} }\r\nclass Ng2SmartTableTheadComponent {\r\n    constructor() {\r\n        this.sort = new EventEmitter();\r\n        this.selectAllRows = new EventEmitter();\r\n        this.create = new EventEmitter();\r\n        this.filter = new EventEmitter();\r\n    }\r\n    ngOnChanges() {\r\n        this.isHideHeader = this.grid.getSetting('hideHeader');\r\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n    }\r\n}\r\nNg2SmartTableTheadComponent.ɵfac = function Ng2SmartTableTheadComponent_Factory(t) { return new (t || Ng2SmartTableTheadComponent)(); };\r\nNg2SmartTableTheadComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableTheadComponent, selectors: [[\"\", \"ng2-st-thead\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\", createConfirm: \"createConfirm\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\", create: \"create\", filter: \"filter\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 3, vars: 3, consts: [[\"ng2-st-thead-titles-row\", \"\", \"class\", \"ng2-smart-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\", 4, \"ngIf\"], [\"ng2-st-thead-filters-row\", \"\", \"class\", \"ng2-smart-filters\", 3, \"grid\", \"source\", \"create\", \"filter\", 4, \"ngIf\"], [\"ng2-st-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\", 4, \"ngIf\"], [\"ng2-st-thead-titles-row\", \"\", 1, \"ng2-smart-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\"], [\"ng2-st-thead-filters-row\", \"\", 1, \"ng2-smart-filters\", 3, \"grid\", \"source\", \"create\", \"filter\"], [\"ng2-st-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\"]], template: function Ng2SmartTableTheadComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, Ng2SmartTableTheadComponent_tr_0_Template, 1, 3, \"tr\", 0);\r\n        i0.ɵɵtemplate(1, Ng2SmartTableTheadComponent_tr_1_Template, 1, 2, \"tr\", 1);\r\n        i0.ɵɵtemplate(2, Ng2SmartTableTheadComponent_tr_2_Template, 1, 2, \"tr\", 2);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHideSubHeader);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.grid.createFormShown);\r\n    } }, directives: [i1.NgIf, TheadTitlesRowComponent, TheadFitlersRowComponent, TheadFormRowComponent], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableTheadComponent, [{\r\n        type: Component,\r\n        args: [{ selector: '[ng2-st-thead]', template: \"<tr ng2-st-thead-titles-row *ngIf=\\\"!isHideHeader\\\"\\r\\n                            class=\\\"ng2-smart-titles\\\"\\r\\n                            [grid]=\\\"grid\\\"\\r\\n                            [isAllSelected]=\\\"isAllSelected\\\"\\r\\n                            [source]=\\\"source\\\"\\r\\n                            (sort)=\\\"sort.emit($event)\\\"\\r\\n                            (selectAllRows)=\\\"selectAllRows.emit($event)\\\">\\r\\n</tr>\\r\\n\\r\\n<tr ng2-st-thead-filters-row *ngIf=\\\"!isHideSubHeader\\\"\\r\\n                              class=\\\"ng2-smart-filters\\\"\\r\\n                              [grid]=\\\"grid\\\"\\r\\n                              [source]=\\\"source\\\"\\r\\n                              (create)=\\\"create.emit($event)\\\"\\r\\n                              (filter)=\\\"filter.emit($event)\\\">\\r\\n</tr>\\r\\n\\r\\n<tr ng2-st-thead-form-row *ngIf=\\\"grid.createFormShown\\\"\\r\\n                          [grid]=\\\"grid\\\"\\r\\n                          [createConfirm]=\\\"createConfirm\\\">\\r\\n</tr>\\r\\n\" }]\r\n    }], null, { grid: [{\r\n            type: Input\r\n        }], source: [{\r\n            type: Input\r\n        }], isAllSelected: [{\r\n            type: Input\r\n        }], createConfirm: [{\r\n            type: Input\r\n        }], sort: [{\r\n            type: Output\r\n        }], selectAllRows: [{\r\n            type: Output\r\n        }], create: [{\r\n            type: Output\r\n        }], filter: [{\r\n            type: Output\r\n        }] }); })();\n\nconst THEAD_COMPONENTS = [\r\n    ActionsComponent,\r\n    ActionsTitleComponent,\r\n    AddButtonComponent,\r\n    CheckboxSelectAllComponent,\r\n    ColumnTitleComponent,\r\n    TitleComponent,\r\n    TheadFitlersRowComponent,\r\n    TheadFormRowComponent,\r\n    TheadTitlesRowComponent,\r\n    Ng2SmartTableTheadComponent,\r\n];\r\nclass THeadModule {\r\n}\r\nTHeadModule.ɵfac = function THeadModule_Factory(t) { return new (t || THeadModule)(); };\r\nTHeadModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: THeadModule });\r\nTHeadModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            FilterModule,\r\n            CellModule,\r\n        ]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(THeadModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    CommonModule,\r\n                    FormsModule,\r\n                    FilterModule,\r\n                    CellModule,\r\n                ],\r\n                declarations: [\r\n                    ...THEAD_COMPONENTS,\r\n                ],\r\n                exports: [\r\n                    ...THEAD_COMPONENTS,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(THeadModule, { declarations: [ActionsComponent,\r\n        ActionsTitleComponent,\r\n        AddButtonComponent,\r\n        CheckboxSelectAllComponent,\r\n        ColumnTitleComponent,\r\n        TitleComponent,\r\n        TheadFitlersRowComponent,\r\n        TheadFormRowComponent,\r\n        TheadTitlesRowComponent,\r\n        Ng2SmartTableTheadComponent], imports: [CommonModule,\r\n        FormsModule,\r\n        FilterModule,\r\n        CellModule], exports: [ActionsComponent,\r\n        ActionsTitleComponent,\r\n        AddButtonComponent,\r\n        CheckboxSelectAllComponent,\r\n        ColumnTitleComponent,\r\n        TitleComponent,\r\n        TheadFitlersRowComponent,\r\n        TheadFormRowComponent,\r\n        TheadTitlesRowComponent,\r\n        Ng2SmartTableTheadComponent] }); })();\n\nfunction compareValues(direction, a, b) {\r\n    if (a < b) {\r\n        return -1 * direction;\r\n    }\r\n    if (a > b) {\r\n        return direction;\r\n    }\r\n    return 0;\r\n}\r\nclass LocalSorter {\r\n    static sort(data, field, direction, customCompare) {\r\n        const dir = (direction === 'asc') ? 1 : -1;\r\n        const compare = customCompare ? customCompare : compareValues;\r\n        return data.sort((a, b) => {\r\n            return compare.call(null, dir, a[field], b[field]);\r\n        });\r\n    }\r\n}\n\nfunction filterValues(value, search) {\r\n    return value.toString().toLowerCase().includes(search.toString().toLowerCase());\r\n}\r\nclass LocalFilter {\r\n    static filter(data, field, search, customFilter) {\r\n        const filter = customFilter ? customFilter : filterValues;\r\n        return data.filter((el) => {\r\n            const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\r\n            return filter.call(null, value, search);\r\n        });\r\n    }\r\n}\n\nclass LocalPager {\r\n    static paginate(data, page, perPage) {\r\n        return data.slice(perPage * (page - 1), perPage * page);\r\n    }\r\n}\n\nclass LocalDataSource extends DataSource {\r\n    constructor(data = []) {\r\n        super();\r\n        this.data = [];\r\n        this.filteredAndSorted = [];\r\n        this.sortConf = [];\r\n        this.filterConf = {\r\n            filters: [],\r\n            andOperator: true,\r\n        };\r\n        this.pagingConf = {};\r\n        this.data = data;\r\n    }\r\n    load(data) {\r\n        this.data = data;\r\n        return super.load(data);\r\n    }\r\n    prepend(element) {\r\n        this.reset(true);\r\n        this.data.unshift(element);\r\n        return super.prepend(element);\r\n    }\r\n    append(element) {\r\n        this.reset(true);\r\n        this.data.push(element);\r\n        return super.append(element);\r\n    }\r\n    add(element) {\r\n        this.data.push(element);\r\n        return super.add(element);\r\n    }\r\n    remove(element) {\r\n        this.data = this.data.filter(el => el !== element);\r\n        return super.remove(element);\r\n    }\r\n    update(element, values) {\r\n        return new Promise((resolve, reject) => {\r\n            this.find(element).then((found) => {\r\n                found = deepExtend(found, values);\r\n                super.update(found, values).then(resolve).catch(reject);\r\n            }).catch(reject);\r\n        });\r\n    }\r\n    find(element) {\r\n        const found = this.data.find(el => el === element);\r\n        if (found) {\r\n            return Promise.resolve(found);\r\n        }\r\n        return Promise.reject(new Error('Element was not found in the dataset'));\r\n    }\r\n    getElements() {\r\n        const data = this.data.slice(0);\r\n        return Promise.resolve(this.prepareData(data));\r\n    }\r\n    getFilteredAndSorted() {\r\n        let data = this.data.slice(0);\r\n        this.prepareData(data);\r\n        return Promise.resolve(this.filteredAndSorted);\r\n    }\r\n    getAll() {\r\n        const data = this.data.slice(0);\r\n        return Promise.resolve(data);\r\n    }\r\n    reset(silent = false) {\r\n        if (silent) {\r\n            this.filterConf = {\r\n                filters: [],\r\n                andOperator: true,\r\n            };\r\n            this.sortConf = [];\r\n            this.pagingConf['page'] = 1;\r\n        }\r\n        else {\r\n            this.setFilter([], true, false);\r\n            this.setSort([], false);\r\n            this.setPage(1);\r\n        }\r\n    }\r\n    empty() {\r\n        this.data = [];\r\n        return super.empty();\r\n    }\r\n    count() {\r\n        return this.filteredAndSorted.length;\r\n    }\r\n    /**\r\n     *\r\n     * Array of conf objects\r\n     * [\r\n     *  {field: string, direction: asc|desc|null, compare: Function|null},\r\n     * ]\r\n     * @param conf\r\n     * @param doEmit\r\n     * @returns {LocalDataSource}\r\n     */\r\n    setSort(conf, doEmit = true) {\r\n        if (conf !== null) {\r\n            conf.forEach((fieldConf) => {\r\n                if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {\r\n                    throw new Error('Sort configuration object is not valid');\r\n                }\r\n            });\r\n            this.sortConf = conf;\r\n        }\r\n        super.setSort(conf, doEmit);\r\n        return this;\r\n    }\r\n    /**\r\n     *\r\n     * Array of conf objects\r\n     * [\r\n     *  {field: string, search: string, filter: Function|null},\r\n     * ]\r\n     * @param conf\r\n     * @param andOperator\r\n     * @param doEmit\r\n     * @returns {LocalDataSource}\r\n     */\r\n    setFilter(conf, andOperator = true, doEmit = true) {\r\n        if (conf && conf.length > 0) {\r\n            conf.forEach((fieldConf) => {\r\n                this.addFilter(fieldConf, andOperator, false);\r\n            });\r\n        }\r\n        else {\r\n            this.filterConf = {\r\n                filters: [],\r\n                andOperator: true,\r\n            };\r\n        }\r\n        this.filterConf.andOperator = andOperator;\r\n        this.pagingConf['page'] = 1;\r\n        super.setFilter(conf, andOperator, doEmit);\r\n        return this;\r\n    }\r\n    addFilter(fieldConf, andOperator = true, doEmit = true) {\r\n        if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\r\n            throw new Error('Filter configuration object is not valid');\r\n        }\r\n        let found = false;\r\n        this.filterConf.filters.forEach((currentFieldConf, index) => {\r\n            if (currentFieldConf['field'] === fieldConf['field']) {\r\n                this.filterConf.filters[index] = fieldConf;\r\n                found = true;\r\n            }\r\n        });\r\n        if (!found) {\r\n            this.filterConf.filters.push(fieldConf);\r\n        }\r\n        this.filterConf.andOperator = andOperator;\r\n        super.addFilter(fieldConf, andOperator, doEmit);\r\n        return this;\r\n    }\r\n    setPaging(page, perPage, doEmit = true) {\r\n        this.pagingConf['page'] = page;\r\n        this.pagingConf['perPage'] = perPage;\r\n        super.setPaging(page, perPage, doEmit);\r\n        return this;\r\n    }\r\n    setPage(page, doEmit = true) {\r\n        this.pagingConf['page'] = page;\r\n        super.setPage(page, doEmit);\r\n        return this;\r\n    }\r\n    getSort() {\r\n        return this.sortConf;\r\n    }\r\n    getFilter() {\r\n        return this.filterConf;\r\n    }\r\n    getPaging() {\r\n        return this.pagingConf;\r\n    }\r\n    prepareData(data) {\r\n        data = this.filter(data);\r\n        data = this.sort(data);\r\n        this.filteredAndSorted = data.slice(0);\r\n        return this.paginate(data);\r\n    }\r\n    sort(data) {\r\n        if (this.sortConf) {\r\n            this.sortConf.forEach((fieldConf) => {\r\n                data = LocalSorter\r\n                    .sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\r\n            });\r\n        }\r\n        return data;\r\n    }\r\n    // TODO: refactor?\r\n    filter(data) {\r\n        if (this.filterConf.filters) {\r\n            if (this.filterConf.andOperator) {\r\n                this.filterConf.filters.forEach((fieldConf) => {\r\n                    if (fieldConf['search'].length > 0) {\r\n                        data = LocalFilter\r\n                            .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                let mergedData = [];\r\n                this.filterConf.filters.forEach((fieldConf) => {\r\n                    if (fieldConf['search'].length > 0) {\r\n                        mergedData = mergedData.concat(LocalFilter\r\n                            .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\r\n                    }\r\n                });\r\n                // remove non unique items\r\n                data = mergedData.filter((elem, pos, arr) => {\r\n                    return arr.indexOf(elem) === pos;\r\n                });\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    paginate(data) {\r\n        if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n            data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\r\n        }\r\n        return data;\r\n    }\r\n}\n\nfunction Ng2SmartTableComponent_thead_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r3 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"thead\", 4);\r\n    i0.ɵɵlistener(\"create\", function Ng2SmartTableComponent_thead_1_Template_thead_create_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.create.emit($event); })(\"selectAllRows\", function Ng2SmartTableComponent_thead_1_Template_thead_selectAllRows_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onSelectAllRows($event); })(\"sort\", function Ng2SmartTableComponent_thead_1_Template_thead_sort_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.sort($event); })(\"filter\", function Ng2SmartTableComponent_thead_1_Template_thead_filter_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.filter($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source)(\"createConfirm\", ctx_r0.createConfirm);\r\n} }\r\nfunction Ng2SmartTableComponent_ng2_smart_table_pager_3_Template(rf, ctx) { if (rf & 1) {\r\n    const _r8 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"ng2-smart-table-pager\", 5);\r\n    i0.ɵɵlistener(\"changePage\", function Ng2SmartTableComponent_ng2_smart_table_pager_3_Template_ng2_smart_table_pager_changePage_0_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.changePage($event); });\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"source\", ctx_r1.source)(\"perPageSelect\", ctx_r1.perPageSelect);\r\n} }\r\nclass Ng2SmartTableComponent {\r\n    constructor() {\r\n        this.settings = {};\r\n        this.rowSelect = new EventEmitter();\r\n        this.rowDeselect = new EventEmitter();\r\n        this.userRowSelect = new EventEmitter();\r\n        this.delete = new EventEmitter();\r\n        this.edit = new EventEmitter();\r\n        this.create = new EventEmitter();\r\n        this.custom = new EventEmitter();\r\n        this.deleteConfirm = new EventEmitter();\r\n        this.editConfirm = new EventEmitter();\r\n        this.createConfirm = new EventEmitter();\r\n        this.rowHover = new EventEmitter();\r\n        this.defaultSettings = {\r\n            mode: 'inline',\r\n            selectMode: 'single',\r\n            /**\r\n             * Points to an element in all data\r\n             *\r\n             * when < 0 all lines must be deselected\r\n             */\r\n            selectedRowIndex: 0,\r\n            switchPageToSelectedRowPage: false,\r\n            hideHeader: false,\r\n            hideSubHeader: false,\r\n            actions: {\r\n                columnTitle: 'Actions',\r\n                add: true,\r\n                edit: true,\r\n                delete: true,\r\n                custom: [],\r\n                position: 'left', // left|right\r\n            },\r\n            filter: {\r\n                inputClass: '',\r\n            },\r\n            edit: {\r\n                inputClass: '',\r\n                editButtonContent: 'Edit',\r\n                saveButtonContent: 'Update',\r\n                cancelButtonContent: 'Cancel',\r\n                confirmSave: false,\r\n            },\r\n            add: {\r\n                inputClass: '',\r\n                addButtonContent: 'Add New',\r\n                createButtonContent: 'Create',\r\n                cancelButtonContent: 'Cancel',\r\n                confirmCreate: false,\r\n            },\r\n            delete: {\r\n                deleteButtonContent: 'Delete',\r\n                confirmDelete: false,\r\n            },\r\n            attr: {\r\n                id: '',\r\n                class: '',\r\n            },\r\n            noDataMessage: 'No data found',\r\n            columns: {},\r\n            pager: {\r\n                display: true,\r\n                page: 1,\r\n                perPage: 10,\r\n            },\r\n            rowClassFunction: () => '',\r\n        };\r\n        this.isAllSelected = false;\r\n        this.destroyed$ = new Subject();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.grid) {\r\n            if (changes['settings']) {\r\n                this.grid.setSettings(this.prepareSettings());\r\n            }\r\n            if (changes['source']) {\r\n                this.source = this.prepareSource();\r\n                this.grid.setSource(this.source);\r\n            }\r\n        }\r\n        else {\r\n            this.initGrid();\r\n        }\r\n        this.tableId = this.grid.getSetting('attr.id');\r\n        this.tableClass = this.grid.getSetting('attr.class');\r\n        this.isHideHeader = this.grid.getSetting('hideHeader');\r\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n        this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\r\n        this.rowClassFunction = this.grid.getSetting('rowClassFunction');\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroyed$.next();\r\n    }\r\n    selectRow(index, switchPageToSelectedRowPage = this.grid.getSetting('switchPageToSelectedRowPage')) {\r\n        if (!this.grid) {\r\n            return;\r\n        }\r\n        this.grid.settings.selectedRowIndex = index;\r\n        if (this.isIndexOutOfRange(index)) {\r\n            // we need to deselect all rows if we got an incorrect index\r\n            this.deselectAllRows();\r\n            return;\r\n        }\r\n        if (switchPageToSelectedRowPage) {\r\n            const source = this.source;\r\n            const paging = source.getPaging();\r\n            const page = getPageForRowIndex(index, paging.perPage);\r\n            index = index % paging.perPage;\r\n            this.grid.settings.selectedRowIndex = index;\r\n            if (page !== paging.page) {\r\n                source.setPage(page);\r\n                return;\r\n            }\r\n        }\r\n        const row = this.grid.getRows()[index];\r\n        if (row) {\r\n            this.onSelectRow(row);\r\n        }\r\n        else {\r\n            // we need to deselect all rows if we got an incorrect index\r\n            this.deselectAllRows();\r\n        }\r\n    }\r\n    deselectAllRows() {\r\n        this.grid.dataSet.deselectAll();\r\n        this.emitDeselectRow(null);\r\n    }\r\n    editRowSelect(row) {\r\n        if (this.grid.getSetting('selectMode') === 'multi') {\r\n            this.onMultipleSelectRow(row);\r\n        }\r\n        else {\r\n            this.onSelectRow(row);\r\n        }\r\n    }\r\n    onUserSelectRow(row) {\r\n        if (this.grid.getSetting('selectMode') !== 'multi') {\r\n            this.grid.selectRow(row);\r\n            this.emitUserSelectRow(row);\r\n            this.emitSelectRow(row);\r\n        }\r\n    }\r\n    onRowHover(row) {\r\n        this.rowHover.emit(row);\r\n    }\r\n    multipleSelectRow(row) {\r\n        this.grid.multipleSelectRow(row);\r\n        this.emitUserSelectRow(row);\r\n        this.emitSelectRow(row);\r\n    }\r\n    onSelectAllRows($event) {\r\n        this.isAllSelected = !this.isAllSelected;\r\n        this.grid.selectAllRows(this.isAllSelected);\r\n        this.emitUserSelectRow(null);\r\n        this.emitSelectRow(null);\r\n    }\r\n    onSelectRow(row) {\r\n        this.grid.selectRow(row);\r\n        this.emitSelectRow(row);\r\n    }\r\n    onMultipleSelectRow(row) {\r\n        this.emitSelectRow(row);\r\n    }\r\n    initGrid() {\r\n        this.source = this.prepareSource();\r\n        this.grid = new Grid(this.source, this.prepareSettings());\r\n        this.subscribeToOnSelectRow();\r\n        this.subscribeToOnDeselectRow();\r\n    }\r\n    prepareSource() {\r\n        if (this.source instanceof DataSource) {\r\n            return this.source;\r\n        }\r\n        else if (this.source instanceof Array) {\r\n            return new LocalDataSource(this.source);\r\n        }\r\n        return new LocalDataSource();\r\n    }\r\n    prepareSettings() {\r\n        return deepExtend({}, this.defaultSettings, this.settings);\r\n    }\r\n    changePage($event) {\r\n        this.resetAllSelector();\r\n    }\r\n    sort($event) {\r\n        this.resetAllSelector();\r\n    }\r\n    filter($event) {\r\n        this.resetAllSelector();\r\n    }\r\n    resetAllSelector() {\r\n        this.isAllSelected = false;\r\n    }\r\n    emitUserSelectRow(row) {\r\n        const selectedRows = this.grid.getSelectedRows();\r\n        this.userRowSelect.emit({\r\n            data: row ? row.getData() : null,\r\n            isSelected: row ? row.getIsSelected() : null,\r\n            source: this.source,\r\n            selected: selectedRows && selectedRows.length ? selectedRows.map((r) => r.getData()) : [],\r\n        });\r\n    }\r\n    emitSelectRow(row) {\r\n        const data = {\r\n            data: row ? row.getData() : null,\r\n            isSelected: row ? row.getIsSelected() : null,\r\n            source: this.source,\r\n        };\r\n        this.rowSelect.emit(data);\r\n        if (!row?.isSelected) {\r\n            this.rowDeselect.emit(data);\r\n        }\r\n    }\r\n    emitDeselectRow(row) {\r\n        this.rowDeselect.emit({\r\n            data: row ? row.getData() : null,\r\n            isSelected: row ? row.getIsSelected() : null,\r\n            source: this.source,\r\n        });\r\n    }\r\n    isIndexOutOfRange(index) {\r\n        const dataAmount = this.source?.count();\r\n        return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\r\n    }\r\n    subscribeToOnSelectRow() {\r\n        if (this.onSelectRowSubscription) {\r\n            this.onSelectRowSubscription.unsubscribe();\r\n        }\r\n        this.onSelectRowSubscription = this.grid.onSelectRow()\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((row) => {\r\n            this.emitSelectRow(row);\r\n        });\r\n    }\r\n    subscribeToOnDeselectRow() {\r\n        if (this.onDeselectRowSubscription) {\r\n            this.onDeselectRowSubscription.unsubscribe();\r\n        }\r\n        this.onDeselectRowSubscription = this.grid.onDeselectRow()\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((row) => {\r\n            this.emitDeselectRow(row);\r\n        });\r\n    }\r\n}\r\nNg2SmartTableComponent.ɵfac = function Ng2SmartTableComponent_Factory(t) { return new (t || Ng2SmartTableComponent)(); };\r\nNg2SmartTableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableComponent, selectors: [[\"ng2-smart-table\"]], inputs: { source: \"source\", settings: \"settings\" }, outputs: { rowSelect: \"rowSelect\", rowDeselect: \"rowDeselect\", userRowSelect: \"userRowSelect\", delete: \"delete\", edit: \"edit\", create: \"create\", custom: \"custom\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", rowHover: \"rowHover\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 4, vars: 9, consts: [[3, \"id\", \"ngClass\"], [\"ng2-st-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\", 4, \"ngIf\"], [\"ng2-st-tbody\", \"\", 3, \"grid\", \"source\", \"deleteConfirm\", \"editConfirm\", \"rowClassFunction\", \"edit\", \"delete\", \"custom\", \"userSelectRow\", \"editRowSelect\", \"multipleSelectRow\", \"rowHover\"], [3, \"source\", \"perPageSelect\", \"changePage\", 4, \"ngIf\"], [\"ng2-st-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\"], [3, \"source\", \"perPageSelect\", \"changePage\"]], template: function Ng2SmartTableComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"table\", 0);\r\n        i0.ɵɵtemplate(1, Ng2SmartTableComponent_thead_1_Template, 1, 4, \"thead\", 1);\r\n        i0.ɵɵelementStart(2, \"tbody\", 2);\r\n        i0.ɵɵlistener(\"edit\", function Ng2SmartTableComponent_Template_tbody_edit_2_listener($event) { return ctx.edit.emit($event); })(\"delete\", function Ng2SmartTableComponent_Template_tbody_delete_2_listener($event) { return ctx.delete.emit($event); })(\"custom\", function Ng2SmartTableComponent_Template_tbody_custom_2_listener($event) { return ctx.custom.emit($event); })(\"userSelectRow\", function Ng2SmartTableComponent_Template_tbody_userSelectRow_2_listener($event) { return ctx.onUserSelectRow($event); })(\"editRowSelect\", function Ng2SmartTableComponent_Template_tbody_editRowSelect_2_listener($event) { return ctx.editRowSelect($event); })(\"multipleSelectRow\", function Ng2SmartTableComponent_Template_tbody_multipleSelectRow_2_listener($event) { return ctx.multipleSelectRow($event); })(\"rowHover\", function Ng2SmartTableComponent_Template_tbody_rowHover_2_listener($event) { return ctx.onRowHover($event); });\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵtemplate(3, Ng2SmartTableComponent_ng2_smart_table_pager_3_Template, 1, 2, \"ng2-smart-table-pager\", 3);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"id\", ctx.tableId)(\"ngClass\", ctx.tableClass);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader || !ctx.isHideSubHeader);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"grid\", ctx.grid)(\"source\", ctx.source)(\"deleteConfirm\", ctx.deleteConfirm)(\"editConfirm\", ctx.editConfirm)(\"rowClassFunction\", ctx.rowClassFunction);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isPagerDisplay);\r\n    } }, directives: [i1.NgClass, i1.NgIf, Ng2SmartTableTheadComponent, Ng2SmartTableTbodyComponent, PagerComponent], styles: [\"[_nghost-%COMP%]{font-size:1rem}[_nghost-%COMP%]     *{box-sizing:border-box}[_nghost-%COMP%]     button, [_nghost-%COMP%]     input, [_nghost-%COMP%]     optgroup, [_nghost-%COMP%]     select, [_nghost-%COMP%]     textarea{color:inherit;font:inherit;margin:0}[_nghost-%COMP%]     table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}[_nghost-%COMP%]     table tr th{font-weight:700}[_nghost-%COMP%]     table tr section{font-size:.75em;font-weight:700}[_nghost-%COMP%]     table tr td, [_nghost-%COMP%]     table tr th{font-size:.875em;margin:0;padding:.5em 1em}[_nghost-%COMP%]     a{color:#1e6bb8;text-decoration:none}[_nghost-%COMP%]     a:hover{text-decoration:underline}\"] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableComponent, [{\r\n        type: Component,\r\n        args: [{ selector: 'ng2-smart-table', template: \"<table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\r\\n\\r\\n  <thead ng2-st-thead *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\r\\n                      [grid]=\\\"grid\\\"\\r\\n                      [isAllSelected]=\\\"isAllSelected\\\"\\r\\n                      [source]=\\\"source\\\"\\r\\n                      [createConfirm]=\\\"createConfirm\\\"\\r\\n                      (create)=\\\"create.emit($event)\\\"\\r\\n                      (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\r\\n                      (sort)=\\\"sort($event)\\\"\\r\\n                      (filter)=\\\"filter($event)\\\">\\r\\n  </thead>\\r\\n\\r\\n  <tbody ng2-st-tbody [grid]=\\\"grid\\\"\\r\\n                      [source]=\\\"source\\\"\\r\\n                      [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                      [editConfirm]=\\\"editConfirm\\\"\\r\\n                      [rowClassFunction]=\\\"rowClassFunction\\\"\\r\\n                      (edit)=\\\"edit.emit($event)\\\"\\r\\n                      (delete)=\\\"delete.emit($event)\\\"\\r\\n                      (custom)=\\\"custom.emit($event)\\\"\\r\\n                      (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\r\\n                      (editRowSelect)=\\\"editRowSelect($event)\\\"\\r\\n                      (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\r\\n                      (rowHover)=\\\"onRowHover($event)\\\">\\r\\n  </tbody>\\r\\n\\r\\n</table>\\r\\n\\r\\n<ng2-smart-table-pager *ngIf=\\\"isPagerDisplay\\\"\\r\\n                        [source]=\\\"source\\\"\\r\\n                        [perPageSelect]=\\\"perPageSelect\\\"\\r\\n                        (changePage)=\\\"changePage($event)\\\">\\r\\n</ng2-smart-table-pager>\\r\\n\", styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}\\n\"] }]\r\n    }], null, { source: [{\r\n            type: Input\r\n        }], settings: [{\r\n            type: Input\r\n        }], rowSelect: [{\r\n            type: Output\r\n        }], rowDeselect: [{\r\n            type: Output\r\n        }], userRowSelect: [{\r\n            type: Output\r\n        }], delete: [{\r\n            type: Output\r\n        }], edit: [{\r\n            type: Output\r\n        }], create: [{\r\n            type: Output\r\n        }], custom: [{\r\n            type: Output\r\n        }], deleteConfirm: [{\r\n            type: Output\r\n        }], editConfirm: [{\r\n            type: Output\r\n        }], createConfirm: [{\r\n            type: Output\r\n        }], rowHover: [{\r\n            type: Output\r\n        }] }); })();\n\nclass Ng2SmartTableModule {\r\n}\r\nNg2SmartTableModule.ɵfac = function Ng2SmartTableModule_Factory(t) { return new (t || Ng2SmartTableModule)(); };\r\nNg2SmartTableModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: Ng2SmartTableModule });\r\nNg2SmartTableModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            ReactiveFormsModule,\r\n            CellModule,\r\n            FilterModule,\r\n            PagerModule,\r\n            TBodyModule,\r\n            THeadModule,\r\n        ]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    CommonModule,\r\n                    FormsModule,\r\n                    ReactiveFormsModule,\r\n                    CellModule,\r\n                    FilterModule,\r\n                    PagerModule,\r\n                    TBodyModule,\r\n                    THeadModule,\r\n                ],\r\n                declarations: [\r\n                    Ng2SmartTableComponent,\r\n                ],\r\n                exports: [\r\n                    Ng2SmartTableComponent,\r\n                ],\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(Ng2SmartTableModule, { declarations: [Ng2SmartTableComponent], imports: [CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CellModule,\r\n        FilterModule,\r\n        PagerModule,\r\n        TBodyModule,\r\n        THeadModule], exports: [Ng2SmartTableComponent] }); })();\n\nclass ServerSourceConf {\r\n    constructor({ endPoint = '', sortFieldKey = '', sortDirKey = '', pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\r\n        this.endPoint = endPoint ? endPoint : '';\r\n        this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\r\n        this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\r\n        this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\r\n        this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\r\n        this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\r\n        this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\r\n        this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\r\n    }\r\n}\r\nServerSourceConf.SORT_FIELD_KEY = '_sort';\r\nServerSourceConf.SORT_DIR_KEY = '_order';\r\nServerSourceConf.PAGER_PAGE_KEY = '_page';\r\nServerSourceConf.PAGER_LIMIT_KEY = '_limit';\r\nServerSourceConf.FILTER_FIELD_KEY = '#field#_like';\r\nServerSourceConf.TOTAL_KEY = 'x-total-count';\r\nServerSourceConf.DATA_KEY = '';\n\nclass ServerDataSource extends LocalDataSource {\r\n    constructor(http, conf = {}) {\r\n        super();\r\n        this.http = http;\r\n        this.lastRequestCount = 0;\r\n        this.conf = new ServerSourceConf(conf);\r\n        if (!this.conf.endPoint) {\r\n            throw new Error('At least endPoint must be specified as a configuration of the server data source.');\r\n        }\r\n    }\r\n    count() {\r\n        return this.lastRequestCount;\r\n    }\r\n    getElements() {\r\n        return this.requestElements()\r\n            .pipe(map(res => {\r\n            this.lastRequestCount = this.extractTotalFromResponse(res);\r\n            this.data = this.extractDataFromResponse(res);\r\n            return this.data;\r\n        })).toPromise();\r\n    }\r\n    /**\r\n     * Extracts array of data from server response\r\n     * @param res\r\n     * @returns {any}\r\n     */\r\n    extractDataFromResponse(res) {\r\n        const rawData = res.body;\r\n        const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\r\n        if (data instanceof Array) {\r\n            return data;\r\n        }\r\n        throw new Error(`Data must be an array.\r\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\r\n    }\r\n    /**\r\n     * Extracts total rows count from the server response\r\n     * Looks for the count in the heders first, then in the response body\r\n     * @param res\r\n     * @returns {any}\r\n     */\r\n    extractTotalFromResponse(res) {\r\n        if (res.headers.has(this.conf.totalKey)) {\r\n            return +res.headers.get(this.conf.totalKey);\r\n        }\r\n        else {\r\n            const rawData = res.body;\r\n            return getDeepFromObject(rawData, this.conf.totalKey, 0);\r\n        }\r\n    }\r\n    requestElements() {\r\n        let httpParams = this.createRequesParams();\r\n        return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\r\n    }\r\n    createRequesParams() {\r\n        let httpParams = new HttpParams();\r\n        httpParams = this.addSortRequestParams(httpParams);\r\n        httpParams = this.addFilterRequestParams(httpParams);\r\n        return this.addPagerRequestParams(httpParams);\r\n    }\r\n    addSortRequestParams(httpParams) {\r\n        if (this.sortConf) {\r\n            this.sortConf.forEach((fieldConf) => {\r\n                httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\r\n                httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\r\n            });\r\n        }\r\n        return httpParams;\r\n    }\r\n    addFilterRequestParams(httpParams) {\r\n        if (this.filterConf.filters) {\r\n            this.filterConf.filters.forEach((fieldConf) => {\r\n                if (fieldConf['search']) {\r\n                    httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\r\n                }\r\n            });\r\n        }\r\n        return httpParams;\r\n    }\r\n    addPagerRequestParams(httpParams) {\r\n        if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n            httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\r\n            httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\r\n        }\r\n        return httpParams;\r\n    }\r\n}\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { Cell, DefaultEditor, DefaultFilter, LocalDataSource, Ng2SmartTableComponent, Ng2SmartTableModule, ServerDataSource };\n//# sourceMappingURL=cgokceli-ng2-smart-table.mjs.map\n","map":{"version":3,"file":"cgokceli-ng2-smart-table.mjs","sources":["../../../projects/ng2-smart-table/src/lib/lib/helpers.ts","../../../projects/ng2-smart-table/src/lib/lib/data-set/cell.ts","../../../projects/ng2-smart-table/src/lib/lib/data-set/row.ts","../../../projects/ng2-smart-table/src/lib/lib/data-set/column.ts","../../../projects/ng2-smart-table/src/lib/lib/data-set/data-set.ts","../../../projects/ng2-smart-table/src/lib/lib/grid.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-view-mode/custom-view.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-view-mode/view-cell.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/edit-cell-default.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/custom-edit.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/default-editor.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/select-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/textarea-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/checkbox-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/completer-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/input-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/default-edit.component.html","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/default-edit.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/edit-cell.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell.module.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/data-source.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-default.ts","../../../projects/ng2-smart-table/src/lib/components/filter/custom-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/default-filter.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/select-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/checkbox-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/completer-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/input-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/default-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter.module.ts","../../../projects/ng2-smart-table/src/lib/components/pager/pager.component.ts","../../../projects/ng2-smart-table/src/lib/components/pager/pager.module.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/cells/custom.component.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/cells/edit-delete.component.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/cells/create-cancel.component.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/tbody.component.html","../../../projects/ng2-smart-table/src/lib/components/tbody/tbody.component.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/tbody.module.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/checkbox-select-all.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/actions-title.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/title/title.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/column-title.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/rows/thead-titles-row.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/add-button.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/rows/thead-filters-row.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/actions.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/rows/thead-form-row.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/thead.component.html","../../../projects/ng2-smart-table/src/lib/components/thead/thead.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/thead.module.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/local/local.sorter.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/local/local.filter.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/local/local.pager.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/local/local.data-source.ts","../../../projects/ng2-smart-table/src/lib/ng2-smart-table.component.html","../../../projects/ng2-smart-table/src/lib/ng2-smart-table.component.ts","../../../projects/ng2-smart-table/src/lib/ng2-smart-table.module.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/server/server-source.conf.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/server/server.data-source.ts","../../../projects/ng2-smart-table/src/cgokceli-ng2-smart-table.ts"],"sourcesContent":["import { cloneDeep } from 'lodash';\r\n\r\n/**\r\n * Extending object that entered in first argument.\r\n *\r\n * Returns extended object or false if have no target object or incorrect type.\r\n *\r\n * If you wish to clone source object (without modify it), just use empty new\r\n * object as first argument, like this:\r\n *   deepExtend({}, yourObj_1, [yourObj_N]);\r\n */\r\nexport const deepExtend = function(...objects: Array<any>): any {\r\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    return arguments[0];\r\n  }\r\n\r\n  const target = arguments[0];\r\n\r\n  // convert arguments to array and cut off target object\r\n  const args = Array.prototype.slice.call(arguments, 1);\r\n\r\n  let val, src;\r\n\r\n  args.forEach((obj: any) => {\r\n    // skip argument if it is array or isn't object\r\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\r\n      return;\r\n    }\r\n\r\n    Object.keys(obj).forEach(function (key) {\r\n      src = target[key]; // source value\r\n      val = obj[key]; // new value\r\n\r\n      // recursion prevention\r\n      if (val === target) {\r\n        return;\r\n\r\n        /**\r\n         * if new value isn't object then just overwrite by new value\r\n         * instead of extending.\r\n         */\r\n      } else if (typeof val !== 'object' || val === null) {\r\n        target[key] = val;\r\n        return;\r\n\r\n        // just clone arrays (and recursive clone objects inside)\r\n      } else if (Array.isArray(val)) {\r\n        target[key] = cloneDeep(val);\r\n        return;\r\n\r\n        // overwrite by new value if source isn't object or array\r\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\r\n        target[key] = deepExtend({}, val);\r\n        return;\r\n\r\n        // source value and new value is objects both, extending...\r\n      } else {\r\n        target[key] = deepExtend(src, val);\r\n        return;\r\n      }\r\n    });\r\n  });\r\n\r\n  return target;\r\n};\r\n\r\nexport class Deferred {\r\n\r\n  promise: Promise<any>;\r\n\r\n  resolve: any;\r\n  reject: any;\r\n\r\n  constructor() {\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = resolve;\r\n      this.reject = reject;\r\n    });\r\n  }\r\n}\r\n\r\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\r\nexport function getDeepFromObject(object = {}, name: string, defaultValue?: any) {\r\n  const keys = name.split('.');\r\n  // clone the object\r\n  let level = deepExtend({}, object);\r\n  keys.forEach((k) => {\r\n    if (level && typeof level[k] !== 'undefined') {\r\n      level = level[k];\r\n    }\r\n  });\r\n\r\n  return typeof level === 'undefined' ? defaultValue : level;\r\n}\r\n\r\nexport function getPageForRowIndex(index: number, perPage: number): number {\r\n  // we need to add 1 to convert 0-based index to 1-based page number.\r\n  return Math.floor(index / perPage) + 1;\r\n}\r\n","import { Column } from './column';\r\nimport { DataSet } from './data-set';\r\nimport { Row } from './row';\r\n\r\nexport function prepareValue (value: any) { return value }\r\n\r\nexport class Cell {\r\n\r\n  newValue: any = '';\r\n  protected static PREPARE = prepareValue;\r\n\r\n  constructor(protected value: any, protected row: Row, protected column: any, protected dataSet: DataSet) {\r\n    this.newValue = value;\r\n  }\r\n\r\n  getColumn(): Column {\r\n    return this.column;\r\n  }\r\n\r\n  getRow(): Row {\r\n    return this.row;\r\n  }\r\n\r\n  getValue(): any {\r\n    const valid = this.column.getValuePrepareFunction() instanceof Function;\r\n    const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\r\n    return prepare.call(null, this.value, this.row.getData(), this);\r\n  }\r\n\r\n  setValue(value: any): any {\r\n    this.newValue = value;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.getColumn().id;\r\n  }\r\n\r\n  getTitle(): string {\r\n    return this.getColumn().title;\r\n  }\r\n\r\n  isEditable(): boolean {\r\n    if (this.getRow().index === -1) {\r\n      return this.getColumn().isAddable;\r\n    }\r\n    else {\r\n      return this.getColumn().isEditable;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Cell } from './cell';\r\nimport { Column } from './column';\r\nimport { DataSet } from './data-set';\r\n\r\nexport class Row {\r\n\r\n  isSelected: boolean = false;\r\n  isInEditing: boolean = false;\r\n  cells: Array<Cell> = [];\r\n\r\n\r\n  constructor(public index: number, protected data: any, protected _dataSet: DataSet) {\r\n    this.process();\r\n  }\r\n\r\n  getCell(column: Column): Cell {\r\n    return this.cells.find(el => el.getColumn() === column);\r\n  }\r\n\r\n  getCells() {\r\n    return this.cells;\r\n  }\r\n\r\n  getData(): any {\r\n    return this.data;\r\n  }\r\n\r\n  getIsSelected(): boolean {\r\n    return this.isSelected;\r\n  }\r\n\r\n  getNewData(): any {\r\n    const values = Object.assign({}, this.data);\r\n    this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\r\n    return values;\r\n  }\r\n\r\n  setData(data: any): any {\r\n    this.data = data;\r\n    this.process();\r\n  }\r\n\r\n  process() {\r\n    this.cells = [];\r\n    this._dataSet.getColumns().forEach((column: Column) => {\r\n      const cell = this.createCell(column);\r\n      this.cells.push(cell);\r\n    });\r\n  }\r\n\r\n  createCell(column: Column): Cell {\r\n    const defValue = (column as any).settings.defaultValue ? (column as any).settings.defaultValue : '';\r\n    const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\r\n    return new Cell(value, this, column, this._dataSet);\r\n  }\r\n}\r\n","import { DataSet } from './data-set';\r\n\r\nexport class Column {\r\n\r\n  title: string = '';\r\n  type: string = '';\r\n  class: string = '';\r\n  width: string = '';\r\n  hide: boolean = false;\r\n  isSortable: boolean = false;\r\n  isEditable: boolean = true;\r\n  isAddable: boolean = true;\r\n  isFilterable: boolean = false;\r\n  sortDirection: string = '';\r\n  defaultSortDirection: string = '';\r\n  editor: { type: string, config: any, component: any } = { type: '', config: {}, component: null };\r\n  filter: { type: string, config: any, component: any } = { type: '', config: {}, component: null };\r\n  renderComponent: any = null;\r\n  compareFunction: Function;\r\n  valuePrepareFunction: Function;\r\n  filterFunction: Function;\r\n  onComponentInitFunction: Function;\r\n\r\n  constructor(public id: string, protected settings: any, protected dataSet: DataSet) {\r\n    this.process();\r\n  }\r\n\r\n  getOnComponentInitFunction(): Function {\r\n    return this.onComponentInitFunction;\r\n  }\r\n\r\n  getCompareFunction(): Function {\r\n    return this.compareFunction;\r\n  }\r\n\r\n  getValuePrepareFunction(): Function {\r\n    return this.valuePrepareFunction;\r\n  }\r\n\r\n  getFilterFunction(): Function {\r\n    return this.filterFunction;\r\n  }\r\n\r\n  getConfig(): any {\r\n    return this.editor && this.editor.config;\r\n  }\r\n\r\n  getFilterType(): any {\r\n    return this.filter && this.filter.type;\r\n  }\r\n\r\n  getFilterConfig(): any {\r\n    return this.filter && this.filter.config;\r\n  }\r\n\r\n  protected process() {\r\n    this.title = this.settings['title'];\r\n    this.class = this.settings['class'];\r\n    this.width = this.settings['width'];\r\n    this.hide = !!this.settings['hide'];\r\n    this.type = this.prepareType();\r\n    this.editor = this.settings['editor'];\r\n    this.filter = this.settings['filter'];\r\n    this.renderComponent = this.settings['renderComponent'];\r\n\r\n    this.isFilterable = typeof this.settings['filter'] === 'undefined' ? true : !!this.settings['filter'];\r\n    this.defaultSortDirection = ['asc', 'desc']\r\n      .indexOf(this.settings['sortDirection']) !== -1 ? this.settings['sortDirection'] : '';\r\n    this.isSortable = typeof this.settings['sort'] === 'undefined' ? true : !!this.settings['sort'];\r\n    this.isEditable = typeof this.settings['editable'] === 'undefined' ? true : !!this.settings['editable'];\r\n    this.isAddable=typeof this.settings['addable'] === 'undefined' ? true : !!this.settings['addable'];\r\n    this.sortDirection = this.prepareSortDirection();\r\n\r\n    this.compareFunction = this.settings['compareFunction'];\r\n    this.valuePrepareFunction = this.settings['valuePrepareFunction'];\r\n    this.filterFunction = this.settings['filterFunction'];\r\n    this.onComponentInitFunction = this.settings['onComponentInitFunction'];\r\n  }\r\n\r\n  prepareType(): string {\r\n    return this.settings['type'] || this.determineType();\r\n  }\r\n\r\n  prepareSortDirection(): string {\r\n    return this.settings['sort'] === 'desc' ? 'desc' : 'asc';\r\n  }\r\n\r\n  determineType(): string {\r\n    // TODO: determine type by data\r\n    return 'text';\r\n  }\r\n}\r\n","import { Row } from './row';\r\nimport { Column } from './column';\r\n\r\nexport class DataSet {\r\n\r\n  newRow: Row;\r\n\r\n  protected data: Array<any> = [];\r\n  protected columns: Array<Column> = [];\r\n  protected rows: Array<Row> = [];\r\n  protected selectedRow: Row;\r\n  protected willSelect: string;\r\n\r\n  constructor(data: Array<any> = [], protected columnSettings: Object) {\r\n    this.createColumns(columnSettings);\r\n    this.setData(data);\r\n\r\n    this.createNewRow();\r\n  }\r\n\r\n  setData(data: Array<any>) {\r\n    this.data = data;\r\n    this.createRows();\r\n  }\r\n\r\n  getColumns(): Array<Column> {\r\n    return this.columns;\r\n  }\r\n\r\n  getRows(): Array<Row> {\r\n    return this.rows;\r\n  }\r\n\r\n  getFirstRow(): Row {\r\n    return this.rows[0];\r\n  }\r\n\r\n  getLastRow(): Row {\r\n    return this.rows[this.rows.length - 1];\r\n  }\r\n\r\n  findRowByData(data: any): Row {\r\n    return this.rows.find((row: Row) => row.getData() === data);\r\n  }\r\n\r\n  deselectAll() {\r\n    this.rows.forEach((row) => {\r\n      row.isSelected = false;\r\n    });\r\n    // we need to clear selectedRow field because no one row selected\r\n    this.selectedRow = undefined;\r\n  }\r\n\r\n  selectRow(row: Row): Row | undefined {\r\n    const previousIsSelected = row.isSelected;\r\n    this.deselectAll();\r\n\r\n    row.isSelected = !previousIsSelected;\r\n    this.selectedRow = row;\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  multipleSelectRow(row: Row): Row {\r\n    row.isSelected = !row.isSelected;\r\n    this.selectedRow = row;\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  selectPreviousRow(): Row {\r\n    if (this.rows.length > 0) {\r\n      let index = this.selectedRow ? this.selectedRow.index : 0;\r\n      if (index > this.rows.length - 1) {\r\n        index = this.rows.length - 1;\r\n      }\r\n      this.selectRow(this.rows[index]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  selectFirstRow(): Row | undefined {\r\n    if (this.rows.length > 0) {\r\n      this.selectRow(this.rows[0]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  selectLastRow(): Row | undefined {\r\n    if (this.rows.length > 0) {\r\n      this.selectRow(this.rows[this.rows.length - 1]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  selectRowByIndex(index: number): Row | undefined {\r\n    const rowsLength: number = this.rows.length;\r\n    if (rowsLength === 0) {\r\n      return;\r\n    }\r\n    if (!index) {\r\n      this.selectFirstRow();\r\n      return this.selectedRow;\r\n    }\r\n    if (index > 0 && index < rowsLength) {\r\n      this.selectRow(this.rows[index]);\r\n      return this.selectedRow;\r\n    }\r\n    // we need to deselect all rows if we got an incorrect index\r\n    this.deselectAll();\r\n  }\r\n\r\n  willSelectFirstRow() {\r\n    this.willSelect = 'first';\r\n  }\r\n\r\n  willSelectLastRow() {\r\n    this.willSelect = 'last';\r\n  }\r\n\r\n  select(selectedRowIndex?: number): Row | undefined {\r\n    if (this.getRows().length === 0) {\r\n      return;\r\n    }\r\n    if (this.willSelect) {\r\n      if (this.willSelect === 'first') {\r\n        this.selectFirstRow();\r\n      }\r\n      if (this.willSelect === 'last') {\r\n        this.selectLastRow();\r\n      }\r\n      this.willSelect = '';\r\n    } else {\r\n      this.selectRowByIndex(selectedRowIndex);\r\n    }\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  createNewRow() {\r\n    this.newRow = new Row(-1, {}, this);\r\n    this.newRow.isInEditing = true;\r\n  }\r\n\r\n  /**\r\n   * Create columns by mapping from the settings\r\n   * @param settings\r\n   * @private\r\n   */\r\n  createColumns(settings: any) {\r\n    for (const id in settings) {\r\n      if (settings.hasOwnProperty(id)) {\r\n        this.columns.push(new Column(id, settings[id], this));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create rows based on current data prepared in data source\r\n   * @private\r\n   */\r\n  createRows() {\r\n    this.rows = [];\r\n    this.data.forEach((el, index) => {\r\n      this.rows.push(new Row(index, el, this));\r\n    });\r\n  }\r\n}\r\n","import { Subject, Subscription } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nimport { Deferred, getDeepFromObject, getPageForRowIndex } from './helpers';\r\nimport { Column } from './data-set/column';\r\nimport { Row } from './data-set/row';\r\nimport { DataSet } from './data-set/data-set';\r\nimport { DataSource } from './data-source/data-source';\r\n\r\nexport class Grid {\r\n\r\n  createFormShown: boolean = false;\r\n\r\n  source: DataSource;\r\n  settings: any;\r\n  dataSet: DataSet;\r\n\r\n  onSelectRowSource = new Subject<any>();\r\n  onDeselectRowSource = new Subject<any>();\r\n\r\n  private sourceOnChangedSubscription: Subscription;\r\n  private sourceOnUpdatedSubscription: Subscription;\r\n\r\n  constructor(source: DataSource, settings: any) {\r\n    this.setSettings(settings);\r\n    this.setSource(source);\r\n  }\r\n\r\n  detach(): void {\r\n    if (this.sourceOnChangedSubscription) {\r\n      this.sourceOnChangedSubscription.unsubscribe();\r\n    }\r\n    if (this.sourceOnUpdatedSubscription) {\r\n      this.sourceOnUpdatedSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  showActionColumn(position: string): boolean {\r\n    return this.isCurrentActionsPosition(position) && this.isActionsVisible();\r\n  }\r\n\r\n  isCurrentActionsPosition(position: string): boolean {\r\n    return position == this.getSetting('actions.position');\r\n  }\r\n\r\n  isActionsVisible(): boolean {\r\n    return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\r\n  }\r\n\r\n  isMultiSelectVisible(): boolean {\r\n    return this.getSetting('selectMode') === 'multi';\r\n  }\r\n\r\n  getNewRow(): Row {\r\n    return this.dataSet.newRow;\r\n  }\r\n\r\n  setSettings(settings: Object) {\r\n    this.settings = settings;\r\n    this.dataSet = new DataSet([], this.getSetting('columns'));\r\n\r\n    if (this.source) {\r\n      this.source.refresh();\r\n    }\r\n  }\r\n\r\n  getDataSet(): DataSet {\r\n    return this.dataSet;\r\n  }\r\n\r\n  setSource(source: DataSource) {\r\n    this.source = this.prepareSource(source);\r\n    this.detach();\r\n\r\n    this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes: any) => this.processDataChange(changes));\r\n\r\n    this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data: any) => {\r\n      const changedRow = this.dataSet.findRowByData(data);\r\n      changedRow.setData(data);\r\n    });\r\n  }\r\n\r\n  getSetting(name: string, defaultValue?: any): any {\r\n    return getDeepFromObject(this.settings, name, defaultValue);\r\n  }\r\n\r\n  getColumns(): Array<Column> {\r\n    return this.dataSet.getColumns();\r\n  }\r\n\r\n  getRows(): Array<Row> {\r\n    return this.dataSet.getRows();\r\n  }\r\n\r\n  selectRow(row: Row) {\r\n    this.dataSet.selectRow(row);\r\n  }\r\n\r\n  multipleSelectRow(row: Row) {\r\n    this.dataSet.multipleSelectRow(row);\r\n  }\r\n\r\n  onSelectRow(): Observable<any> {\r\n    return this.onSelectRowSource.asObservable();\r\n  }\r\n\r\n  onDeselectRow(): Observable<any> {\r\n    return this.onDeselectRowSource.asObservable();\r\n  }\r\n\r\n  edit(row: Row) {\r\n    row.isInEditing = true;\r\n  }\r\n\r\n  create(row: Row, confirmEmitter: EventEmitter<any>) {\r\n\r\n    const deferred = new Deferred();\r\n    deferred.promise.then((newData) => {\r\n      newData = newData ? newData : row.getNewData();\r\n      if (deferred.resolve.skipAdd) {\r\n        this.createFormShown = false;\r\n      } else {\r\n        this.source.prepend(newData).then(() => {\r\n          this.createFormShown = false;\r\n          this.dataSet.createNewRow();\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('add.confirmCreate')) {\r\n      confirmEmitter.emit({\r\n        newData: row.getNewData(),\r\n        source: this.source,\r\n        confirm: deferred,\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  save(row: Row, confirmEmitter: EventEmitter<any>) {\r\n\r\n    const deferred = new Deferred();\r\n    deferred.promise.then((newData) => {\r\n      newData = newData ? newData : row.getNewData();\r\n      if (deferred.resolve.skipEdit) {\r\n        row.isInEditing = false;\r\n      } else {\r\n        this.source.update(row.getData(), newData).then(() => {\r\n          row.isInEditing = false;\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('edit.confirmSave')) {\r\n      confirmEmitter.emit({\r\n        data: row.getData(),\r\n        newData: row.getNewData(),\r\n        source: this.source,\r\n        confirm: deferred,\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  delete(row: Row, confirmEmitter: EventEmitter<any>) {\r\n\r\n    const deferred = new Deferred();\r\n    deferred.promise.then(() => {\r\n      this.source.remove(row.getData());\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('delete.confirmDelete')) {\r\n      confirmEmitter.emit({\r\n        data: row.getData(),\r\n        source: this.source,\r\n        confirm: deferred,\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  processDataChange(changes: any) {\r\n    if (this.shouldProcessChange(changes)) {\r\n      this.dataSet.setData(changes['elements']);\r\n      if (this.getSetting('selectMode') !== 'multi') {\r\n        const row = this.determineRowToSelect(changes);\r\n\r\n        if (row) {\r\n          this.onSelectRowSource.next(row);\r\n        } else {\r\n          this.onDeselectRowSource.next(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldProcessChange(changes: any): boolean {\r\n    if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes['action']) !== -1) {\r\n      return true;\r\n    } else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @breaking-change 1.8.0\r\n   * Need to add `| null` in return type\r\n   *\r\n   * TODO: move to selectable? Separate directive\r\n   */\r\n  determineRowToSelect(changes: any): Row {\r\n\r\n    if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\r\n      return this.dataSet.select(this.getRowIndexToSelect());\r\n    }\r\n\r\n    if (this.shouldSkipSelection()) {\r\n      return null;\r\n    }\r\n\r\n    if (changes['action'] === 'remove') {\r\n      if (changes['elements'].length === 0) {\r\n        // we have to store which one to select as the data will be reloaded\r\n        this.dataSet.willSelectLastRow();\r\n      } else {\r\n        return this.dataSet.selectPreviousRow();\r\n      }\r\n    }\r\n    if (changes['action'] === 'append') {\r\n      // we have to store which one to select as the data will be reloaded\r\n      this.dataSet.willSelectLastRow();\r\n    }\r\n    if (changes['action'] === 'add') {\r\n      return this.dataSet.selectFirstRow();\r\n    }\r\n    if (changes['action'] === 'update') {\r\n      return this.dataSet.selectFirstRow();\r\n    }\r\n    if (changes['action'] === 'prepend') {\r\n      // we have to store which one to select as the data will be reloaded\r\n      this.dataSet.willSelectFirstRow();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  prepareSource(source: any): DataSource {\r\n    const initialSource: any = this.getInitialSort();\r\n    if (initialSource && initialSource['field'] && initialSource['direction']) {\r\n      source.setSort([initialSource], false);\r\n    }\r\n    if (this.getSetting('pager.display') === true) {\r\n      source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\r\n    }\r\n\r\n    source.refresh();\r\n    return source;\r\n  }\r\n\r\n  getInitialSort() {\r\n    const sortConf: any = {};\r\n    this.getColumns().forEach((column: Column) => {\r\n      if (column.isSortable && column.defaultSortDirection) {\r\n        sortConf['field'] = column.id;\r\n        sortConf['direction'] = column.defaultSortDirection;\r\n        sortConf['compare'] = column.getCompareFunction();\r\n      }\r\n    });\r\n    return sortConf;\r\n  }\r\n\r\n  getSelectedRows(): Array<any> {\r\n    return this.dataSet.getRows()\r\n      .filter(r => r.isSelected);\r\n  }\r\n\r\n  selectAllRows(status: any) {\r\n    this.dataSet.getRows()\r\n      .forEach(r => r.isSelected = status);\r\n  }\r\n\r\n  getFirstRow(): Row {\r\n    return this.dataSet.getFirstRow();\r\n  }\r\n\r\n  getLastRow(): Row {\r\n    return this.dataSet.getLastRow();\r\n  }\r\n\r\n  private getSelectionInfo(): { perPage: number, page: number, selectedRowIndex: number, switchPageToSelectedRowPage: boolean } {\r\n    const switchPageToSelectedRowPage: boolean = this.getSetting('switchPageToSelectedRowPage');\r\n    const selectedRowIndex: number = Number(this.getSetting('selectedRowIndex', 0)) || 0;\r\n    const { perPage, page }: { perPage: number, page: number } = this.getSetting('pager');\r\n    return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\r\n  }\r\n\r\n  private getRowIndexToSelect(): number {\r\n    const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\r\n    const dataAmount: number = this.source.count();\r\n    /**\r\n     * source - contains all table data\r\n     * dataSet - contains data for current page\r\n     * selectedRowIndex - contains index for data in all data\r\n     *\r\n     * because of that, we need to count index for a specific row in page\r\n     * if\r\n     * `switchPageToSelectedRowPage` - we need to change page automatically\r\n     * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\r\n     * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\r\n     *  if we return index witch not points to existing data - no line will be highlighted)\r\n     */\r\n    return (\r\n      switchPageToSelectedRowPage &&\r\n      selectedRowIndex < dataAmount &&\r\n      selectedRowIndex >= 0\r\n    ) ?\r\n      selectedRowIndex % perPage :\r\n      selectedRowIndex;\r\n  }\r\n\r\n  private getPageToSelect(source: DataSource): number {\r\n    const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\r\n    let pageToSelect: number = Math.max(1, page);\r\n    if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\r\n      pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\r\n    }\r\n    const maxPageAmount: number = Math.ceil(source.count() / perPage);\r\n    return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\r\n  }\r\n\r\n  private shouldSkipSelection(): boolean {\r\n    /**\r\n     * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\r\n     *\r\n     * Therefore, in order to select a row after some changes,\r\n     * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\r\n     *\r\n     * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\r\n     *\r\n     * !!! We should skip a row only in cases when `selectedRowIndex` < 0\r\n     * because when < 0 all lines must be deselected\r\n     */\r\n    const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\r\n    return selectedRowIndex < 0;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ComponentFactoryResolver,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  OnInit,\r\n  OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\nimport { ViewCell } from './view-cell';\r\n\r\n@Component({\r\n  selector: 'custom-view-component',\r\n  template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n})\r\nexport class CustomViewComponent implements OnInit, OnDestroy {\r\n\r\n  customComponent: any;\r\n  @Input() cell: Cell;\r\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.cell && !this.customComponent) {\r\n      this.createCustomComponent();\r\n      this.callOnComponentInit();\r\n      this.patchInstance();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n\r\n  protected createCustomComponent() {\r\n    const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\r\n    this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n  }\r\n\r\n  protected callOnComponentInit() {\r\n    const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\r\n    onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\r\n  }\r\n\r\n  protected patchInstance() {\r\n    Object.assign(this.customComponent.instance, this.getPatch());\r\n  }\r\n\r\n  protected getPatch(): ViewCell {\r\n    return {\r\n      value: this.cell.getValue(),\r\n      rowData: this.cell.getRow().getData()\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-view-mode',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div [ngSwitch]=\"cell.getColumn().type\">\r\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\r\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\r\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\r\n    </div>\r\n    `,\r\n})\r\nexport class ViewCellComponent {\r\n\r\n  @Input() cell: Cell;\r\n}\r\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class EditCellDefault {\r\n\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event: any): boolean {\r\n    this.edited.next(event);\r\n    return false;\r\n  }\r\n\r\n  onStopEditing(): boolean {\r\n    this.cell.getRow().isInEditing = false;\r\n    return false;\r\n  }\r\n\r\n  onClick(event: any) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { EditCellDefault } from './edit-cell-default';\r\n\r\n@Component({\r\n  selector: 'table-cell-custom-editor',\r\n  template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n})\r\nexport class CustomEditComponent extends EditCellDefault implements OnChanges, OnDestroy {\r\n\r\n  customComponent: any;\r\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.cell && !this.customComponent) {\r\n      const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\r\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n\r\n      // set @Inputs and @Outputs of custom component\r\n      this.customComponent.instance.cell = this.cell;\r\n      this.customComponent.instance.inputClass = this.inputClass;\r\n      this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\r\n      this.customComponent.instance.onEdited.subscribe((event: any) => this.onEdited(event));\r\n      this.customComponent.instance.onClick.subscribe((event: any) => this.onClick(event));\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n}\r\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport class DefaultEditor implements Editor {\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string;\r\n\r\n  @Output() onStopEditing = new EventEmitter<any>();\r\n  @Output() onEdited = new EventEmitter<any>();\r\n  @Output() onClick = new EventEmitter<any>();\r\n}\r\n\r\nexport interface Editor {\r\n  cell: Cell;\r\n  inputClass: string;\r\n  onStopEditing: EventEmitter<any>;\r\n  onEdited: EventEmitter<any>;\r\n  onClick: EventEmitter<any>;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'select-editor',\r\n  template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"cell.newValue\"\r\n            [name]=\"cell.getId()\"\r\n            [disabled]=\"!cell.isEditable()\"\r\n            (click)=\"onClick.emit($event)\"\r\n            (keydown.enter)=\"onEdited.emit($event)\"\r\n            (keydown.esc)=\"onStopEditing.emit()\">\r\n\r\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\r\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\r\n        </option>\r\n    </select>\r\n    `,\r\n})\r\nexport class SelectEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'textarea-editor',\r\n  styleUrls: ['./editor.component.scss'],\r\n  template: `\r\n    <textarea [ngClass]=\"inputClass\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"cell.newValue\"\r\n              [name]=\"cell.getId()\"\r\n              [disabled]=\"!cell.isEditable()\"\r\n              [placeholder]=\"cell.getTitle()\"\r\n              (click)=\"onClick.emit($event)\"\r\n              (keydown.enter)=\"onEdited.emit($event)\"\r\n              (keydown.esc)=\"onStopEditing.emit()\">\r\n    </textarea>\r\n    `,\r\n})\r\nexport class TextareaEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'checkbox-editor',\r\n  styleUrls: ['./editor.component.scss'],\r\n  template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           type=\"checkbox\"\r\n           class=\"form-control\"\r\n           [name]=\"cell.getId()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (change)=\"onChange($event)\">\r\n    `,\r\n})\r\nexport class CheckboxEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  onChange(event: any) {\r\n    const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\r\n    const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\r\n    this.cell.newValue = event.target.checked ? trueVal : falseVal;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CompleterService } from 'ng2-completer';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'completer-editor',\r\n  template: `\r\n    <ng2-completer [(ngModel)]=\"completerStr\"\r\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\r\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\r\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"onEditedCompleter($event)\">\r\n    </ng2-completer>\r\n    `,\r\n})\r\nexport class CompleterEditorComponent extends DefaultEditor implements OnInit {\r\n\r\n  completerStr: string = '';\r\n\r\n  constructor(private completerService: CompleterService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\r\n      const config = this.cell.getColumn().getConfig().completer;\r\n      config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n      config.dataService.descriptionField(config.descriptionField);\r\n    }\r\n  }\r\n\r\n  onEditedCompleter(event: { title: '' }): boolean {\r\n    this.cell.newValue = event.title;\r\n    return false;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'input-editor',\r\n  styleUrls: ['./editor.component.scss'],\r\n  template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           class=\"form-control\"\r\n           [(ngModel)]=\"cell.newValue\"\r\n           [name]=\"cell.getId()\"\r\n           [placeholder]=\"cell.getTitle()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (keydown.enter)=\"onEdited.emit($event)\"\r\n           (keydown.esc)=\"onStopEditing.emit()\">\r\n    `,\r\n})\r\nexport class InputEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","<div [ngSwitch]=\"getEditorType()\">\r\n    <select-editor *ngSwitchCase=\"'list'\"\r\n                   [cell]=\"cell\"\r\n                   [inputClass]=\"inputClass\"\r\n                   (onClick)=\"onClick($event)\"\r\n                   (onEdited)=\"onEdited($event)\"\r\n                   (onStopEditing)=\"onStopEditing()\">\r\n    </select-editor>\r\n\r\n    <textarea-editor *ngSwitchCase=\"'textarea'\"\r\n                     [cell]=\"cell\"\r\n                     [inputClass]=\"inputClass\"\r\n                     (onClick)=\"onClick($event)\"\r\n                     (onEdited)=\"onEdited($event)\"\r\n                     (onStopEditing)=\"onStopEditing()\">\r\n    </textarea-editor>\r\n\r\n    <checkbox-editor *ngSwitchCase=\"'checkbox'\"\r\n                     [cell]=\"cell\"\r\n                     [inputClass]=\"inputClass\"\r\n                     (onClick)=\"onClick($event)\">\r\n    </checkbox-editor>\r\n\r\n    <completer-editor *ngSwitchCase=\"'completer'\"\r\n                      [cell]=\"cell\">\r\n    </completer-editor>\r\n\r\n    <input-editor *ngSwitchDefault\r\n                  [cell]=\"cell\"\r\n                  [inputClass]=\"inputClass\"\r\n                  (onClick)=\"onClick($event)\"\r\n                  (onEdited)=\"onEdited($event)\"\r\n                  (onStopEditing)=\"onStopEditing()\">\r\n    </input-editor>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nimport { EditCellDefault } from './edit-cell-default';\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-default-editor',\r\n  templateUrl: './default-edit.component.html',\r\n})\r\nexport class DefaultEditComponent extends EditCellDefault {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getEditorType(): string {\r\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-edit-mode',\r\n  template: `\r\n      <div [ngSwitch]=\"getEditorType()\">\r\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-custom-editor>\r\n        <table-cell-default-editor *ngSwitchDefault\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-default-editor>\r\n      </div>\r\n    `,\r\n})\r\nexport class EditCellComponent {\r\n\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event: any): boolean {\r\n    this.edited.next(event);\r\n    return false;\r\n  }\r\n\r\n  getEditorType(): string {\r\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { Cell } from '../../lib/data-set/cell';\r\nimport { Row } from '../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-cell',\r\n  template: `\r\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\r\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\r\n                          [inputClass]=\"inputClass\"\r\n                          (edited)=\"onEdited($event)\">\r\n    </table-cell-edit-mode>\r\n  `,\r\n})\r\nexport class CellComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n  @Input() createConfirm: EventEmitter<any>;\r\n  @Input() isNew: boolean;\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n  @Input() mode: string = 'inline';\r\n  @Input() isInEditing: boolean = false;\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event: any) {\r\n    if (this.isNew) {\r\n      this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n    } else {\r\n      this.grid.save(this.row, this.editConfirm);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Ng2CompleterModule } from 'ng2-completer';\r\n\r\nimport { CellComponent } from './cell.component';\r\nimport { CustomEditComponent } from './cell-edit-mode/custom-edit.component';\r\nimport { DefaultEditComponent } from './cell-edit-mode/default-edit.component';\r\nimport { EditCellComponent } from './cell-edit-mode/edit-cell.component';\r\nimport { CheckboxEditorComponent } from './cell-editors/checkbox-editor.component';\r\nimport { CompleterEditorComponent } from './cell-editors/completer-editor.component';\r\nimport { InputEditorComponent } from './cell-editors/input-editor.component';\r\nimport { SelectEditorComponent } from './cell-editors/select-editor.component';\r\nimport { TextareaEditorComponent } from './cell-editors/textarea-editor.component';\r\nimport { CustomViewComponent } from './cell-view-mode/custom-view.component';\r\nimport { ViewCellComponent } from './cell-view-mode/view-cell.component';\r\nimport { EditCellDefault } from './cell-edit-mode/edit-cell-default';\r\nimport { DefaultEditor } from './cell-editors/default-editor';\r\n\r\nconst CELL_COMPONENTS = [\r\n  CellComponent,\r\n  EditCellDefault,\r\n  DefaultEditor,\r\n  CustomEditComponent,\r\n  DefaultEditComponent,\r\n  EditCellComponent,\r\n  CheckboxEditorComponent,\r\n  CompleterEditorComponent,\r\n  InputEditorComponent,\r\n  SelectEditorComponent,\r\n  TextareaEditorComponent,\r\n  CustomViewComponent,\r\n  ViewCellComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    Ng2CompleterModule,\r\n  ],\r\n  declarations: [\r\n    ...CELL_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...CELL_COMPONENTS,\r\n  ],\r\n})\r\nexport class CellModule { }\r\n","import { Subject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport abstract class DataSource {\r\n\r\n  protected onChangedSource = new Subject<any>();\r\n  protected onAddedSource = new Subject<any>();\r\n  protected onUpdatedSource = new Subject<any>();\r\n  protected onRemovedSource = new Subject<any>();\r\n\r\n  abstract getAll(): Promise<any>;\r\n  abstract getElements(): Promise<any>;\r\n  abstract getSort(): any;\r\n  abstract getFilter(): any;\r\n  abstract getPaging(): any;\r\n  abstract count(): number;\r\n\r\n  refresh() {\r\n    this.emitOnChanged('refresh');\r\n  }\r\n\r\n  load(data: Array<any>): Promise<any> {\r\n    this.emitOnChanged('load');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  onChanged(): Observable<any> {\r\n    return this.onChangedSource.asObservable();\r\n  }\r\n\r\n  onAdded(): Observable<any> {\r\n    return this.onAddedSource.asObservable();\r\n  }\r\n\r\n  onUpdated(): Observable<any> {\r\n    return this.onUpdatedSource.asObservable();\r\n  }\r\n\r\n  onRemoved(): Observable<any> {\r\n    return this.onRemovedSource.asObservable();\r\n  }\r\n\r\n  prepend(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('prepend');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  append(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('append');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  add(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('add');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  remove(element: any): Promise<any> {\r\n    this.emitOnRemoved(element);\r\n    this.emitOnChanged('remove');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  update(element: any, values: any): Promise<any> {\r\n    this.emitOnUpdated(element);\r\n    this.emitOnChanged('update');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  empty(): Promise<any> {\r\n    this.emitOnChanged('empty');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  setSort(conf: Array<any>, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('sort');\r\n    }\r\n  }\r\n\r\n  setFilter(conf: Array<any>, andOperator?: boolean, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('filter');\r\n    }\r\n  }\r\n\r\n  addFilter(fieldConf: {}, andOperator?: boolean, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('filter');\r\n    }\r\n  }\r\n\r\n  setPaging(page: number, perPage: number, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('paging');\r\n    }\r\n  }\r\n\r\n  setPage(page: number, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('page');\r\n    }\r\n  }\r\n\r\n  protected emitOnRemoved(element: any) {\r\n    this.onRemovedSource.next(element);\r\n  }\r\n\r\n  protected emitOnUpdated(element: any) {\r\n    this.onUpdatedSource.next(element);\r\n  }\r\n\r\n  protected emitOnAdded(element: any) {\r\n    this.onAddedSource.next(element);\r\n  }\r\n\r\n  protected emitOnChanged(action: string) {\r\n    this.getElements().then((elements) => this.onChangedSource.next({\r\n      action: action,\r\n      elements: elements,\r\n      paging: this.getPaging(),\r\n      filter: this.getFilter(),\r\n      sort: this.getSort(),\r\n    }));\r\n  }\r\n}\r\n","import { Output, EventEmitter, Input, Component } from '@angular/core';\r\n\r\nimport { Column } from '../../lib/data-set/column';\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport class FilterDefault {\r\n\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() filter = new EventEmitter<any>();\r\n\r\n  query: string = '';\r\n\r\n  onFilter(query: string) {\r\n    this.source.addFilter({\r\n      field: this.column.id,\r\n      search: query,\r\n      filter: this.column.getFilterFunction(),\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver, Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { FilterDefault } from './filter-default';\r\n\r\n@Component({\r\n  selector: 'custom-table-filter',\r\n  template: `<ng-template #dynamicTarget></ng-template>`,\r\n})\r\nexport class CustomFilterComponent extends FilterDefault implements OnChanges, OnDestroy {\r\n  @Input() query: string;\r\n  customComponent: any;\r\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.column && !this.customComponent) {\r\n      const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\r\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n\r\n      // set @Inputs and @Outputs of custom component\r\n      this.customComponent.instance.query = this.query;\r\n      this.customComponent.instance.column = this.column;\r\n      this.customComponent.instance.source = this.source;\r\n      this.customComponent.instance.inputClass = this.inputClass;\r\n      this.customComponent.instance.filter.subscribe((event: any) => this.onFilter(event));\r\n    }\r\n    if (this.customComponent) {\r\n      this.customComponent.instance.ngOnChanges(changes);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n}\r\n","import { Input, Output, EventEmitter, OnDestroy, Component } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Column } from '../../../lib/data-set/column';\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport class DefaultFilter implements Filter, OnDestroy {\r\n\r\n  delay: number = 300;\r\n  changesSubscription: Subscription;\r\n  @Input() query: string;\r\n  @Input() inputClass: string;\r\n  @Input() column: Column;\r\n  @Output() filter = new EventEmitter<string>();\r\n\r\n  ngOnDestroy() {\r\n    if (this.changesSubscription) {\r\n      this.changesSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  setFilter() {\r\n    this.filter.emit(this.query);\r\n  }\r\n}\r\n\r\nexport interface Filter {\r\n\r\n  delay?: number;\r\n  changesSubscription?: Subscription;\r\n  query: string;\r\n  inputClass: string;\r\n  column: Column;\r\n  filter: EventEmitter<string>;\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { distinctUntilChanged, debounceTime, skip } from 'rxjs/operators';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\n\r\n@Component({\r\n  selector: 'select-filter',\r\n  template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            #inputControl\r\n            [(ngModel)]=\"query\">\r\n\r\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\r\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\r\n          {{ option.title }}\r\n        </option>\r\n    </select>\r\n  `,\r\n})\r\nexport class SelectFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  @ViewChild('inputControl', { read: NgControl, static: true }) inputControl: NgControl;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputControl.valueChanges\r\n      .pipe(\r\n        skip(1),\r\n        distinctUntilChanged(),\r\n        debounceTime(this.delay)\r\n      )\r\n      .subscribe((value: string) => this.setFilter());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'checkbox-filter',\r\n  template: `\r\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n    <a href=\"#\" *ngIf=\"filterActive\"\r\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\r\n  `,\r\n})\r\nexport class CheckboxFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  filterActive: boolean = false;\r\n  inputControl = new FormControl();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.changesSubscription = this.inputControl.valueChanges\r\n      .pipe(debounceTime(this.delay))\r\n      .subscribe((checked: boolean) => {\r\n        this.filterActive = true;\r\n        const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\r\n        const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\r\n        this.query = checked ? trueVal : falseVal;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  resetFilter(event: any) {\r\n    event.preventDefault();\r\n    this.query = '';\r\n    this.inputControl.setValue(false, { emitEvent: false });\r\n    this.filterActive = false;\r\n    this.setFilter();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { CompleterService } from 'ng2-completer';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport { distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'completer-filter',\r\n  template: `\r\n    <ng2-completer [(ngModel)]=\"query\"\r\n                   (ngModelChange)=\"inputTextChanged($event)\"\r\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\r\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\r\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"completerContent.next($event)\">\r\n    </ng2-completer>\r\n  `,\r\n})\r\nexport class CompleterFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  completerContent = new Subject<any>();\r\n\r\n  constructor(private completerService: CompleterService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const config = this.column.getFilterConfig().completer;\r\n    config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n    config.dataService.descriptionField(config.descriptionField);\r\n\r\n    this.changesSubscription = this.completerContent\r\n      .pipe(\r\n        map((ev: any) => (ev && ev.title) || ev || ''),\r\n        distinctUntilChanged(),\r\n        debounceTime(this.delay)\r\n      )\r\n      .subscribe((search: string) => {\r\n        this.query = search;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  inputTextChanged(event: string) {\r\n    // workaround to trigger the search event when the home/end buttons are clicked\r\n    // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\r\n    // so here it gets called manually\r\n    if (event === '') {\r\n      this.completerContent.next(event);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { debounceTime, distinctUntilChanged, skip } from 'rxjs/operators';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\n\r\n@Component({\r\n  selector: 'input-filter',\r\n  template: `\r\n    <input\r\n      [ngClass]=\"inputClass\"\r\n      [formControl]=\"inputControl\"\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      placeholder=\"{{ column.title }}\"/>\r\n  `,\r\n})\r\nexport class InputFilterComponent extends DefaultFilter implements OnInit, OnChanges {\r\n\r\n  inputControl = new FormControl();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.query) {\r\n      this.inputControl.setValue(this.query);\r\n    }\r\n    this.inputControl.valueChanges\r\n      .pipe(\r\n        distinctUntilChanged(),\r\n        debounceTime(this.delay),\r\n      )\r\n      .subscribe((value: string) => {\r\n        this.query = this.inputControl.value;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.query) {\r\n      this.inputControl.setValue(this.query);\r\n    }\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\n\r\nimport {FilterDefault} from \"./filter-default\";\r\n\r\n@Component({\r\n  selector: 'default-table-filter',\r\n  template: `\r\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\r\n      <select-filter *ngSwitchCase=\"'list'\"\r\n                     [query]=\"query\"\r\n                     [ngClass]=\"inputClass\"\r\n                     [column]=\"column\"\r\n                     (filter)=\"onFilter($event)\">\r\n      </select-filter>\r\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\r\n                       [query]=\"query\"\r\n                       [ngClass]=\"inputClass\"\r\n                       [column]=\"column\"\r\n                       (filter)=\"onFilter($event)\">\r\n      </checkbox-filter>\r\n      <completer-filter *ngSwitchCase=\"'completer'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </completer-filter>\r\n      <input-filter *ngSwitchDefault\r\n                    [query]=\"query\"\r\n                    [ngClass]=\"inputClass\"\r\n                    [column]=\"column\"\r\n                    (filter)=\"onFilter($event)\">\r\n      </input-filter>\r\n    </ng-container>\r\n  `,\r\n})\r\nexport class DefaultFilterComponent extends FilterDefault {\r\n  @Input() query: string;\r\n}\r\n","import { Component, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FilterDefault } from './filter-default';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-filter',\r\n  styleUrls: ['./filter.component.scss'],\r\n  template: `\r\n      <div class=\"ng2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\r\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\r\n                             [query]=\"query\"\r\n                             [column]=\"column\"\r\n                             [source]=\"source\"\r\n                             [inputClass]=\"inputClass\"\r\n                             (filter)=\"onFilter($event)\">\r\n        </custom-table-filter>\r\n        <default-table-filter *ngSwitchDefault\r\n                              [query]=\"query\"\r\n                              [column]=\"column\"\r\n                              [source]=\"source\"\r\n                              [inputClass]=\"inputClass\"\r\n                              (filter)=\"onFilter($event)\">\r\n        </default-table-filter>\r\n      </div>\r\n    `,\r\n})\r\nexport class FilterComponent extends FilterDefault implements OnChanges {\r\n  query: string = '';\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        const filterConf = this.source.getFilter();\r\n        if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\r\n          this.query = '';\r\n\r\n          // add a check for existing filters an set the query if one exists for this column\r\n          // this covers instances where the filter is set by user code while maintaining existing functionality\r\n        } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\r\n          filterConf.filters.forEach((k: any, v: any) => {\r\n            if (k.field == this.column.id) {\r\n              this.query = k.search;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2CompleterModule } from 'ng2-completer';\r\n\r\nimport { FilterComponent } from './filter.component';\r\nimport { DefaultFilterComponent } from \"./default-filter.component\";\r\nimport { CustomFilterComponent } from \"./custom-filter.component\";\r\nimport { CheckboxFilterComponent } from './filter-types/checkbox-filter.component';\r\nimport { CompleterFilterComponent } from './filter-types/completer-filter.component';\r\nimport { InputFilterComponent } from './filter-types/input-filter.component';\r\nimport { SelectFilterComponent } from './filter-types/select-filter.component';\r\nimport { DefaultFilter } from './filter-types/default-filter';\r\nimport { FilterDefault } from './filter-default';\r\n\r\nconst FILTER_COMPONENTS = [\r\n  FilterDefault,\r\n  DefaultFilter,\r\n  FilterComponent,\r\n  DefaultFilterComponent,\r\n  CustomFilterComponent,\r\n  CheckboxFilterComponent,\r\n  CompleterFilterComponent,\r\n  InputFilterComponent,\r\n  SelectFilterComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Ng2CompleterModule,\r\n  ],\r\n  declarations: [\r\n    ...FILTER_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...FILTER_COMPONENTS,\r\n  ],\r\n})\r\nexport class FilterModule { }\r\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-pager',\r\n  styleUrls: ['./pager.component.scss'],\r\n  template: `\r\n    <nav *ngIf=\"shouldShow()\" class=\"ng2-smart-pagination-nav\">\r\n      <ul class=\"ng2-smart-pagination pagination\">\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span class=\"sr-only\">First</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link page-link-prev\" href=\"#\"\r\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\r\n            <span aria-hidden=\"true\">&lt;</span>\r\n            <span class=\"sr-only\">Prev</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\r\n          <span class=\"ng2-smart-page-link page-link\"\r\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\r\n        </li>\r\n\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link page-link-next\" href=\"#\"\r\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\r\n            <span aria-hidden=\"true\">&gt;</span>\r\n            <span class=\"sr-only\">Next</span>\r\n          </a>\r\n        </li>\r\n        \r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span class=\"sr-only\">Last</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    \r\n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"ng2-smart-pagination-per-page\">\r\n      <label for=\"per-page\">\r\n        Per Page:\r\n      </label>\r\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\r\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\r\n      </select>\r\n    </nav>\r\n  `,\r\n})\r\nexport class PagerComponent implements OnChanges {\r\n\r\n  @Input() source: DataSource;\r\n  @Input() perPageSelect: any[] = [];\r\n\r\n  @Output() changePage = new EventEmitter<any>();\r\n\r\n  currentPerPage: any;\r\n\r\n  protected pages: Array<any>;\r\n  protected page: number;\r\n  protected count: number = 0;\r\n  protected perPage: number;\r\n\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        this.page = this.source.getPaging().page;\r\n        this.perPage = this.source.getPaging().perPage;\r\n        this.currentPerPage = this.perPage;\r\n        this.count = this.source.count();\r\n        if (this.isPageOutOfBounce()) {\r\n          this.source.setPage(--this.page);\r\n        }\r\n\r\n        this.processPageChange(dataChanges);\r\n        this.initPages();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * We change the page here depending on the action performed against data source\r\n   * if a new element was added to the end of the table - then change the page to the last\r\n   * if a new element was added to the beginning of the table - then to the first page\r\n   * @param changes\r\n   */\r\n  processPageChange(changes: any) {\r\n    if (changes['action'] === 'prepend') {\r\n      this.source.setPage(1);\r\n    }\r\n    if (changes['action'] === 'append') {\r\n      this.source.setPage(this.getLast());\r\n    }\r\n  }\r\n\r\n  shouldShow(): boolean {\r\n    return this.source.count() > this.perPage;\r\n  }\r\n\r\n  paginate(page: number): boolean {\r\n    this.source.setPage(page);\r\n    this.page = page;\r\n    this.changePage.emit({ page });\r\n    return false;\r\n  }\r\n\r\n  next(): boolean {\r\n    return this.paginate(this.getPage() + 1);\r\n  }\r\n\r\n  prev(): boolean {\r\n    return this.paginate(this.getPage() - 1);\r\n  }\r\n\r\n  getPage(): number {\r\n    return this.page;\r\n  }\r\n\r\n  getPages(): Array<any> {\r\n    return this.pages;\r\n  }\r\n\r\n  getLast(): number {\r\n    return Math.ceil(this.count / this.perPage);\r\n  }\r\n\r\n  isPageOutOfBounce(): boolean {\r\n    return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\r\n  }\r\n\r\n  initPages() {\r\n    const pagesCount = this.getLast();\r\n    let showPagesCount = 4;\r\n    showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\r\n    this.pages = [];\r\n\r\n    if (this.shouldShow()) {\r\n\r\n      let middleOne = Math.ceil(showPagesCount / 2);\r\n      middleOne = this.page >= middleOne ? this.page : middleOne;\r\n\r\n      let lastOne = middleOne + Math.floor(showPagesCount / 2);\r\n      lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\r\n\r\n      const firstOne = lastOne - showPagesCount + 1;\r\n\r\n      for (let i = firstOne; i <= lastOne; i++) {\r\n        this.pages.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangePerPage(event: any) {\r\n    if (this.currentPerPage) {\r\n\r\n      if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\r\n        this.source.getPaging().perPage = null;\r\n      } else {\r\n        this.source.getPaging().perPage = this.currentPerPage * 1;\r\n        this.source.refresh();\r\n      }\r\n      this.initPages();\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { PagerComponent } from './pager.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    PagerComponent,\r\n  ],\r\n  exports: [\r\n    PagerComponent,\r\n  ],\r\n})\r\nexport class PagerModule { }\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n    selector: 'ng2-st-tbody-custom',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    template: `\r\n      <a *ngFor=\"let action of grid.getSetting('actions.custom')\" href=\"#\"\r\n         class=\"ng2-smart-action ng2-smart-action-custom-custom\" \r\n         [innerHTML]=\"action.title\"\r\n         (click)=\"onCustom(action, $event)\"></a>\r\n        `\r\n})\r\nexport class TbodyCustomComponent {\r\n\r\n    @Input() grid: Grid;\r\n    @Input() row: Row;\r\n    @Input() source: any;\r\n    @Output() custom = new EventEmitter<any>();\r\n\r\n    onCustom(action: any, event: any) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        this.custom.emit({\r\n            action: action.name,\r\n            data: this.row.getData(),\r\n            source: this.source\r\n        });\r\n    }\r\n\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-st-tbody-edit-delete',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"ng2-smart-action ng2-smart-action-edit-edit\"\r\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\r\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"ng2-smart-action ng2-smart-action-delete-delete\"\r\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\r\n  `,\r\n})\r\nexport class TbodyEditDeleteComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() source: DataSource;\r\n  @Input() deleteConfirm: EventEmitter<any>;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() editRowSelect = new EventEmitter<any>();\r\n\r\n  isActionEdit: boolean;\r\n  isActionDelete: boolean;\r\n  editRowButtonContent: string;\r\n  deleteRowButtonContent: string;\r\n\r\n  onEdit(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.editRowSelect.emit(this.row);\r\n\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.edit.emit({\r\n        data: this.row.getData(),\r\n        source: this.source,\r\n      });\r\n    } else {\r\n      this.grid.edit(this.row);\r\n    }\r\n  }\r\n\r\n  onDelete(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.delete.emit({\r\n        data: this.row.getData(),\r\n        source: this.source,\r\n      });\r\n    } else {\r\n      this.grid.delete(this.row, this.deleteConfirm);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.isActionEdit = this.grid.getSetting('actions.edit');\r\n    this.isActionDelete = this.grid.getSetting('actions.delete');\r\n    this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\r\n    this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\r\n  }\r\n}\r\n","import { Component, Input, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: 'ng2-st-tbody-create-cancel',\r\n  template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-save\"\r\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\r\n  `,\r\n})\r\nexport class TbodyCreateCancelComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n\r\n  cancelButtonContent: string;\r\n  saveButtonContent: string;\r\n\r\n  onSave(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.grid.save(this.row, this.editConfirm);\r\n  }\r\n\r\n  onCancelEdit(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.row.isInEditing = false;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\r\n    this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent')\r\n  }\r\n}\r\n","<tr *ngFor=\"let row of grid.getRows()\" (click)=\"userSelectRow.emit(row)\" (mouseover)=\"rowHover.emit(row)\" class=\"ng2-smart-row\" [className]=\"rowClassFunction(row)\" [ngClass]=\"{selected: row.isSelected}\">\r\n  <td *ngIf=\"isMultiSelectVisible\" class=\"ng2-smart-actions ng2-smart-action-multiple-select\" (click)=\"multipleSelectRow.emit(row)\">\r\n    <input type=\"checkbox\" class=\"form-control\" [ngModel]=\"row.isSelected\">\r\n  </td>\r\n  <td *ngIf=\"!row.isInEditing && showActionColumnLeft\" class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-custom [grid]=\"grid\" (custom)=\"custom.emit($event)\" [row]=\"row\" [source]=\"source\"></ng2-st-tbody-custom>\r\n\r\n    <ng2-st-tbody-edit-delete [grid]=\"grid\"\r\n                              [deleteConfirm]=\"deleteConfirm\"\r\n                              [editConfirm]=\"editConfirm\"\r\n                              (edit)=\"edit.emit(row)\"\r\n                              (delete)=\"delete.emit(row)\"\r\n                              (editRowSelect)=\"editRowSelect.emit($event)\"\r\n                              [row]=\"row\"\r\n                              [source]=\"source\">\r\n    </ng2-st-tbody-edit-delete>\r\n  </td>\r\n   <td *ngIf=\"row.isInEditing && showActionColumnLeft\"  class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\"></ng2-st-tbody-create-cancel>\r\n  </td>\r\n  <td *ngFor=\"let cell of getVisibleCells(row.cells)\">\r\n    <ng2-smart-table-cell [cell]=\"cell\"\r\n                          [grid]=\"grid\"\r\n                          [row]=\"row\"\r\n                          [isNew]=\"false\"\r\n                          [mode]=\"mode\"\r\n                          [editConfirm]=\"editConfirm\"\r\n                          [inputClass]=\"editInputClass\"\r\n                          [isInEditing]=\"row.isInEditing\">\r\n    </ng2-smart-table-cell>\r\n  </td>\r\n\r\n  <td *ngIf=\"row.isInEditing && showActionColumnRight\"  class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\"></ng2-st-tbody-create-cancel>\r\n  </td>\r\n\r\n  <td *ngIf=\"!row.isInEditing && showActionColumnRight\" class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-custom [grid]=\"grid\" (custom)=\"custom.emit($event)\" [row]=\"row\" [source]=\"source\"></ng2-st-tbody-custom>\r\n\r\n    <ng2-st-tbody-edit-delete [grid]=\"grid\"\r\n                              [deleteConfirm]=\"deleteConfirm\"\r\n                              [editConfirm]=\"editConfirm\"\r\n                              [row]=\"row\"\r\n                              [source]=\"source\"\r\n                              (edit)=\"edit.emit(row)\"\r\n                              (delete)=\"delete.emit(row)\"\r\n                              (editRowSelect)=\"editRowSelect.emit($event)\">\r\n    </ng2-st-tbody-edit-delete>\r\n  </td>\r\n</tr>\r\n\r\n<tr *ngIf=\"grid.getRows().length == 0\">\r\n  <td [attr.colspan]=\"tableColumnsCount\">\r\n    {{ noDataMessage }}\r\n  </td>\r\n</tr>\r\n","import {Component, Input, Output, EventEmitter, } from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\nimport { Cell } from '../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: '[ng2-st-tbody]',\r\n  styleUrls: ['./tbody.component.scss'],\r\n  templateUrl: './tbody.component.html',\r\n})\r\nexport class Ng2SmartTableTbodyComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n  @Input() deleteConfirm: EventEmitter<any>;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n  @Input() rowClassFunction: Function;\r\n\r\n  @Output() save = new EventEmitter<any>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() custom = new EventEmitter<any>();\r\n  @Output() edited = new EventEmitter<any>();\r\n  @Output() userSelectRow = new EventEmitter<any>();\r\n  @Output() editRowSelect = new EventEmitter<any>();\r\n  @Output() multipleSelectRow = new EventEmitter<any>();\r\n  @Output() rowHover = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n  mode: string;\r\n  editInputClass: string;\r\n  isActionAdd: boolean;\r\n  isActionEdit: boolean;\r\n  isActionDelete: boolean;\r\n  noDataMessage: boolean;\r\n\r\n  get tableColumnsCount() {\r\n    const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\r\n    return this.grid.getColumns().length + actionColumns;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.mode = this.grid.getSetting('mode');\r\n    this.editInputClass = this.grid.getSetting('edit.inputClass');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    this.isActionAdd = this.grid.getSetting('actions.add');\r\n    this.isActionEdit = this.grid.getSetting('actions.edit');\r\n    this.isActionDelete = this.grid.getSetting('actions.delete');\r\n    this.noDataMessage = this.grid.getSetting('noDataMessage');\r\n  }\r\n\r\n  getVisibleCells(cells: Array<Cell>): Array<Cell> {\r\n    return (cells || []).filter((cell: Cell) => !cell.getColumn().hide);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { CellModule } from '../cell/cell.module';\r\n\r\nimport { Ng2SmartTableTbodyComponent } from './tbody.component';\r\nimport { TbodyCreateCancelComponent } from './cells/create-cancel.component';\r\nimport { TbodyEditDeleteComponent } from './cells/edit-delete.component';\r\nimport { TbodyCustomComponent } from './cells/custom.component';\r\n\r\nconst TBODY_COMPONENTS = [\r\n  TbodyCreateCancelComponent,\r\n  TbodyEditDeleteComponent,\r\n  TbodyCustomComponent,\r\n  Ng2SmartTableTbodyComponent\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    CellModule,\r\n  ],\r\n  declarations: [\r\n    ...TBODY_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...TBODY_COMPONENTS,\r\n  ],\r\n})\r\nexport class TBodyModule { }\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: '[ng2-st-checkbox-select-all]',\r\n  template: `\r\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\r\n  `,\r\n})\r\nexport class CheckboxSelectAllComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n  @Input() isAllSelected: boolean;\r\n}\r\n","import {Component, Input, AfterViewInit, ElementRef, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: '[ng2-st-actions-title]',\r\n  template: `\r\n    <div class=\"ng2-smart-title\">{{ actionsColumnTitle }}</div>\r\n  `,\r\n})\r\nexport class ActionsTitleComponent implements AfterViewInit, OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n\r\n  actionsColumnTitle: string;\r\n\r\n  constructor(private ref: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.ref.nativeElement.classList.add('ng2-smart-actions');\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { DataSource } from '../../../../lib/data-source/data-source';\r\nimport { Column } from '../../../../lib/data-set/column';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-title',\r\n  styleUrls: ['./title.component.scss'],\r\n  template: `\r\n    <a href=\"#\" *ngIf=\"column.isSortable\"\r\n                (click)=\"_sort($event)\"\r\n                class=\"ng2-smart-sort-link sort\"\r\n                [ngClass]=\"currentDirection\">\r\n      {{ column.title }}\r\n    </a>\r\n    <span class=\"ng2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\r\n  `,\r\n})\r\nexport class TitleComponent implements OnChanges {\r\n\r\n  currentDirection = '';\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n  @Output() sort = new EventEmitter<any>();\r\n\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        const sortConf = this.source.getSort();\r\n\r\n        if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\r\n          this.currentDirection = sortConf[0]['direction'];\r\n        } else {\r\n          this.currentDirection = '';\r\n        }\r\n\r\n        sortConf.forEach((fieldConf: any) => {\r\n\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  _sort(event: any) {\r\n    event.preventDefault();\r\n    this.changeSortDirection();\r\n    this.source.setSort([\r\n      {\r\n        field: this.column.id,\r\n        direction: this.currentDirection,\r\n        compare: this.column.getCompareFunction(),\r\n      },\r\n    ]);\r\n    this.sort.emit(null);\r\n  }\r\n\r\n  changeSortDirection(): string {\r\n    if (this.currentDirection) {\r\n      const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\r\n      this.currentDirection = newDirection;\r\n    } else {\r\n      this.currentDirection = this.column.sortDirection;\r\n    }\r\n    return this.currentDirection;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Column } from '../../../lib/data-set/column';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-st-column-title',\r\n  template: `\r\n    <div class=\"ng2-smart-title\">\r\n      <ng2-smart-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-smart-table-title>\r\n    </div>\r\n  `,\r\n})\r\nexport class ColumnTitleComponent {\r\n\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() sort = new EventEmitter<any>();\r\n\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\nimport { Column } from \"../../../lib/data-set/column\";\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-titles-row]',\r\n  template: `\r\n    <th ng2-st-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\r\n                                   [grid]=\"grid\"\r\n                                   [source]=\"source\"\r\n                                   [isAllSelected]=\"isAllSelected\"\r\n                                   (click)=\"selectAllRows.emit($event)\">\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\r\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\r\n        class=\"ng2-smart-th {{ column.id }}\"\r\n        [ngClass]=\"column.class\"\r\n        [style.width]=\"column.width\">\r\n      <ng2-st-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-st-column-title>\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\r\n  `,\r\n})\r\nexport class TheadTitlesRowComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() isAllSelected: boolean;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() sort = new EventEmitter<any>();\r\n  @Output() selectAllRows = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n\r\n\r\n  ngOnChanges() {\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n  }\r\n\r\n  getVisibleColumns(columns: Array<Column>): Array<Column> {\r\n    return (columns || []).filter((column: Column) => !column.hide);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, AfterViewInit, ElementRef, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: '[ng2-st-add-button]',\r\n  template: `\r\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-add\"\r\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\r\n  `,\r\n})\r\nexport class AddButtonComponent implements AfterViewInit, OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  isActionAdd: boolean;\r\n  addNewButtonContent: string;\r\n\r\n  constructor(private ref: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.ref.nativeElement.classList.add('ng2-smart-actions-title', 'ng2-smart-actions-title-add');\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.isActionAdd = this.grid.getSetting('actions.add');\r\n    this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\r\n  }\r\n\r\n  onAdd(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.create.emit({\r\n        source: this.source,\r\n      });\r\n    } else {\r\n      this.grid.createFormShown = true;\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\nimport { Column } from \"../../../lib/data-set/column\";\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-filters-row]',\r\n  template: `\r\n    <th *ngIf=\"isMultiSelectVisible\"></th>\r\n    <th ng2-st-add-button *ngIf=\"showActionColumnLeft\"\r\n                          [grid]=\"grid\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"ng2-smart-th {{ column.id }}\">\r\n      <ng2-smart-table-filter [source]=\"source\"\r\n                              [column]=\"column\"\r\n                              [inputClass]=\"filterInputClass\"\r\n                              (filter)=\"filter.emit($event)\">\r\n      </ng2-smart-table-filter>\r\n    </th>\r\n    <th ng2-st-add-button *ngIf=\"showActionColumnRight\"\r\n                          [grid]=\"grid\"\r\n                          [source]=\"source\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n  `,\r\n})\r\nexport class TheadFitlersRowComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() create = new EventEmitter<any>();\r\n  @Output() filter = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n  filterInputClass: string;\r\n\r\n  ngOnChanges() {\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    this.filterInputClass = this.grid.getSetting('filter.inputClass');\r\n  }\r\n\r\n  getVisibleColumns(columns: Array<Column>): Array<Column> {\r\n    return (columns || []).filter((column: Column) => !column.hide);\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: 'ng2-st-actions',\r\n  template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-create\"\r\n        [innerHTML]=\"createButtonContent\"\r\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\"\r\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\r\n  `,\r\n})\r\nexport class ActionsComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  createButtonContent: string;\r\n  cancelButtonContent: string;\r\n\r\n  ngOnChanges() {\r\n    this.createButtonContent = this.grid.getSetting('add.createButtonContent');\r\n    this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-form-row]',\r\n  template: `\r\n      <td *ngIf=\"\"></td>\r\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\r\n        <ng2-smart-table-cell [cell]=\"cell\"\r\n                              [grid]=\"grid\"\r\n                              [isNew]=\"true\"\r\n                              [createConfirm]=\"createConfirm\"\r\n                              [inputClass]=\"addInputClass\"\r\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\r\n                              (edited)=\"onCreate($event)\">\r\n        </ng2-smart-table-cell>\r\n      </td>\r\n      <td  *ngIf=\"showActionColumnRight\"  class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n  `,\r\n})\r\nexport class TheadFormRowComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() createConfirm: EventEmitter<any>;\r\n\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n  addInputClass: string;\r\n\r\n  onCreate(event: any) {\r\n    event.stopPropagation();\r\n\r\n    this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    this.addInputClass = this.grid.getSetting('add.inputClass');\r\n  }\r\n\r\n  getVisibleCells(cells: Array<Cell>): Array<Cell> {\r\n    return (cells || []).filter((cell: Cell) => !cell.getColumn().hide);\r\n  }\r\n}\r\n","<tr ng2-st-thead-titles-row *ngIf=\"!isHideHeader\"\r\n                            class=\"ng2-smart-titles\"\r\n                            [grid]=\"grid\"\r\n                            [isAllSelected]=\"isAllSelected\"\r\n                            [source]=\"source\"\r\n                            (sort)=\"sort.emit($event)\"\r\n                            (selectAllRows)=\"selectAllRows.emit($event)\">\r\n</tr>\r\n\r\n<tr ng2-st-thead-filters-row *ngIf=\"!isHideSubHeader\"\r\n                              class=\"ng2-smart-filters\"\r\n                              [grid]=\"grid\"\r\n                              [source]=\"source\"\r\n                              (create)=\"create.emit($event)\"\r\n                              (filter)=\"filter.emit($event)\">\r\n</tr>\r\n\r\n<tr ng2-st-thead-form-row *ngIf=\"grid.createFormShown\"\r\n                          [grid]=\"grid\"\r\n                          [createConfirm]=\"createConfirm\">\r\n</tr>\r\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n    selector: '[ng2-st-thead]',\r\n    templateUrl: './thead.component.html',\r\n})\r\nexport class Ng2SmartTableTheadComponent implements OnChanges {\r\n\r\n    @Input() grid: Grid;\r\n    @Input() source: DataSource;\r\n    @Input() isAllSelected: boolean;\r\n    @Input() createConfirm: EventEmitter<any>;\r\n\r\n    @Output() sort = new EventEmitter<any>();\r\n    @Output() selectAllRows = new EventEmitter<any>();\r\n    @Output() create = new EventEmitter<any>();\r\n    @Output() filter = new EventEmitter<any>();\r\n\r\n    isHideHeader: boolean;\r\n    isHideSubHeader: boolean;\r\n\r\n  ngOnChanges() {\r\n      this.isHideHeader = this.grid.getSetting('hideHeader');\r\n      this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { FilterModule } from '../filter/filter.module';\r\nimport { CellModule } from '../cell/cell.module';\r\n\r\nimport { Ng2SmartTableTheadComponent } from './thead.component';\r\nimport { ActionsComponent } from './cells/actions.component';\r\nimport { ActionsTitleComponent } from './cells/actions-title.component';\r\nimport { AddButtonComponent } from './cells/add-button.component';\r\nimport { CheckboxSelectAllComponent } from './cells/checkbox-select-all.component';\r\nimport { ColumnTitleComponent } from './cells/column-title.component';\r\nimport { TitleComponent } from './cells/title/title.component';\r\nimport { TheadFitlersRowComponent } from './rows/thead-filters-row.component';\r\nimport { TheadFormRowComponent } from './rows/thead-form-row.component';\r\nimport { TheadTitlesRowComponent } from './rows/thead-titles-row.component';\r\n\r\nconst THEAD_COMPONENTS = [\r\n  ActionsComponent,\r\n  ActionsTitleComponent,\r\n  AddButtonComponent,\r\n  CheckboxSelectAllComponent,\r\n  ColumnTitleComponent,\r\n  TitleComponent,\r\n  TheadFitlersRowComponent,\r\n  TheadFormRowComponent,\r\n  TheadTitlesRowComponent,\r\n  Ng2SmartTableTheadComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FilterModule,\r\n    CellModule,\r\n  ],\r\n  declarations: [\r\n    ...THEAD_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...THEAD_COMPONENTS,\r\n  ],\r\n})\r\nexport class THeadModule { }\r\n","export function compareValues(direction: any, a: any, b: any) {\r\n  if (a < b) {\r\n    return -1 * direction;\r\n  }\r\n  if (a > b) {\r\n    return direction;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport class LocalSorter {\r\n\r\n  static sort(data: Array<any>, field: string, direction: string, customCompare?: Function): Array<any> {\r\n\r\n    const dir: number = (direction === 'asc') ? 1 : -1;\r\n    const compare: Function = customCompare ? customCompare : compareValues;\r\n\r\n    return data.sort((a, b) => {\r\n      return compare.call(null, dir, a[field], b[field]);\r\n    });\r\n  }\r\n}\r\n","export function filterValues(value: string, search: string) {\r\n  return value.toString().toLowerCase().includes(search.toString().toLowerCase());\r\n}\r\n\r\nexport class LocalFilter {\r\n\r\n  static filter(data: Array<any>, field: string, search: string, customFilter?: Function): Array<any> {\r\n    const filter: Function = customFilter ? customFilter : filterValues;\r\n\r\n    return data.filter((el) => {\r\n      const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\r\n      return filter.call(null, value, search);\r\n    });\r\n  }\r\n}\r\n","export class LocalPager {\r\n\r\n  static paginate(data: Array<any>, page: number, perPage: number): Array<any> {\r\n    return data.slice(perPage * (page - 1), perPage * page);\r\n  }\r\n}\r\n","import { LocalSorter } from './local.sorter';\r\nimport { LocalFilter } from './local.filter';\r\nimport { LocalPager } from './local.pager';\r\nimport { DataSource } from '../data-source';\r\nimport { deepExtend } from '../../helpers';\r\n\r\nexport class LocalDataSource extends DataSource {\r\n\r\n  protected data: Array<any> = [];\r\n  protected filteredAndSorted: Array<any> = [];\r\n  protected sortConf: Array<any> = [];\r\n  protected filterConf: any = {\r\n    filters: [],\r\n    andOperator: true,\r\n  };\r\n  protected pagingConf: any = {};\r\n\r\n  constructor(data: Array<any> = []) {\r\n    super();\r\n\r\n    this.data = data;\r\n  }\r\n\r\n  load(data: Array<any>): Promise<any> {\r\n    this.data = data;\r\n\r\n    return super.load(data);\r\n  }\r\n\r\n  prepend(element: any): Promise<any> {\r\n    this.reset(true);\r\n\r\n    this.data.unshift(element);\r\n    return super.prepend(element);\r\n  }\r\n\r\n  append(element: any): Promise<any> {\r\n    this.reset(true);\r\n\r\n    this.data.push(element);\r\n    return super.append(element);\r\n  }\r\n\r\n  add(element: any): Promise<any> {\r\n    this.data.push(element);\r\n\r\n    return super.add(element);\r\n  }\r\n\r\n  remove(element: any): Promise<any> {\r\n    this.data = this.data.filter(el => el !== element);\r\n\r\n    return super.remove(element);\r\n  }\r\n\r\n  update(element: any, values: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.find(element).then((found) => {\r\n        found = deepExtend(found, values);\r\n        super.update(found, values).then(resolve).catch(reject);\r\n      }).catch(reject);\r\n    });\r\n  }\r\n\r\n  find(element: any): Promise<any> {\r\n    const found = this.data.find(el => el === element);\r\n    if (found) {\r\n      return Promise.resolve(found);\r\n    }\r\n\r\n    return Promise.reject(new Error('Element was not found in the dataset'));\r\n  }\r\n\r\n  getElements(): Promise<any> {\r\n    const data = this.data.slice(0);\r\n    return Promise.resolve(this.prepareData(data));\r\n  }\r\n\r\n  getFilteredAndSorted(): Promise<any> {\r\n    let data = this.data.slice(0);\r\n    this.prepareData(data);\r\n    return Promise.resolve(this.filteredAndSorted);\r\n  }\r\n\r\n  getAll(): Promise<any> {\r\n    const data = this.data.slice(0);\r\n    return Promise.resolve(data);\r\n  }\r\n\r\n  reset(silent = false) {\r\n    if (silent) {\r\n      this.filterConf = {\r\n        filters: [],\r\n        andOperator: true,\r\n      };\r\n      this.sortConf = [];\r\n      this.pagingConf['page'] = 1;\r\n    } else {\r\n      this.setFilter([], true, false);\r\n      this.setSort([], false);\r\n      this.setPage(1);\r\n    }\r\n  }\r\n\r\n  empty(): Promise<any> {\r\n    this.data = [];\r\n\r\n    return super.empty();\r\n  }\r\n\r\n  count(): number {\r\n    return this.filteredAndSorted.length;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Array of conf objects\r\n   * [\r\n   *  {field: string, direction: asc|desc|null, compare: Function|null},\r\n   * ]\r\n   * @param conf\r\n   * @param doEmit\r\n   * @returns {LocalDataSource}\r\n   */\r\n  setSort(conf: Array<any>, doEmit = true): LocalDataSource {\r\n    if (conf !== null) {\r\n\r\n      conf.forEach((fieldConf) => {\r\n        if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {\r\n          throw new Error('Sort configuration object is not valid');\r\n        }\r\n      });\r\n      this.sortConf = conf;\r\n    }\r\n\r\n    super.setSort(conf, doEmit);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Array of conf objects\r\n   * [\r\n   *  {field: string, search: string, filter: Function|null},\r\n   * ]\r\n   * @param conf\r\n   * @param andOperator\r\n   * @param doEmit\r\n   * @returns {LocalDataSource}\r\n   */\r\n  setFilter(conf: Array<any>, andOperator = true, doEmit = true): LocalDataSource {\r\n    if (conf && conf.length > 0) {\r\n      conf.forEach((fieldConf) => {\r\n        this.addFilter(fieldConf, andOperator, false);\r\n      });\r\n    } else {\r\n      this.filterConf = {\r\n        filters: [],\r\n        andOperator: true,\r\n      };\r\n    }\r\n    this.filterConf.andOperator = andOperator;\r\n    this.pagingConf['page'] = 1;\r\n\r\n    super.setFilter(conf, andOperator, doEmit);\r\n    return this;\r\n  }\r\n\r\n  addFilter(fieldConf: any, andOperator = true, doEmit: boolean = true): LocalDataSource {\r\n    if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\r\n      throw new Error('Filter configuration object is not valid');\r\n    }\r\n\r\n    let found = false;\r\n    this.filterConf.filters.forEach((currentFieldConf: any, index: any) => {\r\n      if (currentFieldConf['field'] === fieldConf['field']) {\r\n        this.filterConf.filters[index] = fieldConf;\r\n        found = true;\r\n      }\r\n    });\r\n    if (!found) {\r\n      this.filterConf.filters.push(fieldConf);\r\n    }\r\n    this.filterConf.andOperator = andOperator;\r\n    super.addFilter(fieldConf, andOperator, doEmit);\r\n    return this;\r\n  }\r\n\r\n  setPaging(page: number, perPage: number, doEmit: boolean = true): LocalDataSource {\r\n    this.pagingConf['page'] = page;\r\n    this.pagingConf['perPage'] = perPage;\r\n\r\n    super.setPaging(page, perPage, doEmit);\r\n    return this;\r\n  }\r\n\r\n  setPage(page: number, doEmit: boolean = true): LocalDataSource {\r\n    this.pagingConf['page'] = page;\r\n    super.setPage(page, doEmit);\r\n    return this;\r\n  }\r\n\r\n  getSort(): any {\r\n    return this.sortConf;\r\n  }\r\n\r\n  getFilter(): any {\r\n    return this.filterConf;\r\n  }\r\n\r\n  getPaging(): any {\r\n    return this.pagingConf;\r\n  }\r\n\r\n  protected prepareData(data: Array<any>): Array<any> {\r\n    data = this.filter(data);\r\n    data = this.sort(data);\r\n    this.filteredAndSorted = data.slice(0);\r\n\r\n    return this.paginate(data);\r\n  }\r\n\r\n  protected sort(data: Array<any>): Array<any> {\r\n    if (this.sortConf) {\r\n      this.sortConf.forEach((fieldConf) => {\r\n        data = LocalSorter\r\n          .sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  // TODO: refactor?\r\n  protected filter(data: Array<any>): Array<any> {\r\n    if (this.filterConf.filters) {\r\n      if (this.filterConf.andOperator) {\r\n        this.filterConf.filters.forEach((fieldConf: any) => {\r\n          if (fieldConf['search'].length > 0) {\r\n            data = LocalFilter\r\n              .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\r\n          }\r\n        });\r\n      } else {\r\n        let mergedData: any = [];\r\n        this.filterConf.filters.forEach((fieldConf: any) => {\r\n          if (fieldConf['search'].length > 0) {\r\n            mergedData = mergedData.concat(LocalFilter\r\n              .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\r\n          }\r\n        });\r\n        // remove non unique items\r\n        data = mergedData.filter((elem: any, pos: any, arr: any) => {\r\n          return arr.indexOf(elem) === pos;\r\n        });\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  protected paginate(data: Array<any>): Array<any> {\r\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n      data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n","<table [id]=\"tableId\" [ngClass]=\"tableClass\">\r\n\r\n  <thead ng2-st-thead *ngIf=\"!isHideHeader || !isHideSubHeader\"\r\n                      [grid]=\"grid\"\r\n                      [isAllSelected]=\"isAllSelected\"\r\n                      [source]=\"source\"\r\n                      [createConfirm]=\"createConfirm\"\r\n                      (create)=\"create.emit($event)\"\r\n                      (selectAllRows)=\"onSelectAllRows($event)\"\r\n                      (sort)=\"sort($event)\"\r\n                      (filter)=\"filter($event)\">\r\n  </thead>\r\n\r\n  <tbody ng2-st-tbody [grid]=\"grid\"\r\n                      [source]=\"source\"\r\n                      [deleteConfirm]=\"deleteConfirm\"\r\n                      [editConfirm]=\"editConfirm\"\r\n                      [rowClassFunction]=\"rowClassFunction\"\r\n                      (edit)=\"edit.emit($event)\"\r\n                      (delete)=\"delete.emit($event)\"\r\n                      (custom)=\"custom.emit($event)\"\r\n                      (userSelectRow)=\"onUserSelectRow($event)\"\r\n                      (editRowSelect)=\"editRowSelect($event)\"\r\n                      (multipleSelectRow)=\"multipleSelectRow($event)\"\r\n                      (rowHover)=\"onRowHover($event)\">\r\n  </tbody>\r\n\r\n</table>\r\n\r\n<ng2-smart-table-pager *ngIf=\"isPagerDisplay\"\r\n                        [source]=\"source\"\r\n                        [perPageSelect]=\"perPageSelect\"\r\n                        (changePage)=\"changePage($event)\">\r\n</ng2-smart-table-pager>\r\n","import { Component, Input, Output, SimpleChange, EventEmitter, OnChanges, OnDestroy } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { Grid } from './lib/grid';\r\nimport { DataSource } from './lib/data-source/data-source';\r\nimport { Row } from './lib/data-set/row';\r\nimport { deepExtend, getPageForRowIndex } from './lib/helpers';\r\nimport { LocalDataSource } from './lib/data-source/local/local.data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table',\r\n  styleUrls: ['./ng2-smart-table.component.scss'],\r\n  templateUrl: './ng2-smart-table.component.html',\r\n})\r\nexport class Ng2SmartTableComponent implements OnChanges, OnDestroy {\r\n\r\n  @Input() source: any;\r\n  @Input() settings: Object = {};\r\n\r\n  @Output() rowSelect = new EventEmitter<any>();\r\n  @Output() rowDeselect = new EventEmitter<any>();\r\n  @Output() userRowSelect = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() create = new EventEmitter<any>();\r\n  @Output() custom = new EventEmitter<any>();\r\n  @Output() deleteConfirm = new EventEmitter<any>();\r\n  @Output() editConfirm = new EventEmitter<any>();\r\n  @Output() createConfirm = new EventEmitter<any>();\r\n  @Output() rowHover: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  tableClass: string;\r\n  tableId: string;\r\n  perPageSelect: any;\r\n  isHideHeader: boolean;\r\n  isHideSubHeader: boolean;\r\n  isPagerDisplay: boolean;\r\n  rowClassFunction: Function;\r\n\r\n  grid: Grid;\r\n  defaultSettings: Object = {\r\n    mode: 'inline', // inline|external|click-to-edit\r\n    selectMode: 'single', // single|multi\r\n    /**\r\n     * Points to an element in all data\r\n     *\r\n     * when < 0 all lines must be deselected\r\n     */\r\n    selectedRowIndex: 0,\r\n    switchPageToSelectedRowPage: false,\r\n    hideHeader: false,\r\n    hideSubHeader: false,\r\n    actions: {\r\n      columnTitle: 'Actions',\r\n      add: true,\r\n      edit: true,\r\n      delete: true,\r\n      custom: [],\r\n      position: 'left', // left|right\r\n    },\r\n    filter: {\r\n      inputClass: '',\r\n    },\r\n    edit: {\r\n      inputClass: '',\r\n      editButtonContent: 'Edit',\r\n      saveButtonContent: 'Update',\r\n      cancelButtonContent: 'Cancel',\r\n      confirmSave: false,\r\n    },\r\n    add: {\r\n      inputClass: '',\r\n      addButtonContent: 'Add New',\r\n      createButtonContent: 'Create',\r\n      cancelButtonContent: 'Cancel',\r\n      confirmCreate: false,\r\n    },\r\n    delete: {\r\n      deleteButtonContent: 'Delete',\r\n      confirmDelete: false,\r\n    },\r\n    attr: {\r\n      id: '',\r\n      class: '',\r\n    },\r\n    noDataMessage: 'No data found',\r\n    columns: {},\r\n    pager: {\r\n      display: true,\r\n      page: 1,\r\n      perPage: 10,\r\n    },\r\n    rowClassFunction: () => '',\r\n  };\r\n\r\n  isAllSelected: boolean = false;\r\n\r\n  private onSelectRowSubscription: Subscription;\r\n  private onDeselectRowSubscription: Subscription;\r\n  private destroyed$: Subject<void> = new Subject<void>();\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (this.grid) {\r\n      if (changes['settings']) {\r\n        this.grid.setSettings(this.prepareSettings());\r\n      }\r\n      if (changes['source']) {\r\n        this.source = this.prepareSource();\r\n        this.grid.setSource(this.source);\r\n      }\r\n    } else {\r\n      this.initGrid();\r\n    }\r\n    this.tableId = this.grid.getSetting('attr.id');\r\n    this.tableClass = this.grid.getSetting('attr.class');\r\n    this.isHideHeader = this.grid.getSetting('hideHeader');\r\n    this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n    this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\r\n    this.rowClassFunction = this.grid.getSetting('rowClassFunction');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  selectRow(index: number, switchPageToSelectedRowPage: boolean = this.grid.getSetting('switchPageToSelectedRowPage')): void {\r\n    if (!this.grid) {\r\n      return;\r\n    }\r\n    this.grid.settings.selectedRowIndex = index;\r\n    if (this.isIndexOutOfRange(index)) {\r\n      // we need to deselect all rows if we got an incorrect index\r\n      this.deselectAllRows();\r\n      return;\r\n    }\r\n\r\n    if (switchPageToSelectedRowPage) {\r\n      const source: DataSource = this.source;\r\n      const paging: { page: number, perPage: number } = source.getPaging();\r\n      const page: number = getPageForRowIndex(index, paging.perPage);\r\n      index = index % paging.perPage;\r\n      this.grid.settings.selectedRowIndex = index;\r\n\r\n      if (page !== paging.page) {\r\n        source.setPage(page);\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    const row: Row = this.grid.getRows()[index];\r\n    if (row) {\r\n      this.onSelectRow(row);\r\n    } else {\r\n      // we need to deselect all rows if we got an incorrect index\r\n      this.deselectAllRows();\r\n    }\r\n  }\r\n\r\n  private deselectAllRows(): void {\r\n    this.grid.dataSet.deselectAll();\r\n    this.emitDeselectRow(null);\r\n  }\r\n\r\n  editRowSelect(row: Row) {\r\n    if (this.grid.getSetting('selectMode') === 'multi') {\r\n      this.onMultipleSelectRow(row);\r\n    } else {\r\n      this.onSelectRow(row);\r\n    }\r\n  }\r\n\r\n  onUserSelectRow(row: Row) {\r\n    if (this.grid.getSetting('selectMode') !== 'multi') {\r\n      this.grid.selectRow(row);\r\n      this.emitUserSelectRow(row);\r\n      this.emitSelectRow(row);\r\n    }\r\n  }\r\n\r\n  onRowHover(row: Row) {\r\n    this.rowHover.emit(row);\r\n  }\r\n\r\n  multipleSelectRow(row: Row) {\r\n    this.grid.multipleSelectRow(row);\r\n    this.emitUserSelectRow(row);\r\n    this.emitSelectRow(row);\r\n  }\r\n\r\n  onSelectAllRows($event: any) {\r\n    this.isAllSelected = !this.isAllSelected;\r\n    this.grid.selectAllRows(this.isAllSelected);\r\n\r\n    this.emitUserSelectRow(null);\r\n    this.emitSelectRow(null);\r\n  }\r\n\r\n  onSelectRow(row: Row) {\r\n    this.grid.selectRow(row);\r\n    this.emitSelectRow(row);\r\n  }\r\n\r\n  onMultipleSelectRow(row: Row) {\r\n    this.emitSelectRow(row);\r\n  }\r\n\r\n  initGrid() {\r\n    this.source = this.prepareSource();\r\n    this.grid = new Grid(this.source, this.prepareSettings());\r\n\r\n    this.subscribeToOnSelectRow();\r\n    this.subscribeToOnDeselectRow();\r\n  }\r\n\r\n  prepareSource(): DataSource {\r\n    if (this.source instanceof DataSource) {\r\n      return this.source;\r\n    } else if (this.source instanceof Array) {\r\n      return new LocalDataSource(this.source);\r\n    }\r\n\r\n    return new LocalDataSource();\r\n  }\r\n\r\n  prepareSettings(): Object {\r\n    return deepExtend({}, this.defaultSettings, this.settings);\r\n  }\r\n\r\n  changePage($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  sort($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  filter($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  private resetAllSelector() {\r\n    this.isAllSelected = false;\r\n  }\r\n\r\n  private emitUserSelectRow(row: Row) {\r\n    const selectedRows = this.grid.getSelectedRows();\r\n\r\n    this.userRowSelect.emit({\r\n      data: row ? row.getData() : null,\r\n      isSelected: row ? row.getIsSelected() : null,\r\n      source: this.source,\r\n      selected: selectedRows && selectedRows.length ? selectedRows.map((r: Row) => r.getData()) : [],\r\n    });\r\n  }\r\n\r\n  private emitSelectRow(row: Row) {\r\n    const data = {\r\n      data: row ? row.getData() : null,\r\n      isSelected: row ? row.getIsSelected() : null,\r\n      source: this.source,\r\n    };\r\n    this.rowSelect.emit(data);\r\n    if (!row?.isSelected) {\r\n      this.rowDeselect.emit(data);\r\n    }\r\n  }\r\n\r\n  private emitDeselectRow(row: Row): void {\r\n    this.rowDeselect.emit({\r\n      data: row ? row.getData() : null,\r\n      isSelected: row ? row.getIsSelected() : null,\r\n      source: this.source,\r\n    });\r\n  }\r\n\r\n  private isIndexOutOfRange(index: number): boolean {\r\n    const dataAmount: number = this.source?.count();\r\n    return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\r\n  }\r\n\r\n  private subscribeToOnSelectRow(): void {\r\n    if (this.onSelectRowSubscription) {\r\n      this.onSelectRowSubscription.unsubscribe();\r\n    }\r\n    this.onSelectRowSubscription = this.grid.onSelectRow()\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe((row) => {\r\n        this.emitSelectRow(row);\r\n      });\r\n  }\r\n\r\n  private subscribeToOnDeselectRow(): void {\r\n    if (this.onDeselectRowSubscription) {\r\n      this.onDeselectRowSubscription.unsubscribe();\r\n    }\r\n    this.onDeselectRowSubscription = this.grid.onDeselectRow()\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe((row) => {\r\n        this.emitDeselectRow(row);\r\n      });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CellModule } from './components/cell/cell.module';\r\nimport { FilterModule } from './components/filter/filter.module';\r\nimport { PagerModule } from './components/pager/pager.module';\r\nimport { TBodyModule } from './components/tbody/tbody.module';\r\nimport { THeadModule } from './components/thead/thead.module';\r\n\r\nimport { Ng2SmartTableComponent } from './ng2-smart-table.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CellModule,\r\n    FilterModule,\r\n    PagerModule,\r\n    TBodyModule,\r\n    THeadModule,\r\n  ],\r\n  declarations: [\r\n    Ng2SmartTableComponent,\r\n  ],\r\n  exports: [\r\n    Ng2SmartTableComponent,\r\n  ],\r\n})\r\nexport class Ng2SmartTableModule {\r\n}\r\n","export class ServerSourceConf {\r\n\r\n  protected static readonly SORT_FIELD_KEY = '_sort';\r\n  protected static readonly SORT_DIR_KEY = '_order';\r\n  protected static readonly PAGER_PAGE_KEY = '_page';\r\n  protected static readonly PAGER_LIMIT_KEY = '_limit';\r\n  protected static readonly FILTER_FIELD_KEY = '#field#_like';\r\n  protected static readonly TOTAL_KEY = 'x-total-count';\r\n  protected static readonly DATA_KEY = '';\r\n\r\n  endPoint: string;\r\n\r\n  sortFieldKey: string;\r\n  sortDirKey: string;\r\n  pagerPageKey: string;\r\n  pagerLimitKey: string;\r\n  filterFieldKey: string;\r\n  totalKey: string;\r\n  dataKey: string;\r\n\r\n  constructor(\r\n    { endPoint = '', sortFieldKey = '', sortDirKey = '',\r\n      pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\r\n\r\n    this.endPoint = endPoint ? endPoint : '';\r\n\r\n    this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\r\n    this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\r\n    this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\r\n    this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\r\n    this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\r\n    this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\r\n    this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LocalDataSource } from '../local/local.data-source';\r\nimport { ServerSourceConf } from './server-source.conf';\r\nimport { getDeepFromObject } from '../../helpers';\r\n\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport class ServerDataSource extends LocalDataSource {\r\n\r\n  protected conf: ServerSourceConf;\r\n\r\n  protected lastRequestCount: number = 0;\r\n\r\n  constructor(protected http: HttpClient, conf: ServerSourceConf | {} = {}) {\r\n    super();\r\n\r\n    this.conf = new ServerSourceConf(conf);\r\n\r\n    if (!this.conf.endPoint) {\r\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\r\n    }\r\n  }\r\n\r\n  count(): number {\r\n    return this.lastRequestCount;\r\n  }\r\n\r\n  getElements(): Promise<any> {\r\n    return this.requestElements()\r\n      .pipe(map(res => {\r\n        this.lastRequestCount = this.extractTotalFromResponse(res);\r\n        this.data = this.extractDataFromResponse(res);\r\n\r\n        return this.data;\r\n      })).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Extracts array of data from server response\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractDataFromResponse(res: any): Array<any> {\r\n    const rawData = res.body;\r\n    const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\r\n\r\n    if (data instanceof Array) {\r\n      return data;\r\n    }\r\n\r\n    throw new Error(`Data must be an array.\r\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\r\n  }\r\n\r\n  /**\r\n   * Extracts total rows count from the server response\r\n   * Looks for the count in the heders first, then in the response body\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractTotalFromResponse(res: any): number {\r\n    if (res.headers.has(this.conf.totalKey)) {\r\n      return +res.headers.get(this.conf.totalKey);\r\n    } else {\r\n      const rawData = res.body;\r\n      return getDeepFromObject(rawData, this.conf.totalKey, 0);\r\n    }\r\n  }\r\n\r\n  protected requestElements(): Observable<any> {\r\n    let httpParams = this.createRequesParams();\r\n    return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\r\n  }\r\n\r\n  protected createRequesParams(): HttpParams {\r\n    let httpParams = new HttpParams();\r\n\r\n    httpParams = this.addSortRequestParams(httpParams);\r\n    httpParams = this.addFilterRequestParams(httpParams);\r\n    return this.addPagerRequestParams(httpParams);\r\n  }\r\n\r\n  protected addSortRequestParams(httpParams: HttpParams): HttpParams {\r\n    if (this.sortConf) {\r\n      this.sortConf.forEach((fieldConf) => {\r\n        httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\r\n        httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\r\n      });\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n\r\n  protected addFilterRequestParams(httpParams: HttpParams): HttpParams {\r\n\r\n    if (this.filterConf.filters) {\r\n      this.filterConf.filters.forEach((fieldConf: any) => {\r\n        if (fieldConf['search']) {\r\n          httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\r\n        }\r\n      });\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n\r\n  protected addPagerRequestParams(httpParams: HttpParams): HttpParams {\r\n\r\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n      httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\r\n      httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","_c0","_c1"],"mappings":";;;;;;;;;;;;;AAEA;;;;;;;;AAQG;AACI,MAAM,UAAU,GAAG,UAAS,GAAG,OAAmB,EAAA;AACvD,IAAA,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AAC5D,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AAED,IAAA,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AACxB,QAAA,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;AACrB,KAAA;AAED,IAAA,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;AAG5B,IAAA,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAEtD,IAAI,GAAG,EAAE,GAAG,CAAC;AAEb,IAAA,IAAI,CAAC,OAAO,CAAC,CAAC,GAAQ,KAAI;;QAExB,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACjD,OAAO;AACR,SAAA;QAED,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAA;AACpC,YAAA,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AAClB,YAAA,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;;YAGf,IAAI,GAAG,KAAK,MAAM,EAAE;gBAClB,OAAO;AAEP;;;AAGG;AACJ,aAAA;iBAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;AAClD,gBAAA,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;gBAClB,OAAO;;AAGR,aAAA;AAAM,iBAAA,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBAC7B,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;gBAC7B,OAAO;;AAGR,aAAA;AAAM,iBAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACxE,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;gBAClC,OAAO;;AAGR,aAAA;AAAM,iBAAA;gBACL,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBACnC,OAAO;AACR,aAAA;AACH,SAAC,CAAC,CAAC;AACL,KAAC,CAAC,CAAC;AAEH,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;MAEW,QAAQ,CAAA;AAOnB,IAAA,WAAA,GAAA;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AAC7C,YAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,YAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACvB,SAAC,CAAC,CAAC;KACJ;AACF,CAAA;AAED;AACM,SAAU,iBAAiB,CAAC,MAAM,GAAG,EAAE,EAAE,IAAY,EAAE,YAAkB,EAAA;IAC7E,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;IAE7B,IAAI,KAAK,GAAG,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;AACnC,IAAA,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAI;QACjB,IAAI,KAAK,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;AAC5C,YAAA,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAClB,SAAA;AACH,KAAC,CAAC,CAAC;AAEH,IAAA,OAAO,OAAO,KAAK,KAAK,WAAW,GAAG,YAAY,GAAG,KAAK,CAAC;AAC7D,CAAC;AAEe,SAAA,kBAAkB,CAAC,KAAa,EAAE,OAAe,EAAA;;IAE/D,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AACzC;;AClGM,SAAU,YAAY,CAAE,KAAU,IAAI,OAAO,KAAK,CAAA,EAAE;MAE7C,IAAI,CAAA;AAKf,IAAA,WAAA,CAAsB,KAAU,EAAY,GAAQ,EAAY,MAAW,EAAY,OAAgB,EAAA;QAAjF,IAAK,CAAA,KAAA,GAAL,KAAK,CAAK;QAAY,IAAG,CAAA,GAAA,GAAH,GAAG,CAAK;QAAY,IAAM,CAAA,MAAA,GAAN,MAAM,CAAK;QAAY,IAAO,CAAA,OAAA,GAAP,OAAO,CAAS;QAHvG,IAAQ,CAAA,QAAA,GAAQ,EAAE,CAAC;AAIjB,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IAED,SAAS,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,MAAM,GAAA;QACJ,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;IAED,QAAQ,GAAA;QACN,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE,YAAY,QAAQ,CAAC;AACxE,QAAA,MAAM,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;AAC7E,QAAA,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;KACjE;AAED,IAAA,QAAQ,CAAC,KAAU,EAAA;AACjB,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IAED,KAAK,GAAA;AACH,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC;KAC5B;IAED,QAAQ,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC;KAC/B;IAED,UAAU,GAAA;QACR,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE;AAC9B,YAAA,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;AACnC,SAAA;AACI,aAAA;AACH,YAAA,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC;AACpC,SAAA;KACF;;AAvCgB,IAAO,CAAA,OAAA,GAAG,YAAY;;MCL5B,GAAG,CAAA;AAOd,IAAA,WAAA,CAAmB,KAAa,EAAY,IAAS,EAAY,QAAiB,EAAA;QAA/D,IAAK,CAAA,KAAA,GAAL,KAAK,CAAQ;QAAY,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAK;QAAY,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAS;QALlF,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;QAC5B,IAAW,CAAA,WAAA,GAAY,KAAK,CAAC;QAC7B,IAAK,CAAA,KAAA,GAAgB,EAAE,CAAC;QAItB,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;AAED,IAAA,OAAO,CAAC,MAAc,EAAA;AACpB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,KAAK,MAAM,CAAC,CAAC;KACzD;IAED,QAAQ,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,OAAO,GAAA;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAED,UAAU,GAAA;AACR,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC/E,QAAA,OAAO,MAAM,CAAC;KACf;AAED,IAAA,OAAO,CAAC,IAAS,EAAA;AACf,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;IAED,OAAO,GAAA;AACL,QAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,CAAC,MAAc,KAAI;YACpD,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACrC,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxB,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,UAAU,CAAC,MAAc,EAAA;AACvB,QAAA,MAAM,QAAQ,GAAI,MAAc,CAAC,QAAQ,CAAC,YAAY,GAAI,MAAc,CAAC,QAAQ,CAAC,YAAY,GAAG,EAAE,CAAC;AACpG,QAAA,MAAM,KAAK,GAAG,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,WAAW,GAAG,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAC5F,QAAA,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KACrD;AACF;;MCrDY,MAAM,CAAA;AAqBjB,IAAA,WAAA,CAAmB,EAAU,EAAY,QAAa,EAAY,OAAgB,EAAA;QAA/D,IAAE,CAAA,EAAA,GAAF,EAAE,CAAQ;QAAY,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAK;QAAY,IAAO,CAAA,OAAA,GAAP,OAAO,CAAS;QAnBlF,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;QACnB,IAAI,CAAA,IAAA,GAAW,EAAE,CAAC;QAClB,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;QACnB,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;QACnB,IAAI,CAAA,IAAA,GAAY,KAAK,CAAC;QACtB,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;QAC5B,IAAU,CAAA,UAAA,GAAY,IAAI,CAAC;QAC3B,IAAS,CAAA,SAAA,GAAY,IAAI,CAAC;QAC1B,IAAY,CAAA,YAAA,GAAY,KAAK,CAAC;QAC9B,IAAa,CAAA,aAAA,GAAW,EAAE,CAAC;QAC3B,IAAoB,CAAA,oBAAA,GAAW,EAAE,CAAC;AAClC,QAAA,IAAA,CAAA,MAAM,GAAkD,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;AAClG,QAAA,IAAA,CAAA,MAAM,GAAkD,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;QAClG,IAAe,CAAA,eAAA,GAAQ,IAAI,CAAC;QAO1B,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;IAED,0BAA0B,GAAA;QACxB,OAAO,IAAI,CAAC,uBAAuB,CAAC;KACrC;IAED,kBAAkB,GAAA;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAED,uBAAuB,GAAA;QACrB,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;IAED,iBAAiB,GAAA;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IAED,SAAS,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;KAC1C;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;KACxC;IAED,eAAe,GAAA;QACb,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;KAC1C;IAES,OAAO,GAAA;QACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACpC,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAExD,IAAI,CAAC,YAAY,GAAG,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,WAAW,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACtG,QAAA,IAAI,CAAC,oBAAoB,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC;aACxC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;QACxF,IAAI,CAAC,UAAU,GAAG,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,WAAW,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAChG,IAAI,CAAC,UAAU,GAAG,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,WAAW,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACxG,IAAI,CAAC,SAAS,GAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,WAAW,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACnG,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAEjD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QACxD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC;QAClE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;QACtD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC;KACzE;IAED,WAAW,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;KACtD;IAED,oBAAoB,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;KAC1D;IAED,aAAa,GAAA;;AAEX,QAAA,OAAO,MAAM,CAAC;KACf;AACF;;MCxFY,OAAO,CAAA;IAUlB,WAAY,CAAA,IAAA,GAAmB,EAAE,EAAY,cAAsB,EAAA;QAAtB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAQ;QANzD,IAAI,CAAA,IAAA,GAAe,EAAE,CAAC;QACtB,IAAO,CAAA,OAAA,GAAkB,EAAE,CAAC;QAC5B,IAAI,CAAA,IAAA,GAAe,EAAE,CAAC;AAK9B,QAAA,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;AACnC,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEnB,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;AAED,IAAA,OAAO,CAAC,IAAgB,EAAA;AACtB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAED,UAAU,GAAA;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAED,OAAO,GAAA;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAED,WAAW,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACrB;IAED,UAAU,GAAA;AACR,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KACxC;AAED,IAAA,aAAa,CAAC,IAAS,EAAA;AACrB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAQ,KAAK,GAAG,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,CAAC;KAC7D;IAED,WAAW,GAAA;QACT,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;AACxB,YAAA,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC;AACzB,SAAC,CAAC,CAAC;;AAEH,QAAA,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;KAC9B;AAED,IAAA,SAAS,CAAC,GAAQ,EAAA;AAChB,QAAA,MAAM,kBAAkB,GAAG,GAAG,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,WAAW,EAAE,CAAC;AAEnB,QAAA,GAAG,CAAC,UAAU,GAAG,CAAC,kBAAkB,CAAC;AACrC,QAAA,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QAEvB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;AAED,IAAA,iBAAiB,CAAC,GAAQ,EAAA;AACxB,QAAA,GAAG,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC;AACjC,QAAA,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QAEvB,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,iBAAiB,GAAA;AACf,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACxB,YAAA,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC;YAC1D,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAC9B,aAAA;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC,WAAW,CAAC;AACzB,SAAA;KACF;IAED,cAAc,GAAA;AACZ,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO,IAAI,CAAC,WAAW,CAAC;AACzB,SAAA;KACF;IAED,aAAa,GAAA;AACX,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACxB,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAChD,OAAO,IAAI,CAAC,WAAW,CAAC;AACzB,SAAA;KACF;AAED,IAAA,gBAAgB,CAAC,KAAa,EAAA;AAC5B,QAAA,MAAM,UAAU,GAAW,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,IAAI,UAAU,KAAK,CAAC,EAAE;YACpB,OAAO;AACR,SAAA;QACD,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,OAAO,IAAI,CAAC,WAAW,CAAC;AACzB,SAAA;AACD,QAAA,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,UAAU,EAAE;YACnC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC,WAAW,CAAC;AACzB,SAAA;;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAED,kBAAkB,GAAA;AAChB,QAAA,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;KAC3B;IAED,iBAAiB,GAAA;AACf,QAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;KAC1B;AAED,IAAA,MAAM,CAAC,gBAAyB,EAAA;QAC9B,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,OAAO;AACR,SAAA;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,IAAI,IAAI,CAAC,UAAU,KAAK,OAAO,EAAE;gBAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;AACvB,aAAA;AACD,YAAA,IAAI,IAAI,CAAC,UAAU,KAAK,MAAM,EAAE;gBAC9B,IAAI,CAAC,aAAa,EAAE,CAAC;AACtB,aAAA;AACD,YAAA,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACtB,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;AACzC,SAAA;QAED,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,YAAY,GAAA;AACV,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;AACpC,QAAA,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;KAChC;AAED;;;;AAIG;AACH,IAAA,aAAa,CAAC,QAAa,EAAA;AACzB,QAAA,KAAK,MAAM,EAAE,IAAI,QAAQ,EAAE;AACzB,YAAA,IAAI,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;AAC/B,gBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACvD,aAAA;AACF,SAAA;KACF;AAED;;;AAGG;IACH,UAAU,GAAA;AACR,QAAA,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,KAAK,KAAI;AAC9B,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;AAC3C,SAAC,CAAC,CAAC;KACJ;AACF;;MC7JY,IAAI,CAAA;IAcf,WAAY,CAAA,MAAkB,EAAE,QAAa,EAAA;QAZ7C,IAAe,CAAA,eAAA,GAAY,KAAK,CAAC;AAMjC,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAI,OAAO,EAAO,CAAC;AACvC,QAAA,IAAA,CAAA,mBAAmB,GAAG,IAAI,OAAO,EAAO,CAAC;AAMvC,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KACxB;IAED,MAAM,GAAA;QACJ,IAAI,IAAI,CAAC,2BAA2B,EAAE;AACpC,YAAA,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;AAChD,SAAA;QACD,IAAI,IAAI,CAAC,2BAA2B,EAAE;AACpC,YAAA,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;AAChD,SAAA;KACF;AAED,IAAA,gBAAgB,CAAC,QAAgB,EAAA;QAC/B,OAAO,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3E;AAED,IAAA,wBAAwB,CAAC,QAAgB,EAAA;QACvC,OAAO,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;KACxD;IAED,gBAAgB,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC;KAC3J;IAED,oBAAoB,GAAA;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,OAAO,CAAC;KAClD;IAED,SAAS,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC5B;AAED,IAAA,WAAW,CAAC,QAAgB,EAAA;AAC1B,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;QAE3D,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;AACvB,SAAA;KACF;IAED,UAAU,GAAA;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAED,IAAA,SAAS,CAAC,MAAkB,EAAA;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,OAAY,KAAK,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;AAExH,QAAA,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,IAAS,KAAI;YACjF,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACpD,YAAA,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3B,SAAC,CAAC,CAAC;KACJ;IAED,UAAU,CAAC,IAAY,EAAE,YAAkB,EAAA;QACzC,OAAO,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;KAC7D;IAED,UAAU,GAAA;AACR,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;KAClC;IAED,OAAO,GAAA;AACL,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;KAC/B;AAED,IAAA,SAAS,CAAC,GAAQ,EAAA;AAChB,QAAA,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KAC7B;AAED,IAAA,iBAAiB,CAAC,GAAQ,EAAA;AACxB,QAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;KACrC;IAED,WAAW,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;KAC9C;IAED,aAAa,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;KAChD;AAED,IAAA,IAAI,CAAC,GAAQ,EAAA;AACX,QAAA,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;KACxB;IAED,MAAM,CAAC,GAAQ,EAAE,cAAiC,EAAA;AAEhD,QAAA,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,KAAI;AAChC,YAAA,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;AAC/C,YAAA,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE;AAC5B,gBAAA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AAC9B,aAAA;AAAM,iBAAA;gBACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAK;AACrC,oBAAA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AAC7B,oBAAA,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;AAC9B,iBAAC,CAAC,CAAC;AACJ,aAAA;AACH,SAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAI;;AAEjB,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,EAAE;YACxC,cAAc,CAAC,IAAI,CAAC;AAClB,gBAAA,OAAO,EAAE,GAAG,CAAC,UAAU,EAAE;gBACzB,MAAM,EAAE,IAAI,CAAC,MAAM;AACnB,gBAAA,OAAO,EAAE,QAAQ;AAClB,aAAA,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;YACL,QAAQ,CAAC,OAAO,EAAE,CAAC;AACpB,SAAA;KACF;IAED,IAAI,CAAC,GAAQ,EAAE,cAAiC,EAAA;AAE9C,QAAA,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,KAAI;AAChC,YAAA,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;AAC/C,YAAA,IAAI,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE;AAC7B,gBAAA,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;AACzB,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,MAAK;AACnD,oBAAA,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;AAC1B,iBAAC,CAAC,CAAC;AACJ,aAAA;AACH,SAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAI;;AAEjB,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE;YACvC,cAAc,CAAC,IAAI,CAAC;AAClB,gBAAA,IAAI,EAAE,GAAG,CAAC,OAAO,EAAE;AACnB,gBAAA,OAAO,EAAE,GAAG,CAAC,UAAU,EAAE;gBACzB,MAAM,EAAE,IAAI,CAAC,MAAM;AACnB,gBAAA,OAAO,EAAE,QAAQ;AAClB,aAAA,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;YACL,QAAQ,CAAC,OAAO,EAAE,CAAC;AACpB,SAAA;KACF;IAED,MAAM,CAAC,GAAQ,EAAE,cAAiC,EAAA;AAEhD,QAAA,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAChC,QAAA,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAK;YACzB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;AACpC,SAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAI;;AAEjB,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE;YAC3C,cAAc,CAAC,IAAI,CAAC;AAClB,gBAAA,IAAI,EAAE,GAAG,CAAC,OAAO,EAAE;gBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;AACnB,gBAAA,OAAO,EAAE,QAAQ;AAClB,aAAA,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;YACL,QAAQ,CAAC,OAAO,EAAE,CAAC;AACpB,SAAA;KACF;AAED,IAAA,iBAAiB,CAAC,OAAY,EAAA;AAC5B,QAAA,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1C,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,OAAO,EAAE;gBAC7C,MAAM,GAAG,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;AAE/C,gBAAA,IAAI,GAAG,EAAE;AACP,oBAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClC,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,iBAAA;AACF,aAAA;AACF,SAAA;KACF;AAED,IAAA,mBAAmB,CAAC,OAAY,EAAA;QAC9B,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;AACvG,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;aAAM,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE;AACvG,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AAED,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;;;AAKG;AACH,IAAA,oBAAoB,CAAC,OAAY,EAAA;QAE/B,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;YACnF,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;AACxD,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE;AAC9B,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AAED,QAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;YAClC,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;;AAEpC,gBAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;AAClC,aAAA;AAAM,iBAAA;AACL,gBAAA,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;AACzC,aAAA;AACF,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;;AAElC,YAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;AAClC,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,KAAK,EAAE;AAC/B,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;AACtC,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;AAClC,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;AACtC,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;;AAEnC,YAAA,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;AACnC,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,aAAa,CAAC,MAAW,EAAA;AACvB,QAAA,MAAM,aAAa,GAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;QACjD,IAAI,aAAa,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,aAAa,CAAC,WAAW,CAAC,EAAE;YACzE,MAAM,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,CAAC;AACxC,SAAA;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,KAAK,IAAI,EAAE;AAC7C,YAAA,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,KAAK,CAAC,CAAC;AACzF,SAAA;QAED,MAAM,CAAC,OAAO,EAAE,CAAC;AACjB,QAAA,OAAO,MAAM,CAAC;KACf;IAED,cAAc,GAAA;QACZ,MAAM,QAAQ,GAAQ,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,CAAC,MAAc,KAAI;AAC3C,YAAA,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,oBAAoB,EAAE;AACpD,gBAAA,QAAQ,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC;AAC9B,gBAAA,QAAQ,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,oBAAoB,CAAC;gBACpD,QAAQ,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC;AACnD,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,QAAQ,CAAC;KACjB;IAED,eAAe,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;aAC1B,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC;KAC9B;AAED,IAAA,aAAa,CAAC,MAAW,EAAA;AACvB,QAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;aACnB,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC;KACxC;IAED,WAAW,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;KACnC;IAED,UAAU,GAAA;AACR,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;KAClC;IAEO,gBAAgB,GAAA;QACtB,MAAM,2BAA2B,GAAY,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;AAC5F,QAAA,MAAM,gBAAgB,GAAW,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACrF,QAAA,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAsC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACtF,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAAE,2BAA2B,EAAE,CAAC;KACzE;IAEO,mBAAmB,GAAA;AACzB,QAAA,MAAM,EAAE,2BAA2B,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC3F,MAAM,UAAU,GAAW,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AAC/C;;;;;;;;;;;AAWG;AACH,QAAA,OAAO,CACL,2BAA2B;AAC3B,YAAA,gBAAgB,GAAG,UAAU;AAC7B,YAAA,gBAAgB,IAAI,CAAC;YAErB,gBAAgB,GAAG,OAAO;AAC1B,YAAA,gBAAgB,CAAC;KACpB;AAEO,IAAA,eAAe,CAAC,MAAkB,EAAA;AACxC,QAAA,MAAM,EAAE,2BAA2B,EAAE,gBAAgB,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACjG,IAAI,YAAY,GAAW,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAC7C,QAAA,IAAI,2BAA2B,IAAI,gBAAgB,IAAI,CAAC,EAAE;AACxD,YAAA,YAAY,GAAG,kBAAkB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;AAC9D,SAAA;AACD,QAAA,MAAM,aAAa,GAAW,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,OAAO,CAAC,CAAC;AAClE,QAAA,OAAO,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,aAAa,CAAC,GAAG,YAAY,CAAC;KAC7E;IAEO,mBAAmB,GAAA;AACzB;;;;;;;;;;AAUG;QACH,MAAM,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACrE,OAAO,gBAAgB,GAAG,CAAC,CAAC;KAC7B;AACF;;;;MCjVY,mBAAmB,CAAA;AAM9B,IAAA,WAAA,CAAoB,QAAkC,EAAA;QAAlC,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAA0B;KACrD;IAED,QAAQ,GAAA;QACN,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACtC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;AACtB,SAAA;KACF;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,eAAe,EAAE;AACxB,YAAA,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;AAChC,SAAA;KACF;IAES,qBAAqB,GAAA;AAC7B,QAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,eAAe,CAAC,CAAC;QACtG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;KAC7E;IAES,mBAAmB,GAAA;QAC3B,MAAM,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,0BAA0B,EAAE,CAAC;QACnF,uBAAuB,IAAI,uBAAuB,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;KACnF;IAES,aAAa,GAAA;AACrB,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;KAC/D;IAES,QAAQ,GAAA;QAChB,OAAO;AACL,YAAA,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC3B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE;SACtC,CAAA;KACF;;sFA1CU,mBAAmB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,wBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;sEAAnB,mBAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,uBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,yBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;iCAIM,gBAAgB,CAAA,CAAA;;;;;QAPlD,EAA0C,CAAA,UAAA,CAAA,CAAA,EAAA,0CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,sBAAA,CAAA,CAAA;;uFAGjC,mBAAmB,EAAA,CAAA;cAN/B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,uBAAuB;AACjC,gBAAA,QAAQ,EAAE,CAAA;;AAET,EAAA,CAAA;AACF,aAAA,CAAA;2EAIU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACgE,aAAa,EAAA,CAAA;kBAAlF,SAAS;mBAAC,eAAe,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;;ICd9D,EAAsF,CAAA,SAAA,CAAA,CAAA,EAAA,uBAAA,EAAA,CAAA,CAAA,CAAA;;;IAAtC,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA;;;IAC7D,EAAgE,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;;;IAApC,EAA6B,CAAA,UAAA,CAAA,WAAA,EAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA,EAAA,EAAA,CAAA,cAAA,CAAA,CAAA;;;IACzD,EAAsB,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA;IAAA,EAAqB,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAM,CAAA,YAAA,EAAA,CAAA;;;IAA3B,EAAqB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAArB,EAAqB,CAAA,iBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA,CAAA,CAAA;;MAItC,iBAAiB,CAAA;;kFAAjB,iBAAiB,GAAA,CAAA,EAAA,CAAA;oEAAjB,iBAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,sBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,0BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAP1B,EAAwC,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;QACpC,EAAsF,CAAA,UAAA,CAAA,CAAA,EAAA,kDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,uBAAA,EAAA,CAAA,CAAA,CAAA;QACtF,EAAgE,CAAA,UAAA,CAAA,CAAA,EAAA,gCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;QAChE,EAAiD,CAAA,UAAA,CAAA,CAAA,EAAA,gCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;QACrD,EAAM,CAAA,YAAA,EAAA,CAAA;;QAJD,EAAkC,CAAA,UAAA,CAAA,UAAA,EAAA,GAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,IAAA,CAAA,CAAA;QACX,EAAsB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAtB,EAAsB,CAAA,UAAA,CAAA,cAAA,EAAA,QAAA,CAAA,CAAA;QACxC,EAAoB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAApB,EAAoB,CAAA,UAAA,CAAA,cAAA,EAAA,MAAA,CAAA,CAAA;;uFAKrB,iBAAiB,EAAA,CAAA;cAX7B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,sBAAsB;gBAChC,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAC/C,gBAAA,QAAQ,EAAE,CAAA;;;;;;AAMP,IAAA,CAAA;AACJ,aAAA,CAAA;gBAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;;;MCVK,eAAe,CAAA;AAH5B,IAAA,WAAA,GAAA;QAMW,IAAU,CAAA,UAAA,GAAW,EAAE,CAAC;AAEvB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AAe5C,KAAA;AAbC,IAAA,QAAQ,CAAC,KAAU,EAAA;AACjB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxB,QAAA,OAAO,KAAK,CAAC;KACd;IAED,aAAa,GAAA;QACX,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC;AACvC,QAAA,OAAO,KAAK,CAAC;KACd;AAED,IAAA,OAAO,CAAC,KAAU,EAAA;QAChB,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;;8EAnBU,eAAe,GAAA,CAAA,EAAA,CAAA;kEAAf,eAAe,EAAA,SAAA,EAAA,CAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,wBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAAf,eAAe,EAAA,CAAA;cAH3B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,EAAE;AACb,aAAA,CAAA;gBAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YAEI,MAAM,EAAA,CAAA;kBAAf,MAAM;;;;;ACMH,MAAO,mBAAoB,SAAQ,eAAe,CAAA;AAKtD,IAAA,WAAA,CAAoB,QAAkC,EAAA;AACpD,QAAA,KAAK,EAAE,CAAC;QADU,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAA0B;KAErD;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;QAChC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;AACtC,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACvG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;;YAG5E,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC/C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AAC3D,YAAA,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YAClF,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAU,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACvF,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,KAAU,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AACtF,SAAA;KACF;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,eAAe,EAAE;AACxB,YAAA,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;AAChC,SAAA;KACF;;sFA3BU,mBAAmB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,wBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;sEAAnB,mBAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,0BAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,yBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;iCAGM,gBAAgB,CAAA,CAAA;;;;;QANlD,EAA0C,CAAA,UAAA,CAAA,CAAA,EAAA,0CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,sBAAA,CAAA,CAAA;;uFAGjC,mBAAmB,EAAA,CAAA;cAN/B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,0BAA0B;AACpC,gBAAA,QAAQ,EAAE,CAAA;;AAET,EAAA,CAAA;AACF,aAAA,CAAA;2EAIuE,aAAa,EAAA,CAAA;kBAAlF,SAAS;mBAAC,eAAe,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;MCdzD,aAAa,CAAA;AAH1B,IAAA,WAAA,GAAA;AAOY,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAO,CAAC;AACxC,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;AACnC,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,YAAY,EAAO,CAAC;AAC7C,KAAA;;0EAPY,aAAa,GAAA,CAAA,EAAA,CAAA;gEAAb,aAAa,EAAA,SAAA,EAAA,CAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,aAAA,EAAA,eAAA,EAAA,QAAA,EAAA,UAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAAb,aAAa,EAAA,CAAA;cAHzB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,EAAE;AACb,aAAA,CAAA;gBAEU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YAEI,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,QAAQ,EAAA,CAAA;kBAAjB,MAAM;YACG,OAAO,EAAA,CAAA;kBAAhB,MAAM;;;;ICGD,EACsD,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EACtD,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAS,CAAA,YAAA,EAAA,CAAA;;;;AAFyD,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,CAAA,KAAA,CAAsB,CAAA,UAAA,EAAA,SAAA,CAAA,KAAA,KAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA,CAAA,CAAA;IAClC,EACtD,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IADsD,EACtD,CAAA,kBAAA,CAAA,EAAA,EAAA,SAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;AAIF,MAAO,qBAAsB,SAAQ,aAAa,CAAA;AAEtD,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;KACT;;0FAJU,qBAAqB,GAAA,CAAA,EAAA,CAAA;wEAArB,qBAAqB,EAAA,SAAA,EAAA,CAAA,CAAA,eAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,MAAA,EAAA,UAAA,EAAA,eAAA,EAAA,OAAA,EAAA,eAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,UAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,UAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAf9B,EAO6C,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,CAAA;QALrC,EAA2B,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,8DAAA,CAAA,MAAA,EAAA,EAAA,OAAA,GAAA,CAAA,IAAA,CAAA,QAAA,GAAA,MAAA,CAAA,EAAA,CAAA,CAAA,OAAA,EAAA,SAAA,sDAAA,CAAA,MAAA,EAAA,EAAA,OAGlB,wBAAoB,CAHF,EAAA,CAAA,CAAA,eAAA,EAAA,SAAA,8DAAA,CAAA,MAAA,EAAA,EAAA,OAIV,yBAAqB,CAJX,EAAA,CAAA,CAAA,aAAA,EAAA,SAAA,4DAAA,GAAA,EAAA,OAKZ,wBAAoB,CALR,EAAA,CAAA,CAAA;QAO/B,EAES,CAAA,UAAA,CAAA,CAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,CAAA;QACb,EAAS,CAAA,YAAA,EAAA,CAAA;;;QAZD,EAAsB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,UAAA,CAAA,CAAA,SAAA,EAAA,GAAA,CAAA,IAAA,CAAA,QAAA,CAAA,0BAAA,CAAA,UAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,UAAA,EAAA,CAAA,CAAA;QASC,EAAqC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAArC,EAAqC,CAAA,UAAA,CAAA,SAAA,EAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,SAAA,EAAA,KAAA,IAAA,GAAA,IAAA,GAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;uFAM3D,qBAAqB,EAAA,CAAA;cAlBjC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,eAAe;AACzB,gBAAA,QAAQ,EAAE,CAAA;;;;;;;;;;;;;;AAcP,IAAA,CAAA;AACJ,aAAA,CAAA;;;ACDK,MAAO,uBAAwB,SAAQ,aAAa,CAAA;AAExD,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;KACT;;8FAJU,uBAAuB,GAAA,CAAA,EAAA,CAAA;0EAAvB,uBAAuB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,MAAA,EAAA,UAAA,EAAA,aAAA,EAAA,eAAA,EAAA,OAAA,EAAA,eAAA,EAAA,aAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,gCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAZhC,EAQ+C,CAAA,cAAA,CAAA,CAAA,EAAA,UAAA,EAAA,CAAA,CAAA,CAAA;QANrC,EAA2B,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,kEAAA,CAAA,MAAA,EAAA,EAAA,OAAA,GAAA,CAAA,IAAA,CAAA,QAAA,GAAA,MAAA,CAAA,EAAA,CAAA,CAAA,OAAA,EAAA,SAAA,0DAAA,CAAA,MAAA,EAAA,EAAA,OAIlB,wBAAoB,CAJF,EAAA,CAAA,CAAA,eAAA,EAAA,SAAA,kEAAA,CAAA,MAAA,EAAA,EAAA,OAKV,yBAAqB,CALX,EAAA,CAAA,CAAA,aAAA,EAAA,SAAA,gEAAA,GAAA,EAAA,OAMZ,wBAAoB,CANR,EAAA,CAAA,CAAA;QAOrC,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA;QAAA,EAAW,CAAA,YAAA,EAAA,CAAA;;QATD,EAAsB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,UAAA,CAAA,CAAA,SAAA,EAAA,GAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,MAAA,EAAA,GAAA,CAAA,IAAA,CAAA,KAAA,EAAA,CAAA,CAAA,UAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,UAAA,EAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,IAAA,CAAA,QAAA,EAAA,CAAA,CAAA;;uFAYvB,uBAAuB,EAAA,CAAA;cAhBnC,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,iBAAiB,EAEjB,QAAA,EAAA,CAAA;;;;;;;;;;;AAWP,IAAA,CAAA,EAAA,MAAA,EAAA,CAAA,kFAAA,CAAA,EAAA,CAAA;;;ACAC,MAAO,uBAAwB,SAAQ,aAAa,CAAA;AAExD,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;KACT;AAED,IAAA,QAAQ,CAAC,KAAU,EAAA;QACjB,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC;QACtG,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC;AACzG,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,GAAG,QAAQ,CAAC;KAChE;;8FAVU,uBAAuB,GAAA,CAAA,EAAA,CAAA;0EAAvB,uBAAuB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,SAAA,EAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,OAAA,EAAA,QAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,gCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAVhC,EAOmC,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;AAD5B,QAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,uDAAA,CAAA,MAAA,EAAA,EAAA,OAAS,GAAoB,CAAA,OAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAC,CACpB,QAAA,EAAA,SAAA,wDAAA,CAAA,MAAA,EAAA,EAAA,OAAA,GAAA,CAAA,QAAA,CAAA,MAAA,CAAgB,CADI,EAAA,CAAA,CAAA;QANrC,EAOmC,CAAA,YAAA,EAAA,CAAA;;;QAP5B,EAAsB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,UAAA,CAAA,CAAA,MAAA,EAAA,GAAA,CAAA,IAAA,CAAA,KAAA,EAAA,CAAA,oCAAA,CAAA,SAAA,EAAA,GAAA,CAAA,IAAA,CAAA,QAAA,EAAA,KAAA,CAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,SAAA,EAAA,KAAA,IAAA,GAAA,IAAA,GAAA,OAAA,CAAA,IAAA,KAAA,IAAA,CAAA,CAAA,CAAA;;uFAUpB,uBAAuB,EAAA,CAAA;cAdnC,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,iBAAiB,EAEjB,QAAA,EAAA,CAAA;;;;;;;;;AASP,IAAA,CAAA,EAAA,MAAA,EAAA,CAAA,kFAAA,CAAA,EAAA,CAAA;;;ACCC,MAAO,wBAAyB,SAAQ,aAAa,CAAA;AAIzD,IAAA,WAAA,CAAoB,gBAAkC,EAAA;AACpD,QAAA,KAAK,EAAE,CAAC;QADU,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAFtD,IAAY,CAAA,YAAA,GAAW,EAAE,CAAC;KAIzB;IAED,QAAQ,GAAA;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,WAAW,EAAE;AACrF,YAAA,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;YAC3D,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;YACtG,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAC9D,SAAA;KACF;AAED,IAAA,iBAAiB,CAAC,KAAoB,EAAA;QACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;AACjC,QAAA,OAAO,KAAK,CAAC;KACd;;gGAnBU,wBAAwB,EAAA,EAAA,CAAA,iBAAA,CAAAA,IAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;2EAAxB,wBAAwB,EAAA,SAAA,EAAA,CAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,SAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,aAAA,EAAA,eAAA,EAAA,UAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,iCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QATjC,EAKsD,CAAA,cAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA,CAAA,CAAA;QALvC,EAA0B,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,wEAAA,CAAA,MAAA,EAAA,EAAA,OAAA,GAAA,CAAA,YAAA,GAAA,MAAA,CAAA,EAAA,CAAA,CAAA,UAAA,EAAA,SAAA,mEAAA,CAAA,MAAA,EAAA,EAAA,OAKd,6BAAyB,CALX,EAAA,CAAA,CAAA;QAMzC,EAAgB,CAAA,YAAA,EAAA,CAAA;;QAND,EAA0B,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,YAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,SAAA,EAAA,CAAA,SAAA,CAAA,WAAA,CAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,SAAA,EAAA,CAAA,SAAA,CAAA,eAAA,IAAA,CAAA,CAAA,CAAA,OAAA,EAAA,GAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,SAAA,EAAA,CAAA,SAAA,CAAA,KAAA,IAAA,CAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,SAAA,EAAA,CAAA,SAAA,CAAA,WAAA,IAAA,iBAAA,CAAA,CAAA;;uFAShC,wBAAwB,EAAA,CAAA;cAZpC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,kBAAkB;AAC5B,gBAAA,QAAQ,EAAE,CAAA;;;;;;;;AAQP,IAAA,CAAA;AACJ,aAAA,CAAA;;;ACGK,MAAO,oBAAqB,SAAQ,aAAa,CAAA;AAErD,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;KACT;;wFAJU,oBAAoB,GAAA,CAAA,EAAA,CAAA;uEAApB,oBAAoB,EAAA,SAAA,EAAA,CAAA,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,SAAA,EAAA,SAAA,EAAA,MAAA,EAAA,aAAA,EAAA,UAAA,EAAA,eAAA,EAAA,OAAA,EAAA,eAAA,EAAA,aAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,6BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAX7B,EAQ4C,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;QANrC,EAA2B,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,4DAAA,CAAA,MAAA,EAAA,EAAA,OAAA,GAAA,CAAA,IAAA,CAAA,QAAA,GAAA,MAAA,CAAA,EAAA,CAAA,CAAA,OAAA,EAAA,SAAA,oDAAA,CAAA,MAAA,EAAA,EAAA,OAIlB,wBAAoB,CAJF,EAAA,CAAA,CAAA,eAAA,EAAA,SAAA,4DAAA,CAAA,MAAA,EAAA,EAAA,OAKV,yBAAqB,CALX,EAAA,CAAA,CAAA,aAAA,EAAA,SAAA,0DAAA,GAAA,EAAA,OAMZ,wBAAoB,CANR,EAAA,CAAA,CAAA;QAFlC,EAQ4C,CAAA,YAAA,EAAA,CAAA;;QARrC,EAAsB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,UAAA,CAAA,CAAA,SAAA,EAAA,GAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,MAAA,EAAA,GAAA,CAAA,IAAA,CAAA,KAAA,EAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,IAAA,CAAA,QAAA,EAAA,CAAA,CAAA,UAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,UAAA,EAAA,CAAA,CAAA;;uFAWpB,oBAAoB,EAAA,CAAA;cAfhC,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,cAAc,EAEd,QAAA,EAAA,CAAA;;;;;;;;;;AAUP,IAAA,CAAA,EAAA,MAAA,EAAA,CAAA,kFAAA,CAAA,EAAA,CAAA;;;;;IChBD,EAKiD,CAAA,cAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA,CAAA,CAAA;AAFlC,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,SAAA,8EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAW,sBAAe,CAAC,EAAA,CAAA,CAAA,UAAA,EAAA,SAAA,+EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OACf,uBAAgB,CADD,EAAA,CAAA,CAAA,eAAA,EAAA,SAAA,oFAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAEV,sBAAe,CAFL,EAAA,CAAA,CAAA;IAG1C,EAAgB,CAAA,YAAA,EAAA,CAAA;;;AALD,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,CAAA,YAAA,EAAA,MAAA,CAAA,UAAA,CAAA,CAAA;;;;IAO5B,EAKmD,CAAA,cAAA,CAAA,CAAA,EAAA,iBAAA,EAAA,CAAA,CAAA,CAAA;AAFlC,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,SAAA,kFAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAW,sBAAe,CAAC,EAAA,CAAA,CAAA,UAAA,EAAA,SAAA,mFAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OACf,wBAAgB,CADD,EAAA,CAAA,CAAA,eAAA,EAAA,SAAA,wFAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAEV,uBAAe,CAFL,EAAA,CAAA,CAAA;IAG5C,EAAkB,CAAA,YAAA,EAAA,CAAA;;;AALD,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,CAAA,YAAA,EAAA,MAAA,CAAA,UAAA,CAAA,CAAA;;;;IAO9B,EAG6C,CAAA,cAAA,CAAA,CAAA,EAAA,iBAAA,EAAA,CAAA,CAAA,CAAA;AAA5B,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,SAAA,kFAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAW,uBAAe,CAAC,EAAA,CAAA,CAAA;IAC5C,EAAkB,CAAA,YAAA,EAAA,CAAA;;;AAHD,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,CAAA,YAAA,EAAA,MAAA,CAAA,UAAA,CAAA,CAAA;;;IAK9B,EAEmB,CAAA,SAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,CAAA,CAAA;;;IADD,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA;;;;IAG/B,EAKgD,CAAA,cAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA,CAAA,CAAA;AAFlC,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,SAAA,4EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAW,uBAAe,CAAC,EAAA,CAAA,CAAA,UAAA,EAAA,SAAA,6EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OACf,wBAAgB,CADD,EAAA,CAAA,CAAA,eAAA,EAAA,SAAA,kFAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAEV,uBAAe,CAFL,EAAA,CAAA,CAAA;IAGzC,EAAe,CAAA,YAAA,EAAA,CAAA;;;AALD,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,CAAA,YAAA,EAAA,MAAA,CAAA,UAAA,CAAA,CAAA;;ACnBzB,MAAO,oBAAqB,SAAQ,eAAe,CAAA;AAEvD,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;KACT;IAED,aAAa,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;KAC1E;;wFARU,oBAAoB,GAAA,CAAA,EAAA,CAAA;uEAApB,oBAAoB,EAAA,SAAA,EAAA,CAAA,CAAA,2BAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,YAAA,EAAA,SAAA,EAAA,UAAA,EAAA,eAAA,EAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,YAAA,EAAA,SAAA,EAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,YAAA,EAAA,SAAA,EAAA,UAAA,EAAA,eAAA,EAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,YAAA,EAAA,SAAA,EAAA,UAAA,EAAA,eAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,YAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,6BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QDTjC,EAAkC,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;QAC9B,EAMgB,CAAA,UAAA,CAAA,CAAA,EAAA,6CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,CAAA,CAAA;QAEhB,EAMkB,CAAA,UAAA,CAAA,CAAA,EAAA,+CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,iBAAA,EAAA,CAAA,CAAA,CAAA;QAElB,EAIkB,CAAA,UAAA,CAAA,CAAA,EAAA,+CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,iBAAA,EAAA,CAAA,CAAA,CAAA;QAElB,EAEmB,CAAA,UAAA,CAAA,CAAA,EAAA,gDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,CAAA,CAAA;QAEnB,EAMe,CAAA,UAAA,CAAA,CAAA,EAAA,4CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,CAAA,CAAA;QACnB,EAAM,CAAA,YAAA,EAAA,CAAA;;QAlCD,EAA4B,CAAA,UAAA,CAAA,UAAA,EAAA,GAAA,CAAA,aAAA,EAAA,CAAA,CAAA;QACb,EAAoB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAApB,EAAoB,CAAA,UAAA,CAAA,cAAA,EAAA,MAAA,CAAA,CAAA;QAQlB,EAAwB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAxB,EAAwB,CAAA,UAAA,CAAA,cAAA,EAAA,UAAA,CAAA,CAAA;QAQxB,EAAwB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAxB,EAAwB,CAAA,UAAA,CAAA,cAAA,EAAA,UAAA,CAAA,CAAA;QAMvB,EAAyB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAzB,EAAyB,CAAA,UAAA,CAAA,cAAA,EAAA,WAAA,CAAA,CAAA;;uFCdnC,oBAAoB,EAAA,CAAA;cAJhC,SAAS;2BACE,2BAA2B,EAAA,QAAA,EAAA,62CAAA,EAAA,CAAA;;;;;ICE/B,EAGsD,CAAA,cAAA,CAAA,CAAA,EAAA,0BAAA,EAAA,CAAA,CAAA,CAAA;AAA5B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,gGAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,uBAAgB,CAAC,EAAA,CAAA,CAAA;IACrD,EAA2B,CAAA,YAAA,EAAA,CAAA;;;AAHD,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,CAAA,YAAA,EAAA,MAAA,CAAA,UAAA,CAAA,CAAA;;;;IAIvC,EAGsD,CAAA,cAAA,CAAA,CAAA,EAAA,2BAAA,EAAA,CAAA,CAAA,CAAA;AAA5B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,kGAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,uBAAgB,CAAC,EAAA,CAAA,CAAA;IACrD,EAA4B,CAAA,YAAA,EAAA,CAAA;;;AAHF,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,CAAA,YAAA,EAAA,MAAA,CAAA,UAAA,CAAA,CAAA;;MAOlC,iBAAiB,CAAA;AAjB9B,IAAA,WAAA,GAAA;QAoBW,IAAU,CAAA,UAAA,GAAW,EAAE,CAAC;AAEvB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AAU5C,KAAA;AARC,IAAA,QAAQ,CAAC,KAAU,EAAA;AACjB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxB,QAAA,OAAO,KAAK,CAAC;KACd;IAED,aAAa,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;KAC1E;;kFAdU,iBAAiB,GAAA,CAAA,EAAA,CAAA;oEAAjB,iBAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,sBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,YAAA,EAAA,QAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,0BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAdxB,EAAkC,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;QAChC,EAI2B,CAAA,UAAA,CAAA,CAAA,EAAA,qDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,0BAAA,EAAA,CAAA,CAAA,CAAA;QAC3B,EAI4B,CAAA,UAAA,CAAA,CAAA,EAAA,sDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,2BAAA,EAAA,CAAA,CAAA,CAAA;QAC9B,EAAM,CAAA,YAAA,EAAA,CAAA;;QAXD,EAA4B,CAAA,UAAA,CAAA,UAAA,EAAA,GAAA,CAAA,aAAA,EAAA,CAAA,CAAA;QACJ,EAAsB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAtB,EAAsB,CAAA,UAAA,CAAA,cAAA,EAAA,QAAA,CAAA,CAAA;;uFAa5C,iBAAiB,EAAA,CAAA;cAjB7B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,sBAAsB;AAChC,gBAAA,QAAQ,EAAE,CAAA;;;;;;;;;;;;;AAaP,IAAA,CAAA;AACJ,aAAA,CAAA;gBAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YAEI,MAAM,EAAA,CAAA;kBAAf,MAAM;;;;ICjBL,EAAgF,CAAA,SAAA,CAAA,CAAA,EAAA,sBAAA,EAAA,CAAA,CAAA,CAAA;;;IAArC,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA;;;;IACxD,EAEkD,CAAA,cAAA,CAAA,CAAA,EAAA,sBAAA,EAAA,CAAA,CAAA,CAAA;AAA5B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,oFAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,uBAAgB,CAAC,EAAA,CAAA,CAAA;IACjD,EAAuB,CAAA,YAAA,EAAA,CAAA;;;AAHmB,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,CAAA,YAAA,EAAA,MAAA,CAAA,UAAA,CAAA,CAAA;;MAM9C,aAAa,CAAA;AAV1B,IAAA,WAAA,GAAA;QAkBW,IAAU,CAAA,UAAA,GAAW,EAAE,CAAC;QACxB,IAAI,CAAA,IAAA,GAAW,QAAQ,CAAC;QACxB,IAAW,CAAA,WAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AAS5C,KAAA;AAPC,IAAA,QAAQ,CAAC,KAAU,EAAA;QACjB,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,YAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AAC7D,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5C,SAAA;KACF;;0EApBU,aAAa,GAAA,CAAA,EAAA,CAAA;gEAAb,aAAa,EAAA,SAAA,EAAA,CAAA,CAAA,sBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAAA,WAAA,EAAA,aAAA,EAAA,aAAA,EAAA,eAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,YAAA,EAAA,IAAA,EAAA,MAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,YAAA,EAAA,QAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAPtB,EAAgF,CAAA,UAAA,CAAA,CAAA,EAAA,6CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,sBAAA,EAAA,CAAA,CAAA,CAAA;QAChF,EAGuB,CAAA,UAAA,CAAA,CAAA,EAAA,6CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,sBAAA,EAAA,CAAA,CAAA,CAAA;;QAJA,EAAkB,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,WAAA,CAAA,CAAA;QAClB,EAAiB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAjB,EAAiB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,WAAA,CAAA,CAAA;;uFAM/B,aAAa,EAAA,CAAA;cAVzB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,sBAAsB;AAChC,gBAAA,QAAQ,EAAE,CAAA;;;;;;AAMT,EAAA,CAAA;AACF,aAAA,CAAA;gBAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,GAAG,EAAA,CAAA;kBAAX,KAAK;YACG,WAAW,EAAA,CAAA;kBAAnB,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;YACG,KAAK,EAAA,CAAA;kBAAb,KAAK;YACG,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YACG,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,WAAW,EAAA,CAAA;kBAAnB,KAAK;YAEI,MAAM,EAAA,CAAA;kBAAf,MAAM;;;ACTT,MAAM,eAAe,GAAG;IACtB,aAAa;IACb,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,oBAAoB;IACpB,iBAAiB;IACjB,uBAAuB;IACvB,wBAAwB;IACxB,oBAAoB;IACpB,qBAAqB;IACrB,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;CAClB,CAAC;MAeW,UAAU,CAAA;;oEAAV,UAAU,GAAA,CAAA,EAAA,CAAA;4DAAV,UAAU,EAAA,CAAA,CAAA;AAZZ,UAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA;YACP,YAAY;YACZ,WAAW;YACX,kBAAkB;AACnB,SAAA,CAAA,EAAA,CAAA,CAAA;uFAQU,UAAU,EAAA,CAAA;cAbtB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;oBACX,kBAAkB;AACnB,iBAAA;AACD,gBAAA,YAAY,EAAE;AACZ,oBAAA,GAAG,eAAe;AACnB,iBAAA;AACD,gBAAA,OAAO,EAAE;AACP,oBAAA,GAAG,eAAe;AACnB,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,UAAU,mBA5BrB,aAAa;QACb,eAAe;QACf,aAAa;QACb,mBAAmB;QACnB,oBAAoB;QACpB,iBAAiB;QACjB,uBAAuB;QACvB,wBAAwB;QACxB,oBAAoB;QACpB,qBAAqB;QACrB,uBAAuB;QACvB,mBAAmB;AACnB,QAAA,iBAAiB,aAKf,YAAY;QACZ,WAAW;AACX,QAAA,kBAAkB,aAnBpB,aAAa;QACb,eAAe;QACf,aAAa;QACb,mBAAmB;QACnB,oBAAoB;QACpB,iBAAiB;QACjB,uBAAuB;QACvB,wBAAwB;QACxB,oBAAoB;QACpB,qBAAqB;QACrB,uBAAuB;QACvB,mBAAmB;QACnB,iBAAiB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MC7BG,UAAU,CAAA;AAAhC,IAAA,WAAA,GAAA;AAEY,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,OAAO,EAAO,CAAC;AACrC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,OAAO,EAAO,CAAC;AACnC,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,OAAO,EAAO,CAAC;AACrC,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,OAAO,EAAO,CAAC;KAwHhD;IA/GC,OAAO,GAAA;AACL,QAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;KAC/B;AAED,IAAA,IAAI,CAAC,IAAgB,EAAA;AACnB,QAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC3B,QAAA,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B;IAED,SAAS,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;KAC5C;IAED,OAAO,GAAA;AACL,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAC1C;IAED,SAAS,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;KAC5C;IAED,SAAS,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;KAC5C;AAED,IAAA,OAAO,CAAC,OAAY,EAAA;AAClB,QAAA,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC1B,QAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AAC9B,QAAA,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B;AAED,IAAA,MAAM,CAAC,OAAY,EAAA;AACjB,QAAA,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC1B,QAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC7B,QAAA,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B;AAED,IAAA,GAAG,CAAC,OAAY,EAAA;AACd,QAAA,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC1B,QAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC1B,QAAA,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B;AAED,IAAA,MAAM,CAAC,OAAY,EAAA;AACjB,QAAA,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC5B,QAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC7B,QAAA,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B;IAED,MAAM,CAAC,OAAY,EAAE,MAAW,EAAA;AAC9B,QAAA,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC5B,QAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC7B,QAAA,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B;IAED,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC5B,QAAA,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;KAC1B;IAED,OAAO,CAAC,IAAgB,EAAE,MAAgB,EAAA;AACxC,QAAA,IAAI,MAAM,EAAE;AACV,YAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC5B,SAAA;KACF;AAED,IAAA,SAAS,CAAC,IAAgB,EAAE,WAAqB,EAAE,MAAgB,EAAA;AACjE,QAAA,IAAI,MAAM,EAAE;AACV,YAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC9B,SAAA;KACF;AAED,IAAA,SAAS,CAAC,SAAa,EAAE,WAAqB,EAAE,MAAgB,EAAA;AAC9D,QAAA,IAAI,MAAM,EAAE;AACV,YAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC9B,SAAA;KACF;AAED,IAAA,SAAS,CAAC,IAAY,EAAE,OAAe,EAAE,MAAgB,EAAA;AACvD,QAAA,IAAI,MAAM,EAAE;AACV,YAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC9B,SAAA;KACF;IAED,OAAO,CAAC,IAAY,EAAE,MAAgB,EAAA;AACpC,QAAA,IAAI,MAAM,EAAE;AACV,YAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC5B,SAAA;KACF;AAES,IAAA,aAAa,CAAC,OAAY,EAAA;AAClC,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACpC;AAES,IAAA,aAAa,CAAC,OAAY,EAAA;AAClC,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACpC;AAES,IAAA,WAAW,CAAC,OAAY,EAAA;AAChC,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAClC;AAES,IAAA,aAAa,CAAC,MAAc,EAAA;AACpC,QAAA,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;AAC9D,YAAA,MAAM,EAAE,MAAM;AACd,YAAA,QAAQ,EAAE,QAAQ;AAClB,YAAA,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;AACxB,YAAA,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE;AACxB,YAAA,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;AACrB,SAAA,CAAC,CAAC,CAAC;KACL;AACF;;MCxHY,aAAa,CAAA;AAH1B,IAAA,WAAA,GAAA;QAOW,IAAU,CAAA,UAAA,GAAW,EAAE,CAAC;AAEvB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;QAE3C,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;AASpB,KAAA;AAPC,IAAA,QAAQ,CAAC,KAAa,EAAA;AACpB,QAAA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;AACpB,YAAA,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;AACrB,YAAA,MAAM,EAAE,KAAK;AACb,YAAA,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;AACxC,SAAA,CAAC,CAAC;KACJ;;0EAhBU,aAAa,GAAA,CAAA,EAAA,CAAA;gEAAb,aAAa,EAAA,SAAA,EAAA,CAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAAb,aAAa,EAAA,CAAA;cAHzB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,EAAE;AACb,aAAA,CAAA;gBAGU,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YAEI,MAAM,EAAA,CAAA;kBAAf,MAAM;;;;;ACEH,MAAO,qBAAsB,SAAQ,aAAa,CAAA;AAKtD,IAAA,WAAA,CAAoB,QAAkC,EAAA;AACpD,QAAA,KAAK,EAAE,CAAC;QADU,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAA0B;KAErD;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;QAChC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;AACxC,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC7F,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;;YAG5E,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACjD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACnD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACnD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAC3D,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAU,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AACtF,SAAA;QACD,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACpD,SAAA;KACF;IAED,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,eAAe,EAAE;AACxB,YAAA,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;AAChC,SAAA;KACF;;0FA9BU,qBAAqB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,wBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;wEAArB,qBAAqB,EAAA,SAAA,EAAA,CAAA,CAAA,qBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,2BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;iCAGI,gBAAgB,CAAA,CAAA;;;;;QALzC,EAA0C,CAAA,UAAA,CAAA,CAAA,EAAA,4CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,sBAAA,CAAA,CAAA;;uFAE1C,qBAAqB,EAAA,CAAA;cAJjC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,qBAAqB;AAC/B,gBAAA,QAAQ,EAAE,CAA4C,0CAAA,CAAA;AACvD,aAAA,CAAA;2EAEU,KAAK,EAAA,CAAA;kBAAb,KAAK;YAEgE,aAAa,EAAA,CAAA;kBAAlF,SAAS;mBAAC,eAAe,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;MCXzD,aAAa,CAAA;AAH1B,IAAA,WAAA,GAAA;QAKE,IAAK,CAAA,KAAA,GAAW,GAAG,CAAC;AAKV,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAU,CAAC;AAW/C,KAAA;IATC,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC5B,YAAA,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;AACxC,SAAA;KACF;IAED,SAAS,GAAA;QACP,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;;0EAjBU,aAAa,GAAA,CAAA,EAAA,CAAA;gEAAb,aAAa,EAAA,SAAA,EAAA,CAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,UAAA,EAAA,YAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;uFAAb,aAAa,EAAA,CAAA;cAHzB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,EAAE;AACb,aAAA,CAAA;gBAKU,KAAK,EAAA,CAAA;kBAAb,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACI,MAAM,EAAA,CAAA;kBAAf,MAAM;;;;;ICAD,EAAoF,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,CAAA;IAClF,EACF,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAS,CAAA,YAAA,EAAA,CAAA;;;IAFoD,EAAsB,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA;IACjF,EACF,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IADE,EACF,CAAA,kBAAA,CAAA,GAAA,EAAA,SAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;AAIF,MAAO,qBAAsB,SAAQ,aAAa,CAAA;AAItD,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;KACT;IAED,QAAQ,GAAA;QACN,IAAI,CAAC,YAAY,CAAC,YAAY;AAC3B,aAAA,IAAI,CACH,IAAI,CAAC,CAAC,CAAC,EACP,oBAAoB,EAAE,EACtB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CACzB;aACA,SAAS,CAAC,CAAC,KAAa,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;KACnD;;0FAhBU,qBAAqB,GAAA,CAAA,EAAA,CAAA;wEAArB,qBAAqB,EAAA,SAAA,EAAA,CAAA,CAAA,eAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,2BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;iCAEG,SAAS,CAAA,CAAA;;;;;QAd1C,EAG4B,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA;QAApB,EAAmB,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,8DAAA,CAAA,MAAA,EAAA,EAAA,OAAA,GAAA,CAAA,KAAA,GAAA,MAAA,CAAA,EAAA,CAAA,CAAA;QAEvB,EAAiB,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,CAAA;QAAA,EAAyC,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;QAAA,EAAS,CAAA,YAAA,EAAA,CAAA;QACnE,EAES,CAAA,UAAA,CAAA,CAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,CAAA;QACb,EAAS,CAAA,YAAA,EAAA,CAAA;;AATD,QAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,UAAA,CAAsB,CAAA,SAAA,EAAA,GAAA,CAAA,KAAA,CAAA,CAAA;QAKT,EAAyC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAzC,EAAyC,CAAA,iBAAA,CAAA,GAAA,CAAA,MAAA,CAAA,eAAA,EAAA,CAAA,UAAA,CAAA,CAAA;QAC/B,EAAgC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAhC,EAAgC,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,MAAA,CAAA,eAAA,EAAA,CAAA,IAAA,CAAA,CAAA;;uFAMtD,qBAAqB,EAAA,CAAA;cAfjC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,eAAe;AACzB,gBAAA,QAAQ,EAAE,CAAA;;;;;;;;;;;AAWT,EAAA,CAAA;AACF,aAAA,CAAA;sCAG+D,YAAY,EAAA,CAAA;kBAAzE,SAAS;mBAAC,cAAc,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;;;ICb1D,EAC0C,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAA9B,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,uDAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAS,0BAAmB,CAAC,EAAA,CAAA,CAAA;IAAC,EAAkD,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAI,CAAA,YAAA,EAAA,CAAA;;;;IAAtD,EAAkD,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAlD,EAAkD,CAAA,iBAAA,CAAA,CAAA,CAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA,KAAA,IAAA,GAAA,IAAA,GAAA,OAAA,CAAA,SAAA,KAAA,OAAA,CAAA,CAAA;;AAG1F,MAAO,uBAAwB,SAAQ,aAAa,CAAA;AAKxD,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;QAJV,IAAY,CAAA,YAAA,GAAY,KAAK,CAAC;AAC9B,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,WAAW,EAAE,CAAC;KAIhC;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY;AACtD,aAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,aAAA,SAAS,CAAC,CAAC,OAAgB,KAAI;AAC9B,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC;YAC9F,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC;AACjG,YAAA,IAAI,CAAC,KAAK,GAAG,OAAO,GAAG,OAAO,GAAG,QAAQ,CAAC;YAC1C,IAAI,CAAC,SAAS,EAAE,CAAC;AACnB,SAAC,CAAC,CAAC;KACN;AAED,IAAA,WAAW,CAAC,KAAU,EAAA;QACpB,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACxD,QAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;;8FA3BU,uBAAuB,GAAA,CAAA,EAAA,CAAA;0EAAvB,uBAAuB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,gCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QALhC,EAAgG,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;QAChG,EACgG,CAAA,UAAA,CAAA,CAAA,EAAA,oCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;;AAFzE,QAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,YAAA,CAA4B,CAAA,SAAA,EAAA,GAAA,CAAA,UAAA,CAAA,CAAA;QACtC,EAAkB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAlB,EAAkB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,YAAA,CAAA,CAAA;;uFAItB,uBAAuB,EAAA,CAAA;cARnC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,iBAAiB;AAC3B,gBAAA,QAAQ,EAAE,CAAA;;;;AAIT,EAAA,CAAA;AACF,aAAA,CAAA;;;ACOK,MAAO,wBAAyB,SAAQ,aAAa,CAAA;AAIzD,IAAA,WAAA,CAAoB,gBAAkC,EAAA;AACpD,QAAA,KAAK,EAAE,CAAC;QADU,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;AAFtD,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,OAAO,EAAO,CAAC;KAIrC;IAED,QAAQ,GAAA;QACN,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC;QACvD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;QACtG,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAE7D,QAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,gBAAgB;AAC7C,aAAA,IAAI,CACH,GAAG,CAAC,CAAC,EAAO,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,KAAK,EAAE,IAAI,EAAE,CAAC,EAC9C,oBAAoB,EAAE,EACtB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CACzB;AACA,aAAA,SAAS,CAAC,CAAC,MAAc,KAAI;AAC5B,YAAA,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACpB,IAAI,CAAC,SAAS,EAAE,CAAC;AACnB,SAAC,CAAC,CAAC;KACN;AAED,IAAA,gBAAgB,CAAC,KAAa,EAAA;;;;QAI5B,IAAI,KAAK,KAAK,EAAE,EAAE;AAChB,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnC,SAAA;KACF;;gGAhCU,wBAAwB,EAAA,EAAA,CAAA,iBAAA,CAAAA,IAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;2EAAxB,wBAAwB,EAAA,SAAA,EAAA,CAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,SAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,aAAA,EAAA,eAAA,EAAA,UAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,iCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAVjC,EAM0D,CAAA,cAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA,CAAA,CAAA;AAN3C,QAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,wEAAA,CAAA,MAAA,EAAA,EAAA,OAAA,GAAA,CAAA,KAAA,GAAA,MAAA,CAAA,EAAA,CAAmB,CACF,eAAA,EAAA,SAAA,wEAAA,CAAA,MAAA,EAAA,EAAA,OAAA,GAAA,CAAA,gBAAA,CAAA,MAAA,CAAwB,CADtB,EAAA,CAAA,CAAA,UAAA,EAAA,SAAA,mEAAA,CAAA,MAAA,EAAA,EAAA,OAMP,iCAA6B,CANtB,EAAA,CAAA,CAAA;QAOlC,EAAgB,CAAA,YAAA,EAAA,CAAA;;QAPD,EAAmB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,KAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,MAAA,CAAA,eAAA,EAAA,CAAA,SAAA,CAAA,WAAA,CAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,MAAA,CAAA,eAAA,EAAA,CAAA,SAAA,CAAA,eAAA,IAAA,CAAA,CAAA,CAAA,OAAA,EAAA,GAAA,CAAA,MAAA,CAAA,eAAA,EAAA,CAAA,SAAA,CAAA,KAAA,IAAA,CAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,MAAA,CAAA,eAAA,EAAA,CAAA,SAAA,CAAA,WAAA,IAAA,iBAAA,CAAA,CAAA;;uFAUzB,wBAAwB,EAAA,CAAA;cAbpC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,kBAAkB;AAC5B,gBAAA,QAAQ,EAAE,CAAA;;;;;;;;;AAST,EAAA,CAAA;AACF,aAAA,CAAA;;;ACFK,MAAO,oBAAqB,SAAQ,aAAa,CAAA;AAIrD,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AAHV,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,WAAW,EAAE,CAAC;KAIhC;IAED,QAAQ,GAAA;QACN,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxC,SAAA;QACD,IAAI,CAAC,YAAY,CAAC,YAAY;aAC3B,IAAI,CACH,oBAAoB,EAAE,EACtB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CACzB;AACA,aAAA,SAAS,CAAC,CAAC,KAAa,KAAI;YAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACrC,IAAI,CAAC,SAAS,EAAE,CAAC;AACnB,SAAC,CAAC,CAAC;KACN;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;QAChC,IAAI,OAAO,CAAC,KAAK,EAAE;YACjB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxC,SAAA;KACF;;wFA3BU,oBAAoB,GAAA,CAAA,EAAA,CAAA;uEAApB,oBAAoB,EAAA,SAAA,EAAA,CAAA,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,EAAA,MAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,SAAA,EAAA,aAAA,EAAA,aAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,6BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAR7B,EAKoC,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;;QAAlC,EAAgC,CAAA,qBAAA,CAAA,aAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;AAJhC,QAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,UAAA,CAAsB,CAAA,aAAA,EAAA,GAAA,CAAA,YAAA,CAAA,CAAA;;uFAOf,oBAAoB,EAAA,CAAA;cAXhC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,cAAc;AACxB,gBAAA,QAAQ,EAAE,CAAA;;;;;;;AAOT,EAAA,CAAA;AACF,aAAA,CAAA;;;;;ICRK,EAI2C,CAAA,cAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA,CAAA,CAAA;AAA5B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,+EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,uBAAgB,CAAC,EAAA,CAAA,CAAA;IAC1C,EAAgB,CAAA,YAAA,EAAA,CAAA;;;AAJD,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,MAAA,CAAA,KAAA,CAAe,8BAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA;;;;IAK9B,EAI6C,CAAA,cAAA,CAAA,CAAA,EAAA,iBAAA,EAAA,CAAA,CAAA,CAAA;AAA5B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,mFAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,uBAAgB,CAAC,EAAA,CAAA,CAAA;IAC5C,EAAkB,CAAA,YAAA,EAAA,CAAA;;;AAJD,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,MAAA,CAAA,KAAA,CAAe,8BAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA;;;;IAKhC,EAI8C,CAAA,cAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,CAAA,CAAA;AAA5B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,qFAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,uBAAgB,CAAC,EAAA,CAAA,CAAA;IAC7C,EAAmB,CAAA,YAAA,EAAA,CAAA;;;AAJD,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,MAAA,CAAA,KAAA,CAAe,8BAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA;;;;IAKjC,EAI0C,CAAA,cAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA,CAAA,CAAA;AAA5B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,6EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,wBAAgB,CAAC,EAAA,CAAA,CAAA;IACzC,EAAe,CAAA,YAAA,EAAA,CAAA;;;AAJD,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,MAAA,CAAA,KAAA,CAAe,8BAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA;;AAQ7B,MAAO,sBAAuB,SAAQ,aAAa,CAAA;;AAA5C,sBAAA,CAAA,IAAA,iBAAA,YAAA,EAAA,IAAA,mCAAA,CAAA,CAAA,OAAA,SAAA,8BAAA,CAAA,CAAA,EAAA,EAAA,OAAA,CAAA,mCAAA,KAAA,mCAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,sBAAsB,SAAtB,sBAAsB,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA;yEAAtB,sBAAsB,EAAA,SAAA,EAAA,CAAA,CAAA,sBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,QAAA,EAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,QAAA,EAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,QAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,+BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QA5B/B,EAAkD,CAAA,uBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;QAChD,EAKgB,CAAA,UAAA,CAAA,CAAA,EAAA,+CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,CAAA,CAAA;QAChB,EAKkB,CAAA,UAAA,CAAA,CAAA,EAAA,iDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,iBAAA,EAAA,CAAA,CAAA,CAAA;QAClB,EAKmB,CAAA,UAAA,CAAA,CAAA,EAAA,kDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,CAAA,CAAA;QACnB,EAKe,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,CAAA,CAAA;QACjB,EAAe,CAAA,qBAAA,EAAA,CAAA;;QAzBD,EAAmC,CAAA,UAAA,CAAA,UAAA,EAAA,GAAA,CAAA,MAAA,CAAA,aAAA,EAAA,CAAA,CAAA;QAC/B,EAAoB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAApB,EAAoB,CAAA,UAAA,CAAA,cAAA,EAAA,MAAA,CAAA,CAAA;QAMlB,EAAwB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAxB,EAAwB,CAAA,UAAA,CAAA,cAAA,EAAA,UAAA,CAAA,CAAA;QAMvB,EAAyB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAzB,EAAyB,CAAA,UAAA,CAAA,cAAA,EAAA,WAAA,CAAA,CAAA;;uFAerC,sBAAsB,EAAA,CAAA;cA/BlC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,sBAAsB;AAChC,gBAAA,QAAQ,EAAE,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BT,EAAA,CAAA;AACF,aAAA,CAAA;gBAEU,KAAK,EAAA,CAAA;kBAAb,KAAK;;;;;IC3BA,EAKiD,CAAA,cAAA,CAAA,CAAA,EAAA,qBAAA,EAAA,CAAA,CAAA,CAAA;AAA5B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,0FAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAU,uBAAgB,CAAC,EAAA,CAAA,CAAA;IAChD,EAAsB,CAAA,YAAA,EAAA,CAAA;;;IALD,EAAe,CAAA,UAAA,CAAA,OAAA,EAAA,MAAA,CAAA,KAAA,CAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,yBAAA,CAAA,YAAA,EAAA,MAAA,CAAA,UAAA,CAAA,CAAA;;;;IAMpC,EAKkD,CAAA,cAAA,CAAA,CAAA,EAAA,sBAAA,EAAA,CAAA,CAAA,CAAA;AAA5B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,4FAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAU,uBAAgB,CAAC,EAAA,CAAA,CAAA;IACjD,EAAuB,CAAA,YAAA,EAAA,CAAA;;;IALD,EAAe,CAAA,UAAA,CAAA,OAAA,EAAA,MAAA,CAAA,KAAA,CAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,yBAAA,CAAA,YAAA,EAAA,MAAA,CAAA,UAAA,CAAA,CAAA;;;IATvC,EAA8F,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;IAC5F,EAMsB,CAAA,UAAA,CAAA,CAAA,EAAA,oDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,qBAAA,EAAA,CAAA,CAAA,CAAA;IACtB,EAMuB,CAAA,UAAA,CAAA,CAAA,EAAA,qDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,sBAAA,EAAA,CAAA,CAAA,CAAA;IACzB,EAAM,CAAA,YAAA,EAAA,CAAA;;;IAfoD,EAAmC,CAAA,UAAA,CAAA,UAAA,EAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA,CAAA,CAAA;IACrE,EAAsB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAtB,EAAsB,CAAA,UAAA,CAAA,cAAA,EAAA,QAAA,CAAA,CAAA;;AAiB9C,MAAO,eAAgB,SAAQ,aAAa,CAAA;AAtBlD,IAAA,WAAA,GAAA;;QAuBE,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;AAyBpB,KAAA;AAtBC,IAAA,WAAW,CAAC,OAAsB,EAAA;QAChC,IAAI,OAAO,CAAC,MAAM,EAAE;AAClB,YAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE;AAC/B,gBAAA,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;AACnC,aAAA;AACD,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,WAAW,KAAI;gBACtE,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AAC3C,gBAAA,IAAI,UAAU,IAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AACvE,oBAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;AAIjB,iBAAA;AAAM,qBAAA,IAAI,UAAU,IAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC5E,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAM,EAAE,CAAM,KAAI;wBAC5C,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;AAC7B,4BAAA,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC;AACvB,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;;AAzBU,eAAA,CAAA,IAAA,iBAAA,YAAA,EAAA,IAAA,4BAAA,CAAA,CAAA,OAAA,SAAA,uBAAA,CAAA,CAAA,EAAA,EAAA,OAAA,CAAA,4BAAA,KAAA,4BAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,eAAe,SAAf,eAAe,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA;kEAAf,eAAe,EAAA,SAAA,EAAA,CAAA,CAAA,wBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,0BAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,OAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,wBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAlBtB,EAeM,CAAA,UAAA,CAAA,CAAA,EAAA,8BAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;;QAfyB,EAAyB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,MAAA,CAAA,YAAA,CAAA,CAAA;;uFAkBjD,eAAe,EAAA,CAAA;cAtB3B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,wBAAwB,EAExB,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;AAiBP,IAAA,CAAA,EAAA,MAAA,EAAA,CAAA,iWAAA,CAAA,EAAA,CAAA;;;ACTL,MAAM,iBAAiB,GAAG;IACxB,aAAa;IACb,aAAa;IACb,eAAe;IACf,sBAAsB;IACtB,qBAAqB;IACrB,uBAAuB;IACvB,wBAAwB;IACxB,oBAAoB;IACpB,qBAAqB;CACtB,CAAC;MAgBW,YAAY,CAAA;;wEAAZ,YAAY,GAAA,CAAA,EAAA,CAAA;8DAAZ,YAAY,EAAA,CAAA,CAAA;AAbd,YAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA;YACP,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,kBAAkB;AACnB,SAAA,CAAA,EAAA,CAAA,CAAA;uFAQU,YAAY,EAAA,CAAA;cAdxB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;oBACX,mBAAmB;oBACnB,kBAAkB;AACnB,iBAAA;AACD,gBAAA,YAAY,EAAE;AACZ,oBAAA,GAAG,iBAAiB;AACrB,iBAAA;AACD,gBAAA,OAAO,EAAE;AACP,oBAAA,GAAG,iBAAiB;AACrB,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,YAAY,mBAzBvB,aAAa;QACb,aAAa;QACb,eAAe;QACf,sBAAsB;QACtB,qBAAqB;QACrB,uBAAuB;QACvB,wBAAwB;QACxB,oBAAoB;AACpB,QAAA,qBAAqB,aAKnB,YAAY;QACZ,WAAW;QACX,mBAAmB;AACnB,QAAA,kBAAkB,aAhBpB,aAAa;QACb,aAAa;QACb,eAAe;QACf,sBAAsB;QACtB,qBAAqB;QACrB,uBAAuB;QACvB,wBAAwB;QACxB,oBAAoB;QACpB,qBAAqB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;ICGb,EAC0B,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;IAAA,EAAW,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAsB,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAS,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,YAAA,EAAO,EAAA,CAAA;;;IAAjD,EAAW,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAX,EAAW,CAAA,kBAAA,CAAA,EAAA,EAAA,OAAA,EAAA,GAAA,CAAA,CAAA;;;;IACrC,EACmD,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;AAAnD,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,0DAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,SAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAS,wBAAc,CAAC,EAAA,CAAA,CAAA;IAA2B,EAAU,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAI,CAAA,YAAA,EAAA,CAAA;;;IAAd,EAAU,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAV,EAAU,CAAA,iBAAA,CAAA,OAAA,CAAA,CAAA;;;;IAL/D,EACwE,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IACtE,EACkF,CAAA,UAAA,CAAA,CAAA,EAAA,0CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;IAClF,EACiE,CAAA,UAAA,CAAA,CAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;IACnE,EAAK,CAAA,YAAA,EAAA,CAAA;;;;IALL,EAAuC,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAAC,KAAA,EAAA,MAAA,CAAA,OAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CAAA;IAEpC,EAAuB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAvB,EAAuB,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,OAAA,EAAA,IAAA,OAAA,CAAA,CAAA;IAEE,EAAuB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAvB,EAAuB,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,OAAA,EAAA,IAAA,OAAA,CAAA,CAAA;;;;;IArBvD,EAA2D,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,YAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;IAIrD,EAAS,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,gDAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,OAAA,CAAA,OAAA,EAAS,IAAI,CAAC,GAAG,KAAK,GAAG,OAAA,CAAA,QAAA,CAAS,CAAC,CAAC,CAAC,EAAA,CAAA,CAAA;IAC5C,EAAyB,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAO,CAAA,MAAA,CAAA,CAAA,EAAA,QAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;IACvC,EAAsB,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAK,CAAA,MAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,YAAA,EAAO,EAAA,EAAA,CAAA;AAGtC,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAiF,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAE5E,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,gDAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAS,iBAAS,IAAI,CAAC,GAAG,KAAK,GAAG,cAAM,CAAC,EAAA,CAAA,CAAA;IAC1C,EAAyB,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAI,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;IACpC,EAAsB,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAI,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,YAAA,EAAO,EAAA,EAAA,CAAA;IAGrC,EAMK,CAAA,UAAA,CAAA,EAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;AAEL,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,IAAA,EAAA,CAAA,CACmD,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;AAE9C,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,iDAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAS,iBAAS,IAAI,OAAA,CAAA,OAAA,EAAS,GAAG,KAAK,GAAG,cAAM,CAAC,EAAA,CAAA,CAAA;IAClD,EAAyB,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAI,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;IACpC,EAAsB,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAI,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,YAAA,EAAO,EAAA,EAAA,CAAA;AAIrC,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,IAAA,EAAA,CAAA,CAC+C,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;IAE7C,EAAS,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,iDAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,OAAA,CAAA,OAAA,EAAS,IAAI,OAAS,CAAA,OAAA,EAAA,GAAG,KAAK,GAAG,OAAA,CAAA,QAAA,CAAS,OAAS,CAAA,OAAA,EAAA,CAAC,CAAC,EAAA,CAAA,CAAA;IAC5D,EAAyB,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAO,CAAA,MAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;IACvC,EAAsB,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAI,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;;;IApCK,EAAsC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAtC,EAAsC,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAAC,KAAA,EAAA,MAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA;IAOtC,EAAsC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAtC,EAAsC,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAAA,KAAA,EAAA,MAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA;IAQvB,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAb,EAAa,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,QAAA,EAAA,CAAA,CAAA;IAQlE,EAA8C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA9C,EAA8C,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAAA,KAAA,EAAA,MAAA,CAAA,OAAA,EAAA,IAAA,MAAA,CAAA,OAAA,EAAA,CAAA,CAAA,CAAA;IASlD,EAA8C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA9C,EAA8C,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAAA,KAAA,EAAA,MAAA,CAAA,OAAA,EAAA,IAAA,MAAA,CAAA,OAAA,EAAA,CAAA,CAAA,CAAA;;;IAe9C,EAA0D,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,EAAA,CAAA,CAAA;IAAA,EAAU,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAS,CAAA,YAAA,EAAA,CAAA;;;IAAlC,EAAc,CAAA,UAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA;IAAC,EAAU,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAV,EAAU,CAAA,iBAAA,CAAA,QAAA,CAAA,CAAA;;;;AALxE,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAA6F,CAAA,CAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA;IAEzF,EACF,CAAA,MAAA,CAAA,CAAA,EAAA,aAAA,CAAA,CAAA;IAAA,EAAQ,CAAA,YAAA,EAAA,CAAA;IACR,EAAsF,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,EAAA,CAAA,CAAA;IAA9E,EAAU,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,sDAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,OAAA,CAAA,eAAA,CAAA,MAAA,CAAuB,IAAC,CAAA,eAAA,EAAA,SAAA,6DAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,OAAA,CAAA,cAAA,GAAA,MAAA,CAAA,EAAA,CAAA,CAAA;IACxC,EAA6E,CAAA,UAAA,CAAA,CAAA,EAAA,sCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,CAAA,CAAA;AAC/E,IAAA,EAAA,CAAA,YAAA,EAAS,EAAA,CAAA;;;IAFkC,EAA4B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA5B,EAA4B,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,cAAA,CAAA,CAAA;IAC5C,EAAgB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAhB,EAAgB,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,aAAA,CAAA,CAAA;;MAKpC,cAAc,CAAA;AA1D3B,IAAA,WAAA,GAAA;QA6DW,IAAa,CAAA,aAAA,GAAU,EAAE,CAAC;AAEzB,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAO,CAAC;QAMrC,IAAK,CAAA,KAAA,GAAW,CAAC,CAAC;AA8G7B,KAAA;AAzGC,IAAA,WAAW,CAAC,OAAsB,EAAA;QAChC,IAAI,OAAO,CAAC,MAAM,EAAE;AAClB,YAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE;AAC/B,gBAAA,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;AACnC,aAAA;AACD,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,WAAW,KAAI;gBACtE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC;gBACzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC;AAC/C,gBAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC;gBACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AACjC,gBAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;oBAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,iBAAA;AAED,gBAAA,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;gBACpC,IAAI,CAAC,SAAS,EAAE,CAAC;AACnB,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;AAED;;;;;AAKG;AACH,IAAA,iBAAiB,CAAC,OAAY,EAAA;AAC5B,QAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;AACnC,YAAA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACxB,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;YAClC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AACrC,SAAA;KACF;IAED,UAAU,GAAA;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;KAC3C;AAED,IAAA,QAAQ,CAAC,IAAY,EAAA;AACnB,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC1B,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/B,QAAA,OAAO,KAAK,CAAC;KACd;IAED,IAAI,GAAA;QACF,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;KAC1C;IAED,IAAI,GAAA;QACF,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;KAC1C;IAED,OAAO,GAAA;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAED,QAAQ,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,OAAO,GAAA;AACL,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;KAC7C;IAED,iBAAiB,GAAA;QACf,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,MAAM,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KACnF;IAED,SAAS,GAAA;AACP,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAClC,IAAI,cAAc,GAAG,CAAC,CAAC;AACvB,QAAA,cAAc,GAAG,UAAU,GAAG,cAAc,GAAG,UAAU,GAAG,cAAc,CAAC;AAC3E,QAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAEhB,QAAA,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;YAErB,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;AAC9C,YAAA,SAAS,GAAG,IAAI,CAAC,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;AAE3D,YAAA,IAAI,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;AACzD,YAAA,OAAO,GAAG,OAAO,IAAI,UAAU,GAAG,UAAU,GAAG,OAAO,CAAC;AAEvD,YAAA,MAAM,QAAQ,GAAG,OAAO,GAAG,cAAc,GAAG,CAAC,CAAC;YAE9C,KAAK,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,EAAE,EAAE;AACxC,gBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,aAAA;AACF,SAAA;KACF;AAED,IAAA,eAAe,CAAC,KAAU,EAAA;QACxB,IAAI,IAAI,CAAC,cAAc,EAAE;AAEvB,YAAA,IAAI,OAAO,IAAI,CAAC,cAAc,KAAK,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,KAAK,KAAK,EAAE;gBAC1F,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;AACxC,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;AAC1D,gBAAA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;AACvB,aAAA;YACD,IAAI,CAAC,SAAS,EAAE,CAAC;AAClB,SAAA;KACF;;4EAvHU,cAAc,GAAA,CAAA,EAAA,CAAA;iEAAd,cAAc,EAAA,SAAA,EAAA,CAAA,CAAA,uBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,OAAA,EAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,OAAA,EAAA,0BAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,+BAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,0BAAA,CAAA,EAAA,CAAA,CAAA,EAAA,sBAAA,EAAA,YAAA,CAAA,EAAA,CAAA,CAAA,EAAA,qBAAA,EAAA,WAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,YAAA,EAAA,OAAA,EAAA,CAAA,EAAA,qBAAA,EAAA,WAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,aAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,EAAA,qBAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,OAAA,EAAA,+BAAA,EAAA,CAAA,EAAA,SAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,EAAA,qBAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,EAAA,qBAAA,EAAA,WAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,OAAA,EAAA,+BAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,+BAAA,EAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,qBAAA,EAAA,WAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,qBAAA,EAAA,WAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,+BAAA,CAAA,EAAA,CAAA,KAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,EAAA,UAAA,EAAA,CAAA,EAAA,SAAA,EAAA,QAAA,EAAA,eAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,uBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAtDvB,EA0CM,CAAA,UAAA,CAAA,CAAA,EAAA,6BAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;QAEN,EAOM,CAAA,UAAA,CAAA,CAAA,EAAA,6BAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;;QAnDA,EAAkB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,UAAA,EAAA,CAAA,CAAA;QA4ClB,EAA+C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAA/C,EAA+C,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,aAAA,IAAA,GAAA,CAAA,aAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA;;uFAU5C,cAAc,EAAA,CAAA;cA1D1B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,uBAAuB,EAEvB,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDT,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,mfAAA,CAAA,EAAA,CAAA;gBAIQ,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;YAEI,UAAU,EAAA,CAAA;kBAAnB,MAAM;;;MClDI,WAAW,CAAA;;sEAAX,WAAW,GAAA,CAAA,EAAA,CAAA;6DAAX,WAAW,EAAA,CAAA,CAAA;AAXb,WAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA;YACP,YAAY;YACZ,WAAW;AACZ,SAAA,CAAA,EAAA,CAAA,CAAA;uFAQU,WAAW,EAAA,CAAA;cAZvB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;AACZ,iBAAA;AACD,gBAAA,YAAY,EAAE;oBACZ,cAAc;AACf,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,cAAc;AACf,iBAAA;AACF,aAAA,CAAA;;wFACY,WAAW,EAAA,EAAA,YAAA,EAAA,CANpB,cAAc,CAAA,EAAA,OAAA,EAAA,CAJd,YAAY;AACZ,QAAA,WAAW,aAMX,cAAc,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;;ICNZ,EAGsC,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAnC,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,oDAAA,CAAA,MAAA,EAAA,EAAA,MAAA,WAAA,GAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,SAAA,GAAA,WAAA,CAAA,SAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAS,kCAAwB,CAAC,EAAA,CAAA,CAAA;IAAC,EAAI,CAAA,YAAA,EAAA,CAAA;;;IADvC,EAA0B,CAAA,UAAA,CAAA,WAAA,EAAA,SAAA,CAAA,KAAA,EAAA,EAAA,CAAA,cAAA,CAAA,CAAA;;MAItB,oBAAoB,CAAA;AAVjC,IAAA,WAAA,GAAA;AAec,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AAa9C,KAAA;IAXG,QAAQ,CAAC,MAAW,EAAE,KAAU,EAAA;QAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AAExB,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACb,MAAM,EAAE,MAAM,CAAC,IAAI;AACnB,YAAA,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;YACxB,MAAM,EAAE,IAAI,CAAC,MAAM;AACtB,SAAA,CAAC,CAAC;KACN;;wFAhBQ,oBAAoB,GAAA,CAAA,EAAA,CAAA;uEAApB,oBAAoB,EAAA,SAAA,EAAA,CAAA,CAAA,qBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA,iDAAA,EAAA,CAAA,EAAA,WAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,gCAAA,EAAA,CAAA,EAAA,WAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,6BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAN3B,EAG0C,CAAA,UAAA,CAAA,CAAA,EAAA,iCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;;QAHpB,EAAoC,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,IAAA,CAAA,UAAA,CAAA,gBAAA,CAAA,CAAA,CAAA;;uFAMnD,oBAAoB,EAAA,CAAA;cAVhC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACP,gBAAA,QAAQ,EAAE,qBAAqB;gBAC/B,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAC/C,gBAAA,QAAQ,EAAE,CAAA;;;;;AAKL,QAAA,CAAA;AACR,aAAA,CAAA;gBAGY,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,GAAG,EAAA,CAAA;kBAAX,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACI,MAAM,EAAA,CAAA;kBAAf,MAAM;;;;;ICVP,EACgE,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAzB,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,wDAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAS,qBAAc,CAAC,EAAA,CAAA,CAAA;IAAC,EAAI,CAAA,YAAA,EAAA,CAAA;;;IAAhE,EAAkC,CAAA,UAAA,CAAA,WAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,EAAA,CAAA,cAAA,CAAA,CAAA;;;;IACtC,EACoE,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAA3B,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,wDAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAS,uBAAgB,CAAC,EAAA,CAAA,CAAA;IAAC,EAAI,CAAA,YAAA,EAAA,CAAA;;;IAApE,EAAoC,CAAA,UAAA,CAAA,WAAA,EAAA,MAAA,CAAA,sBAAA,EAAA,EAAA,CAAA,cAAA,CAAA,CAAA;;MAG/B,wBAAwB,CAAA;AAVrC,IAAA,WAAA,GAAA;AAkBY,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAAO,CAAC;AAC/B,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AACjC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAO,CAAC;AA2CnD,KAAA;AApCC,IAAA,MAAM,CAAC,KAAU,EAAA;QACf,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAElC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE;AAC/C,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AACb,gBAAA,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;gBACxB,MAAM,EAAE,IAAI,CAAC,MAAM;AACpB,aAAA,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1B,SAAA;KACF;AAED,IAAA,QAAQ,CAAC,KAAU,EAAA;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE;AAC/C,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACf,gBAAA,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;gBACxB,MAAM,EAAE,IAAI,CAAC,MAAM;AACpB,aAAA,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AAChD,SAAA;KACF;IAED,WAAW,GAAA;QACT,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;QAC7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;QAC3E,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,4BAA4B,CAAC,CAAC;KAClF;;gGApDU,wBAAwB,GAAA,CAAA,EAAA,CAAA;2EAAxB,wBAAwB,EAAA,SAAA,EAAA,CAAA,CAAA,0BAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,QAAA,EAAA,aAAA,EAAA,eAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA,6CAAA,EAAA,CAAA,EAAA,WAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA,iDAAA,EAAA,CAAA,EAAA,WAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,4BAAA,EAAA,CAAA,EAAA,WAAA,EAAA,OAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,gCAAA,EAAA,CAAA,EAAA,WAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,iCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QANjC,EACoE,CAAA,UAAA,CAAA,CAAA,EAAA,qCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;QACpE,EACwE,CAAA,UAAA,CAAA,CAAA,EAAA,qCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;;QAH3D,EAAkB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,YAAA,CAAA,CAAA;QAElB,EAAoB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAApB,EAAoB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,cAAA,CAAA,CAAA;;uFAIxB,wBAAwB,EAAA,CAAA;cAVpC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,0BAA0B;gBACpC,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAC/C,gBAAA,QAAQ,EAAE,CAAA;;;;;AAKT,EAAA,CAAA;AACF,aAAA,CAAA;gBAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,GAAG,EAAA,CAAA;kBAAX,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;YACG,WAAW,EAAA,CAAA;kBAAnB,KAAK;YAEI,IAAI,EAAA,CAAA;kBAAb,MAAM;YACG,MAAM,EAAA,CAAA;kBAAf,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;;;MCZI,0BAA0B,CAAA;AASrC,IAAA,MAAM,CAAC,KAAU,EAAA;QACf,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AAExB,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KAC5C;AAED,IAAA,YAAY,CAAC,KAAU,EAAA;QACrB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;AAExB,QAAA,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;KAC9B;IAED,WAAW,GAAA;QACT,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;QACxE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,0BAA0B,CAAC,CAAA;KAC5E;;oGA1BU,0BAA0B,GAAA,CAAA,EAAA,CAAA;6EAA1B,0BAA0B,EAAA,SAAA,EAAA,CAAA,CAAA,4BAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,4BAAA,EAAA,CAAA,EAAA,WAAA,EAAA,OAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,8BAAA,EAAA,CAAA,EAAA,WAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,mCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QANnC,EAC6D,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAzB,QAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,sDAAA,CAAA,MAAA,EAAA,EAAA,OAAS,kBAAc,CAAC,EAAA,CAAA,CAAA;QAAC,EAAI,CAAA,YAAA,EAAA,CAAA;QACjE,EACqE,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAA/B,QAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,sDAAA,CAAA,MAAA,EAAA,EAAA,OAAS,wBAAoB,CAAC,EAAA,CAAA,CAAA;QAAC,EAAI,CAAA,YAAA,EAAA,CAAA;;QAFrE,EAA+B,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,EAAA,CAAA,cAAA,CAAA,CAAA;QAE/B,EAAiC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAjC,EAAiC,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,mBAAA,EAAA,EAAA,CAAA,cAAA,CAAA,CAAA;;uFAG5B,0BAA0B,EAAA,CAAA;cATtC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,4BAA4B;AACtC,gBAAA,QAAQ,EAAE,CAAA;;;;;AAKT,EAAA,CAAA;AACF,aAAA,CAAA;gBAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,GAAG,EAAA,CAAA;kBAAX,KAAK;YACG,WAAW,EAAA,CAAA;kBAAnB,KAAK;;;;;;ICjBN,EAAkI,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;AAAtC,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,kEAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,SAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAS,qCAA2B,CAAC,EAAA,CAAA,CAAA;IAC/H,EAAuE,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;IACzE,EAAK,CAAA,YAAA,EAAA,CAAA;;;IADyC,EAA0B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA1B,EAA0B,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,UAAA,CAAA,CAAA;;;;AAExE,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAA+E,CAAA,CAAA,EAAA,qBAAA,EAAA,CAAA,CAAA,CAAA;AAC1C,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,oFAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAU,2BAAmB,CAAC,EAAA,CAAA,CAAA;IAA+B,EAAsB,CAAA,YAAA,EAAA,CAAA;IAEtH,EAO4C,CAAA,cAAA,CAAA,CAAA,EAAA,0BAAA,EAAA,EAAA,CAAA,CAAA;AAJlB,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,uFAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,SAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAQ,yBAAc,CAAC,EAAA,CAAA,CAAA,QAAA,EAAA,SAAA,yFAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,SAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OACb,2BAAgB,CADH,EAAA,CAAA,CAAA,eAAA,EAAA,SAAA,gGAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAEN,kCAA0B,CAFpB,EAAA,CAAA,CAAA;AAKjD,IAAA,EAAA,CAAA,YAAA,EAA2B,EAAA,CAAA;;;;IAVN,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAb,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,eAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA;IAER,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAb,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,eAAA,EAAA,MAAA,CAAA,aAAA,CAAA,CAAA,aAAA,EAAA,MAAA,CAAA,WAAA,CAAA,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA;;;IAUxC,EAA+E,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IAC9E,EAA+G,CAAA,SAAA,CAAA,CAAA,EAAA,4BAAA,EAAA,EAAA,CAAA,CAAA;IACjH,EAAK,CAAA,YAAA,EAAA,CAAA;;;;IADyB,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAb,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,eAAA,CAAA,aAAA,EAAA,MAAA,CAAA,WAAA,CAAA,CAAA;;;IAE3C,EAAoD,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA;IAClD,EAQuB,CAAA,SAAA,CAAA,CAAA,EAAA,sBAAA,EAAA,EAAA,CAAA,CAAA;IACzB,EAAK,CAAA,YAAA,EAAA,CAAA;;;;;IATmB,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAb,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,QAAA,CAAa,qBAAA,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,aAAA,EAAA,MAAA,CAAA,WAAA,CAAA,qCAAA,CAAA,aAAA,EAAA,MAAA,CAAA,WAAA,CAAA,CAAA;;;IAWrC,EAAgF,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IAC9E,EAA+G,CAAA,SAAA,CAAA,CAAA,EAAA,4BAAA,EAAA,EAAA,CAAA,CAAA;IACjH,EAAK,CAAA,YAAA,EAAA,CAAA;;;;IADyB,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAb,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,eAAA,CAAA,aAAA,EAAA,MAAA,CAAA,WAAA,CAAA,CAAA;;;;AAG3C,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAgF,CAAA,CAAA,EAAA,qBAAA,EAAA,CAAA,CAAA,CAAA;AAC3C,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,oFAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAU,2BAAmB,CAAC,EAAA,CAAA,CAAA;IAA+B,EAAsB,CAAA,YAAA,EAAA,CAAA;IAEtH,EAOuE,CAAA,cAAA,CAAA,CAAA,EAAA,0BAAA,EAAA,EAAA,CAAA,CAAA;AAF7C,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,uFAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,SAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAQ,yBAAc,CAAC,EAAA,CAAA,CAAA,QAAA,EAAA,SAAA,yFAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,SAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OACb,2BAAgB,CADH,EAAA,CAAA,CAAA,eAAA,EAAA,SAAA,gGAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAEN,kCAA0B,CAFpB,EAAA,CAAA,CAAA;AAGjD,IAAA,EAAA,CAAA,YAAA,EAA2B,EAAA,CAAA;;;;IAVN,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAb,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,eAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA;IAER,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAb,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,eAAA,EAAA,MAAA,CAAA,aAAA,CAAA,CAAA,aAAA,EAAA,MAAA,CAAA,WAAA,CAAA,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA;;;;;IAvC3C,EAA2M,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;AAApK,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,6DAAA,GAAA,EAAA,MAAA,WAAA,GAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,WAAA,CAAA,SAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAS,OAAuB,CAAA,aAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAC,CAAc,WAAA,EAAA,SAAA,iEAAA,GAAA,EAAA,MAAA,WAAA,GAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,WAAA,CAAA,SAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,OAAA,CAAA,QAAA,CAAA,IAAA,CAAA,MAAA,CAAkB,CAAhC,EAAA,CAAA,CAAA;IACtE,EAEK,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IACL,EAYK,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IACJ,EAEI,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IACL,EAUK,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IAEL,EAEK,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IAEL,EAYK,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;IACP,EAAK,CAAA,YAAA,EAAA,CAAA;;;;AAjD2H,IAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,MAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,CAAmC,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAA,GAAA,EAAA,MAAA,CAAA,UAAA,CAAA,CAAA,CAAA;IAC5J,EAA0B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA1B,EAA0B,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,oBAAA,CAAA,CAAA;IAG1B,EAA8C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA9C,EAA8C,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,MAAA,CAAA,WAAA,IAAA,MAAA,CAAA,oBAAA,CAAA,CAAA;IAa7C,EAA6C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA7C,EAA6C,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,WAAA,IAAA,MAAA,CAAA,oBAAA,CAAA,CAAA;IAG9B,EAA6B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA7B,EAA6B,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,eAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;IAY7C,EAA8C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA9C,EAA8C,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,WAAA,IAAA,MAAA,CAAA,qBAAA,CAAA,CAAA;IAI9C,EAA+C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA/C,EAA+C,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,MAAA,CAAA,WAAA,IAAA,MAAA,CAAA,qBAAA,CAAA,CAAA;;;AAetD,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,CAAuC,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA;IAEnC,EACF,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,YAAA,EAAK,EAAA,CAAA;;;IAFD,EAAkC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAlC,EAAkC,CAAA,WAAA,CAAA,SAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,CAAA;IACpC,EACF,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IADE,EACF,CAAA,kBAAA,CAAA,GAAA,EAAA,MAAA,CAAA,aAAA,EAAA,GAAA,CAAA,CAAA;;MC3CW,2BAA2B,CAAA;AALxC,IAAA,WAAA,GAAA;AAaY,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAAO,CAAC;AAC/B,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AACjC,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAAO,CAAC;AAC/B,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AACjC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AACjC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AACjC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAO,CAAC;AACxC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAO,CAAC;AACxC,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAI,YAAY,EAAO,CAAC;AAC5C,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;AAgC9C,KAAA;AApBC,IAAA,IAAI,iBAAiB,GAAA;QACnB,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;QAC3F,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,MAAM,GAAG,aAAa,CAAC;KACtD;IAED,WAAW,GAAA;QACT,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC/D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;QAC9D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACjE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;QAC7D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;KAC5D;AAED,IAAA,eAAe,CAAC,KAAkB,EAAA;QAChC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,IAAU,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC;KACrE;;sGAhDU,2BAA2B,GAAA,CAAA,EAAA,CAAA;8EAA3B,2BAA2B,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,cAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,aAAA,EAAA,eAAA,EAAA,WAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,aAAA,EAAA,eAAA,EAAA,aAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAAD,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,OAAA,EAAA,eAAA,EAAA,CAAA,EAAA,WAAA,EAAA,SAAA,EAAA,OAAA,EAAA,WAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,WAAA,EAAA,SAAA,EAAA,OAAA,EAAA,WAAA,CAAA,EAAA,CAAA,OAAA,EAAA,oDAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,mBAAA,EAAA,kCAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAA,QAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,eAAA,EAAA,aAAA,EAAA,KAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,eAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,KAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,aAAA,EAAA,YAAA,EAAA,aAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,oCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QDXxC,EAiDK,CAAA,UAAA,CAAA,CAAA,EAAA,yCAAA,EAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;QAEL,EAIK,CAAA,UAAA,CAAA,CAAA,EAAA,yCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;;QAvDe,EAAiB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA,CAAA,CAAA;QAmDhC,EAAgC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAhC,EAAgC,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA,CAAA,MAAA,IAAA,CAAA,CAAA,CAAA;;uFCxCxB,2BAA2B,EAAA,CAAA;cALvC,SAAS;2BACE,gBAAgB,EAAA,QAAA,EAAA,qhGAAA,EAAA,MAAA,EAAA,CAAA,4RAAA,CAAA,EAAA,CAAA;gBAMjB,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;YACG,WAAW,EAAA,CAAA;kBAAnB,KAAK;YACG,gBAAgB,EAAA,CAAA;kBAAxB,KAAK;YAEI,IAAI,EAAA,CAAA;kBAAb,MAAM;YACG,MAAM,EAAA,CAAA;kBAAf,MAAM;YACG,IAAI,EAAA,CAAA;kBAAb,MAAM;YACG,MAAM,EAAA,CAAA;kBAAf,MAAM;YACG,MAAM,EAAA,CAAA;kBAAf,MAAM;YACG,MAAM,EAAA,CAAA;kBAAf,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,iBAAiB,EAAA,CAAA;kBAA1B,MAAM;YACG,QAAQ,EAAA,CAAA;kBAAjB,MAAM;;;ACjBT,MAAM,gBAAgB,GAAG;IACvB,0BAA0B;IAC1B,wBAAwB;IACxB,oBAAoB;IACpB,2BAA2B;CAC5B,CAAC;MAeW,WAAW,CAAA;;sEAAX,WAAW,GAAA,CAAA,EAAA,CAAA;6DAAX,WAAW,EAAA,CAAA,CAAA;AAZb,WAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA;YACP,YAAY;YACZ,WAAW;YACX,UAAU;AACX,SAAA,CAAA,EAAA,CAAA,CAAA;uFAQU,WAAW,EAAA,CAAA;cAbvB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;oBACX,UAAU;AACX,iBAAA;AACD,gBAAA,YAAY,EAAE;AACZ,oBAAA,GAAG,gBAAgB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;AACP,oBAAA,GAAG,gBAAgB;AACpB,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,WAAW,mBAnBtB,0BAA0B;QAC1B,wBAAwB;QACxB,oBAAoB;AACpB,QAAA,2BAA2B,aAKzB,YAAY;QACZ,WAAW;AACX,QAAA,UAAU,aAVZ,0BAA0B;QAC1B,wBAAwB;QACxB,oBAAoB;QACpB,2BAA2B,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;MCJhB,0BAA0B,CAAA;;oGAA1B,0BAA0B,GAAA,CAAA,EAAA,CAAA;6EAA1B,0BAA0B,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,4BAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,KAAA,EAAAA,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,mCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAHnC,EAAiD,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;;QAA1B,EAAyB,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,aAAA,CAAA,CAAA;;uFAGvC,0BAA0B,EAAA,CAAA;cANtC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,8BAA8B;AACxC,gBAAA,QAAQ,EAAE,CAAA;;AAET,EAAA,CAAA;AACF,aAAA,CAAA;gBAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;;;;MCLK,qBAAqB,CAAA;AAMhC,IAAA,WAAA,CAAoB,GAAe,EAAA;QAAf,IAAG,CAAA,GAAA,GAAH,GAAG,CAAY;KAClC;IAED,eAAe,GAAA;QACb,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;KAC3D;IAED,WAAW,GAAA;QACT,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;KACvE;;0FAfU,qBAAqB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;wEAArB,qBAAqB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,sBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAAA,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAH9B,EAA6B,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;QAAA,EAAwB,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;QAAA,EAAM,CAAA,YAAA,EAAA,CAAA;;QAA9B,EAAwB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAxB,EAAwB,CAAA,iBAAA,CAAA,GAAA,CAAA,kBAAA,CAAA,CAAA;;uFAG5C,qBAAqB,EAAA,CAAA;cANjC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,wBAAwB;AAClC,gBAAA,QAAQ,EAAE,CAAA;;AAET,EAAA,CAAA;AACF,aAAA,CAAA;6DAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;;;;;ICFJ,EAGyC,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAF7B,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,8CAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAS,oBAAa,CAAC,EAAA,CAAA,CAAA;IAGjC,EACF,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAI,CAAA,YAAA,EAAA,CAAA;;;IAFQ,EAA4B,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,gBAAA,CAAA,CAAA;IACtC,EACF,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IADE,EACF,CAAA,kBAAA,CAAA,GAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;;IACA,EAAwD,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAkB,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAO,CAAA,YAAA,EAAA,CAAA;;;IAAzB,EAAkB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAlB,EAAkB,CAAA,iBAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;;MAGjE,cAAc,CAAA;AAb3B,IAAA,WAAA,GAAA;QAeE,IAAgB,CAAA,gBAAA,GAAG,EAAE,CAAC;AAGZ,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAAO,CAAC;AA+C1C,KAAA;AA3CC,IAAA,WAAW,CAAC,OAAsB,EAAA;QAChC,IAAI,OAAO,CAAC,MAAM,EAAE;AAClB,YAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE;AAC/B,gBAAA,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;AACnC,aAAA;AACD,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,WAAW,KAAI;gBACtE,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;AAEvC,gBAAA,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;oBAClE,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;AAClD,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAC5B,iBAAA;AAED,gBAAA,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAc,KAAI;AAEpC,iBAAC,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;AAED,IAAA,KAAK,CAAC,KAAU,EAAA;QACd,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAC3B,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AAClB,YAAA;AACE,gBAAA,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;gBACrB,SAAS,EAAE,IAAI,CAAC,gBAAgB;AAChC,gBAAA,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;AAC1C,aAAA;AACF,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACtB;IAED,mBAAmB,GAAA;QACjB,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACzB,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;AACtE,YAAA,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;AACtC,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AACnD,SAAA;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;4EAnDU,cAAc,GAAA,CAAA,EAAA,CAAA;iEAAd,cAAc,EAAA,SAAA,EAAA,CAAA,CAAA,uBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA,0BAAA,EAAA,CAAA,EAAA,SAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,EAAA,SAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,uBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QATvB,EAKI,CAAA,UAAA,CAAA,CAAA,EAAA,2BAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;QACJ,EAAiF,CAAA,UAAA,CAAA,CAAA,EAAA,8BAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;;QANpE,EAAuB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAAA;QAMN,EAAwB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAxB,EAAwB,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAAA;;uFAG7C,cAAc,EAAA,CAAA;cAb1B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,uBAAuB,EAEvB,QAAA,EAAA,CAAA;;;;;;;;AAQT,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,+VAAA,CAAA,EAAA,CAAA;gBAKQ,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACI,IAAI,EAAA,CAAA;kBAAb,MAAM;;;MCXI,oBAAoB,CAAA;AARjC,IAAA,WAAA,GAAA;AAaY,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAAO,CAAC;AAE1C,KAAA;;wFAPY,oBAAoB,GAAA,CAAA,EAAA,CAAA;uEAApB,oBAAoB,EAAA,SAAA,EAAA,CAAA,CAAA,qBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,6BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;AAL7B,QAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAA6B,CAAA,CAAA,EAAA,uBAAA,EAAA,CAAA,CAAA,CAAA;AACgC,QAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,mEAAA,CAAA,MAAA,EAAA,EAAA,OAAQ,qBAAiB,CAAC,EAAA,CAAA,CAAA;AAAC,QAAA,EAAA,CAAA,YAAA,EAAwB,EAAA,CAAA;;QAAvF,EAAiB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAjB,QAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,GAAA,CAAA,MAAA,CAAiB,CAAA,QAAA,EAAA,GAAA,CAAA,MAAA,CAAA,CAAA;;uFAIjC,oBAAoB,EAAA,CAAA;cARhC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,qBAAqB;AAC/B,gBAAA,QAAQ,EAAE,CAAA;;;;AAIT,EAAA,CAAA;AACF,aAAA,CAAA;gBAGU,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YAEI,IAAI,EAAA,CAAA;kBAAb,MAAM;;;;;;ICTL,EAIoE,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;AAArC,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,yDAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAS,iCAA0B,CAAC,EAAA,CAAA,CAAA;IACnE,EAAK,CAAA,YAAA,EAAA,CAAA;;;AAJ0B,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,yBAAA,CAAA,eAAA,EAAA,MAAA,CAAA,aAAA,CAAA,CAAA;;;IAK5C,EAAyE,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;;;IAAnB,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA;;;;AACnE,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAGiC,CAAA,CAAA,EAAA,qBAAA,EAAA,CAAA,CAAA,CAAA;AAC0B,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,yEAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAQ,wBAAiB,CAAC,EAAA,CAAA,CAAA;AAAC,IAAA,EAAA,CAAA,YAAA,EAAsB,EAAA,CAAA;;;;IAHxG,EAAoC,CAAA,sBAAA,CAAA,eAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA;IAEpC,EAA4B,CAAA,WAAA,CAAA,OAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA;IAD5B,EAAwB,CAAA,UAAA,CAAA,SAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA;IAEL,EAAiB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAjB,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAiB,CAAA,QAAA,EAAA,SAAA,CAAA,CAAA;;;IAExC,EAA0E,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;;;IAAnB,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA;;MAG3D,uBAAuB,CAAA;AAnBpC,IAAA,WAAA,GAAA;AAyBY,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAAO,CAAC;AAC/B,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAO,CAAC;AAgBnD,KAAA;IATC,WAAW,GAAA;QACT,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC/D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;KAClE;AAED,IAAA,iBAAiB,CAAC,OAAsB,EAAA;AACtC,QAAA,OAAO,CAAC,OAAO,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,MAAc,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACjE;;8FAtBU,uBAAuB,GAAA,CAAA,EAAA,CAAA;0EAAvB,uBAAuB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,yBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,aAAA,EAAA,eAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAAA,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,4BAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,QAAA,EAAA,eAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,sBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,SAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,4BAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,QAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,CAAA,sBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,gCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAhBhC,EAKK,CAAA,UAAA,CAAA,CAAA,EAAA,qCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;QACL,EAAyE,CAAA,UAAA,CAAA,CAAA,EAAA,qCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;QACzE,EAKK,CAAA,UAAA,CAAA,CAAA,EAAA,qCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;QACL,EAA0E,CAAA,UAAA,CAAA,CAAA,EAAA,qCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;;QAb1C,EAA0B,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,oBAAA,CAAA,CAAA;QAMhC,EAA0B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAA1B,EAA0B,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,oBAAA,CAAA,CAAA;QAC7B,EAAuC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAvC,EAAuC,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,IAAA,CAAA,UAAA,EAAA,CAAA,CAAA,CAAA;QAMpC,EAA2B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAA3B,EAA2B,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,qBAAA,CAAA,CAAA;;uFAG5C,uBAAuB,EAAA,CAAA;cAnBnC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,2BAA2B;AACrC,gBAAA,QAAQ,EAAE,CAAA;;;;;;;;;;;;;;;AAeT,EAAA,CAAA;AACF,aAAA,CAAA;gBAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YAEI,IAAI,EAAA,CAAA;kBAAb,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;;;;;;ICxBL,EAC8D,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAxB,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,kDAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAS,oBAAa,CAAC,EAAA,CAAA,CAAA;IAAC,EAAI,CAAA,YAAA,EAAA,CAAA;;;IAA9D,EAAiC,CAAA,UAAA,CAAA,WAAA,EAAA,MAAA,CAAA,mBAAA,EAAA,EAAA,CAAA,cAAA,CAAA,CAAA;;MAG5B,kBAAkB,CAAA;AAS7B,IAAA,WAAA,CAAoB,GAAe,EAAA;QAAf,IAAG,CAAA,GAAA,GAAH,GAAG,CAAY;AALzB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;KAM1C;IAED,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,yBAAyB,EAAE,6BAA6B,CAAC,CAAC;KAChG;IAED,WAAW,GAAA;QACT,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;KACzE;AAED,IAAA,KAAK,CAAC,KAAU,EAAA;QACd,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE;AAC/C,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBACf,MAAM,EAAE,IAAI,CAAC,MAAM;AACpB,aAAA,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAClC,SAAA;KACF;;oFA/BU,kBAAkB,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;qEAAlB,kBAAkB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,mBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAAA,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA,2CAAA,EAAA,CAAA,EAAA,WAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,0BAAA,EAAA,CAAA,EAAA,WAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,2BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAJ3B,EACkE,CAAA,UAAA,CAAA,CAAA,EAAA,+BAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;;QAD9D,EAAiB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,WAAA,CAAA,CAAA;;uFAIZ,kBAAkB,EAAA,CAAA;cAP9B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,qBAAqB;AAC/B,gBAAA,QAAQ,EAAE,CAAA;;;AAGT,EAAA,CAAA;AACF,aAAA,CAAA;6DAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACI,MAAM,EAAA,CAAA;kBAAf,MAAM;;;;;ICPL,EAAsC,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA;;;;IACtC,EAEqD,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;AAA/B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,2DAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,0BAAmB,CAAC,EAAA,CAAA,CAAA;IACpD,EAAK,CAAA,YAAA,EAAA,CAAA;;;IAFiB,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA;;;;AAGnC,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,CAAqG,CAAA,CAAA,EAAA,wBAAA,EAAA,CAAA,CAAA,CAAA;AAI3E,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,+EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,0BAAmB,CAAC,EAAA,CAAA,CAAA;AACtD,IAAA,EAAA,CAAA,YAAA,EAAyB,EAAA,CAAA;;;;IALqC,EAAoC,CAAA,sBAAA,CAAA,eAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA;IAC1E,EAAiB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAjB,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAiB,qBAAA,CAAA,YAAA,EAAA,MAAA,CAAA,gBAAA,CAAA,CAAA;;;;IAM3C,EAGqD,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;AAA/B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,2DAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,0BAAmB,CAAC,EAAA,CAAA,CAAA;IACpD,EAAK,CAAA,YAAA,EAAA,CAAA;;;AAHiB,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA;;MAM1B,wBAAwB,CAAA;AAtBrC,IAAA,WAAA,GAAA;AA2BY,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AACjC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AAiB5C,KAAA;IAVC,WAAW,GAAA;QACT,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC/D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACjE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;KACnE;AAED,IAAA,iBAAiB,CAAC,OAAsB,EAAA;AACtC,QAAA,OAAO,CAAC,OAAO,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,MAAc,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACjE;;gGAtBU,wBAAwB,GAAA,CAAA,EAAA,CAAA;2EAAxB,wBAAwB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,0BAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAAA,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,QAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,QAAA,CAAA,EAAA,CAAA,CAAA,EAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,CAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,iCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAnBjC,EAAsC,CAAA,UAAA,CAAA,CAAA,EAAA,sCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;QACtC,EAGK,CAAA,UAAA,CAAA,CAAA,EAAA,sCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;QACL,EAMK,CAAA,UAAA,CAAA,CAAA,EAAA,sCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;QACL,EAIK,CAAA,UAAA,CAAA,CAAA,EAAA,sCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;;QAhBA,EAA0B,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,oBAAA,CAAA,CAAA;QACR,EAA0B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAA1B,EAA0B,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,oBAAA,CAAA,CAAA;QAI1B,EAAuC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAvC,EAAuC,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,IAAA,CAAA,UAAA,EAAA,CAAA,CAAA,CAAA;QAOvC,EAA2B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAA3B,EAA2B,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,qBAAA,CAAA,CAAA;;uFAOzC,wBAAwB,EAAA,CAAA;cAtBpC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,4BAA4B;AACtC,gBAAA,QAAQ,EAAE,CAAA;;;;;;;;;;;;;;;;;;AAkBT,EAAA,CAAA;AACF,aAAA,CAAA;gBAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YAEI,MAAM,EAAA,CAAA;kBAAf,MAAM;YACG,MAAM,EAAA,CAAA;kBAAf,MAAM;;;MCnBI,gBAAgB,CAAA;AAX7B,IAAA,WAAA,GAAA;AAcY,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AAS5C,KAAA;IAJC,WAAW,GAAA;QACT,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,yBAAyB,CAAC,CAAC;QAC3E,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,yBAAyB,CAAC,CAAC;KAC5E;;gFAXU,gBAAgB,GAAA,CAAA,EAAA,CAAA;mEAAhB,gBAAgB,EAAA,SAAA,EAAA,CAAA,CAAA,gBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,6BAAA,EAAA,CAAA,EAAA,WAAA,EAAA,OAAA,CAAA,EAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,6BAAA,EAAA,CAAA,EAAA,WAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,yBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QARzB,EAE0D,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;QAAtD,EAAS,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,4CAAA,CAAA,MAAA,EAAA,EAAA,MAAA,CAAA,cAAA,EAAuB,CAAC,CAAA,OAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAmB,CAAC,EAAA,CAAA,CAAA;QAAC,EAAI,CAAA,YAAA,EAAA,CAAA;QAC9D,EAEoE,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;QAAhE,EAAS,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,4CAAA,CAAA,MAAA,EAAA,EAAA,MAAA,CAAA,cAAA,EAAuB,CAAwB,CAAA,OAAA,GAAA,CAAA,IAAA,CAAA,eAAA,GAAA,KAAK,CAAE,EAAA,CAAA,CAAA;QAAC,EAAI,CAAA,YAAA,EAAA,CAAA;;QAJpE,EAAiC,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,mBAAA,EAAA,EAAA,CAAA,cAAA,CAAA,CAAA;QAGjC,EAAiC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAjC,EAAiC,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,mBAAA,EAAA,EAAA,CAAA,cAAA,CAAA,CAAA;;uFAI5B,gBAAgB,EAAA,CAAA;cAX5B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,gBAAgB;AAC1B,gBAAA,QAAQ,EAAE,CAAA;;;;;;;AAOT,EAAA,CAAA;AACF,aAAA,CAAA;gBAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACI,MAAM,EAAA,CAAA;kBAAf,MAAM;;;;;ICTH,EAAkB,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA;;;;AAClB,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAA6D,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,CAAA,CAAA;AAC7B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,oEAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,uBAAgB,CAAC,EAAA,CAAA,CAAA;AAAC,IAAA,EAAA,CAAA,YAAA,EAAiB,EAAA,CAAA;;;IAA3D,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAb,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA;;;;AAE/B,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,CAAsE,CAAA,CAAA,EAAA,sBAAA,EAAA,CAAA,CAAA,CAAA;AAO9C,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,0EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,uBAAgB,CAAC,EAAA,CAAA,CAAA;AACjD,IAAA,EAAA,CAAA,YAAA,EAAuB,EAAA,CAAA;;;;IAPD,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAAb,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,OAAA,CAAa,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,eAAA,EAAA,MAAA,CAAA,aAAA,CAAA,CAAA,YAAA,EAAA,MAAA,CAAA,aAAA,CAAA,CAAA,aAAA,EAAA,MAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,WAAA,CAAA,CAAA;;;;AASrC,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAA8D,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,CAAA,CAAA;AAC9B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,oEAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,uBAAgB,CAAC,EAAA,CAAA,CAAA;AAAC,IAAA,EAAA,CAAA,YAAA,EAAiB,EAAA,CAAA;;;IAA3D,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAb,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA;;MAIxB,qBAAqB,CAAA;AAtBlC,IAAA,WAAA,GAAA;AA4BY,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AAuB5C,KAAA;AAhBC,IAAA,QAAQ,CAAC,KAAU,EAAA;QACjB,KAAK,CAAC,eAAe,EAAE,CAAC;AAExB,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KAC7D;IAED,WAAW,GAAA;QACT,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC7D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC/D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACjE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;KAC7D;AAED,IAAA,eAAe,CAAC,KAAkB,EAAA;QAChC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,IAAU,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC;KACrE;;0FA5BU,qBAAqB,GAAA,CAAA,EAAA,CAAA;wEAArB,qBAAqB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,uBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAAA,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,QAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,eAAA,EAAA,YAAA,EAAA,aAAA,EAAA,QAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QAnB5B,EAAkB,CAAA,UAAA,CAAA,CAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;QAClB,EAEK,CAAA,UAAA,CAAA,CAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;QACL,EASK,CAAA,UAAA,CAAA,CAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;QACL,EAEK,CAAA,UAAA,CAAA,CAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;;QAfC,EAA0B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAA1B,EAA0B,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,oBAAA,CAAA,CAAA;QAGX,EAA+C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAA/C,EAA+C,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,eAAA,CAAA,GAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,QAAA,EAAA,CAAA,CAAA,CAAA;QAU9D,EAA2B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAA3B,EAA2B,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,qBAAA,CAAA,CAAA;;uFAK1B,qBAAqB,EAAA,CAAA;cAtBjC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,yBAAyB;AACnC,gBAAA,QAAQ,EAAE,CAAA;;;;;;;;;;;;;;;;;;AAkBT,EAAA,CAAA;AACF,aAAA,CAAA;gBAGU,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,GAAG,EAAA,CAAA;kBAAX,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;YAEI,MAAM,EAAA,CAAA;kBAAf,MAAM;;;;;;IClCT,EAMyE,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;AAD7C,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,4DAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAQ,MAAiB,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAC,CACT,eAAA,EAAA,SAAA,qEAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,MAAA,CAAA,aAAA,CAAA,IAAA,CAAA,MAAA,CAA0B,CADjB,EAAA,CAAA,CAAA;IAEtD,EAAK,CAAA,YAAA,EAAA,CAAA;;;AALuB,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,uCAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA;;;;IAOzC,EAK6D,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;AAD/B,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,8DAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAU,MAAmB,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAC,CACpB,QAAA,EAAA,SAAA,8DAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAmB,CADC,EAAA,CAAA,CAAA;IAE5D,EAAK,CAAA,YAAA,EAAA,CAAA;;;AAJyB,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA;;;IAM3C,EAGK,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;;;AAFqB,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAa,CAAA,eAAA,EAAA,MAAA,CAAA,aAAA,CAAA,CAAA;;MCT1B,2BAA2B,CAAA;AAJxC,IAAA,WAAA,GAAA;AAWc,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAAO,CAAC;AAC/B,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAO,CAAC;AACxC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AACjC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AAS9C,KAAA;IAJC,WAAW,GAAA;QACP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACvD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;KAC9D;;sGAlBQ,2BAA2B,GAAA,CAAA,EAAA,CAAA;8EAA3B,2BAA2B,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,cAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,aAAA,EAAA,eAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,aAAA,EAAA,eAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,yBAAA,EAAA,EAAA,EAAA,OAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,eAAA,EAAA,QAAA,EAAA,MAAA,EAAA,eAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,0BAAA,EAAA,EAAA,EAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,uBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,eAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,yBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,eAAA,EAAA,QAAA,EAAA,MAAA,EAAA,eAAA,CAAA,EAAA,CAAA,0BAAA,EAAA,EAAA,EAAA,CAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,CAAA,EAAA,CAAA,uBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,eAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,oCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QDTxC,EAOK,CAAA,UAAA,CAAA,CAAA,EAAA,yCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;QAEL,EAMK,CAAA,UAAA,CAAA,CAAA,EAAA,yCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;QAEL,EAGK,CAAA,UAAA,CAAA,CAAA,EAAA,yCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;;QApBwB,EAAmB,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,YAAA,CAAA,CAAA;QASlB,EAAsB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAtB,EAAsB,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,eAAA,CAAA,CAAA;QAQzB,EAA0B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAA1B,EAA0B,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,IAAA,CAAA,eAAA,CAAA,CAAA;;uFCRxC,2BAA2B,EAAA,CAAA;cAJvC,SAAS;2BACI,gBAAgB,EAAA,QAAA,EAAA,g9BAAA,EAAA,CAAA;gBAKjB,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;YAEI,IAAI,EAAA,CAAA;kBAAb,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,MAAM,EAAA,CAAA;kBAAf,MAAM;YACG,MAAM,EAAA,CAAA;kBAAf,MAAM;;;ACDX,MAAM,gBAAgB,GAAG;IACvB,gBAAgB;IAChB,qBAAqB;IACrB,kBAAkB;IAClB,0BAA0B;IAC1B,oBAAoB;IACpB,cAAc;IACd,wBAAwB;IACxB,qBAAqB;IACrB,uBAAuB;IACvB,2BAA2B;CAC5B,CAAC;MAgBW,WAAW,CAAA;;sEAAX,WAAW,GAAA,CAAA,EAAA,CAAA;6DAAX,WAAW,EAAA,CAAA,CAAA;AAbb,WAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA;YACP,YAAY;YACZ,WAAW;YACX,YAAY;YACZ,UAAU;AACX,SAAA,CAAA,EAAA,CAAA,CAAA;uFAQU,WAAW,EAAA,CAAA;cAdvB,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;oBACX,YAAY;oBACZ,UAAU;AACX,iBAAA;AACD,gBAAA,YAAY,EAAE;AACZ,oBAAA,GAAG,gBAAgB;AACpB,iBAAA;AACD,gBAAA,OAAO,EAAE;AACP,oBAAA,GAAG,gBAAgB;AACpB,iBAAA;AACF,aAAA,CAAA;;AACY,CAAA,YAAA,EAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,WAAW,mBA1BtB,gBAAgB;QAChB,qBAAqB;QACrB,kBAAkB;QAClB,0BAA0B;QAC1B,oBAAoB;QACpB,cAAc;QACd,wBAAwB;QACxB,qBAAqB;QACrB,uBAAuB;AACvB,QAAA,2BAA2B,aAKzB,YAAY;QACZ,WAAW;QACX,YAAY;AACZ,QAAA,UAAU,aAjBZ,gBAAgB;QAChB,qBAAqB;QACrB,kBAAkB;QAClB,0BAA0B;QAC1B,oBAAoB;QACpB,cAAc;QACd,wBAAwB;QACxB,qBAAqB;QACrB,uBAAuB;QACvB,2BAA2B,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;SC5Bb,aAAa,CAAC,SAAc,EAAE,CAAM,EAAE,CAAM,EAAA;IAC1D,IAAI,CAAC,GAAG,CAAC,EAAE;AACT,QAAA,OAAO,CAAC,CAAC,GAAG,SAAS,CAAC;AACvB,KAAA;IACD,IAAI,CAAC,GAAG,CAAC,EAAE;AACT,QAAA,OAAO,SAAS,CAAC;AAClB,KAAA;AACD,IAAA,OAAO,CAAC,CAAC;AACX,CAAC;MAEY,WAAW,CAAA;IAEtB,OAAO,IAAI,CAAC,IAAgB,EAAE,KAAa,EAAE,SAAiB,EAAE,aAAwB,EAAA;AAEtF,QAAA,MAAM,GAAG,GAAW,CAAC,SAAS,KAAK,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACnD,MAAM,OAAO,GAAa,aAAa,GAAG,aAAa,GAAG,aAAa,CAAC;QAExE,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAI;AACxB,YAAA,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACrD,SAAC,CAAC,CAAC;KACJ;AACF;;ACrBe,SAAA,YAAY,CAAC,KAAa,EAAE,MAAc,EAAA;AACxD,IAAA,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;AAClF,CAAC;MAEY,WAAW,CAAA;IAEtB,OAAO,MAAM,CAAC,IAAgB,EAAE,KAAa,EAAE,MAAc,EAAE,YAAuB,EAAA;QACpF,MAAM,MAAM,GAAa,YAAY,GAAG,YAAY,GAAG,YAAY,CAAC;AAEpE,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAI;YACxB,MAAM,KAAK,GAAG,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,WAAW,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;YACtF,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;AAC1C,SAAC,CAAC,CAAC;KACJ;AACF;;MCdY,UAAU,CAAA;AAErB,IAAA,OAAO,QAAQ,CAAC,IAAgB,EAAE,IAAY,EAAE,OAAe,EAAA;AAC7D,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,CAAC;KACzD;AACF;;ACCK,MAAO,eAAgB,SAAQ,UAAU,CAAA;AAW7C,IAAA,WAAA,CAAY,OAAmB,EAAE,EAAA;AAC/B,QAAA,KAAK,EAAE,CAAC;QAVA,IAAI,CAAA,IAAA,GAAe,EAAE,CAAC;QACtB,IAAiB,CAAA,iBAAA,GAAe,EAAE,CAAC;QACnC,IAAQ,CAAA,QAAA,GAAe,EAAE,CAAC;AAC1B,QAAA,IAAA,CAAA,UAAU,GAAQ;AAC1B,YAAA,OAAO,EAAE,EAAE;AACX,YAAA,WAAW,EAAE,IAAI;SAClB,CAAC;QACQ,IAAU,CAAA,UAAA,GAAQ,EAAE,CAAC;AAK7B,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;AAED,IAAA,IAAI,CAAC,IAAgB,EAAA;AACnB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAEjB,QAAA,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzB;AAED,IAAA,OAAO,CAAC,OAAY,EAAA;AAClB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAEjB,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC3B,QAAA,OAAO,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KAC/B;AAED,IAAA,MAAM,CAAC,OAAY,EAAA;AACjB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAEjB,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACxB,QAAA,OAAO,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC9B;AAED,IAAA,GAAG,CAAC,OAAY,EAAA;AACd,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAExB,QAAA,OAAO,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KAC3B;AAED,IAAA,MAAM,CAAC,OAAY,EAAA;AACjB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,OAAO,CAAC,CAAC;AAEnD,QAAA,OAAO,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC9B;IAED,MAAM,CAAC,OAAY,EAAE,MAAW,EAAA;QAC9B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;YACrC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAI;AAChC,gBAAA,KAAK,GAAG,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAClC,gBAAA,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC1D,aAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACnB,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,IAAI,CAAC,OAAY,EAAA;AACf,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,OAAO,CAAC,CAAC;AACnD,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAA;QAED,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAC;KAC1E;IAED,WAAW,GAAA;QACT,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;KAChD;IAED,oBAAoB,GAAA;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9B,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;KAChD;IAED,MAAM,GAAA;QACJ,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAChC,QAAA,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC9B;IAED,KAAK,CAAC,MAAM,GAAG,KAAK,EAAA;AAClB,QAAA,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,UAAU,GAAG;AAChB,gBAAA,OAAO,EAAE,EAAE;AACX,gBAAA,WAAW,EAAE,IAAI;aAClB,CAAC;AACF,YAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,YAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC7B,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAChC,YAAA,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACxB,YAAA,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACjB,SAAA;KACF;IAED,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AAEf,QAAA,OAAO,KAAK,CAAC,KAAK,EAAE,CAAC;KACtB;IAED,KAAK,GAAA;AACH,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;KACtC;AAED;;;;;;;;;AASG;AACH,IAAA,OAAO,CAAC,IAAgB,EAAE,MAAM,GAAG,IAAI,EAAA;QACrC,IAAI,IAAI,KAAK,IAAI,EAAE;AAEjB,YAAA,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,KAAI;AACzB,gBAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,OAAO,SAAS,CAAC,WAAW,CAAC,KAAK,WAAW,EAAE;AACxE,oBAAA,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;AAC3D,iBAAA;AACH,aAAC,CAAC,CAAC;AACH,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACtB,SAAA;AAED,QAAA,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC5B,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;;;;;;;;;AAUG;IACH,SAAS,CAAC,IAAgB,EAAE,WAAW,GAAG,IAAI,EAAE,MAAM,GAAG,IAAI,EAAA;AAC3D,QAAA,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AAC3B,YAAA,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,KAAI;gBACzB,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAChD,aAAC,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,UAAU,GAAG;AAChB,gBAAA,OAAO,EAAE,EAAE;AACX,gBAAA,WAAW,EAAE,IAAI;aAClB,CAAC;AACH,SAAA;AACD,QAAA,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,WAAW,CAAC;AAC1C,QAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAE5B,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;AAC3C,QAAA,OAAO,IAAI,CAAC;KACb;IAED,SAAS,CAAC,SAAc,EAAE,WAAW,GAAG,IAAI,EAAE,SAAkB,IAAI,EAAA;AAClE,QAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,KAAK,WAAW,EAAE;AACrE,YAAA,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;AAC7D,SAAA;QAED,IAAI,KAAK,GAAG,KAAK,CAAC;AAClB,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,gBAAqB,EAAE,KAAU,KAAI;YACpE,IAAI,gBAAgB,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,OAAO,CAAC,EAAE;gBACpD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;gBAC3C,KAAK,GAAG,IAAI,CAAC;AACd,aAAA;AACH,SAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzC,SAAA;AACD,QAAA,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,WAAW,CAAC;QAC1C,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;AAChD,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,SAAS,CAAC,IAAY,EAAE,OAAe,EAAE,SAAkB,IAAI,EAAA;AAC7D,QAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;AAC/B,QAAA,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;QAErC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACvC,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,OAAO,CAAC,IAAY,EAAE,MAAA,GAAkB,IAAI,EAAA;AAC1C,QAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;AAC/B,QAAA,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC5B,QAAA,OAAO,IAAI,CAAC;KACb;IAED,OAAO,GAAA;QACL,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAED,SAAS,GAAA;QACP,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAED,SAAS,GAAA;QACP,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;AAES,IAAA,WAAW,CAAC,IAAgB,EAAA;AACpC,QAAA,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzB,QAAA,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAEvC,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC5B;AAES,IAAA,IAAI,CAAC,IAAgB,EAAA;QAC7B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,KAAI;AAClC,gBAAA,IAAI,GAAG,WAAW;AACf,qBAAA,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;AAClF,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;;AAGS,IAAA,MAAM,CAAC,IAAgB,EAAA;AAC/B,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;AAC3B,YAAA,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;gBAC/B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAc,KAAI;oBACjD,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AAClC,wBAAA,IAAI,GAAG,WAAW;AACf,6BAAA,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC/E,qBAAA;AACH,iBAAC,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;gBACL,IAAI,UAAU,GAAQ,EAAE,CAAC;gBACzB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAc,KAAI;oBACjD,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AAClC,wBAAA,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,WAAW;AACvC,6BAAA,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAChF,qBAAA;AACH,iBAAC,CAAC,CAAC;;AAEH,gBAAA,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,GAAQ,EAAE,GAAQ,KAAI;oBACzD,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC;AACnC,iBAAC,CAAC,CAAC;AACJ,aAAA;AACF,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AAES,IAAA,QAAQ,CAAC,IAAgB,EAAA;AACjC,QAAA,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;YAC5E,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACvF,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AACF;;;;ICvQC,EAQ8C,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;IAH1B,EAAU,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,+DAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAmB,CAAC,EAAA,CAAA,CAAA,eAAA,EAAA,SAAA,sEAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OACb,MAAuB,CAAA,eAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CADV,2JAEtB,MAAY,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAFU,CAGpB,QAAA,EAAA,SAAA,+DAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAc,CAHM,EAAA,CAAA,CAAA;IAIlD,EAAQ,CAAA,YAAA,EAAA,CAAA;;;IARY,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,eAAA,EAAA,MAAA,CAAA,aAAA,CAAA,yBAAA,CAAA,eAAA,EAAA,MAAA,CAAA,aAAA,CAAA,CAAA;;;;IA0BnC,EAG0D,CAAA,cAAA,CAAA,CAAA,EAAA,uBAAA,EAAA,CAAA,CAAA,CAAA;AAAlC,IAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,SAAA,mGAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAc,yBAAkB,CAAC,EAAA,CAAA,CAAA;IACzD,EAAwB,CAAA,YAAA,EAAA,CAAA;;;AAHA,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAiB,CAAA,eAAA,EAAA,MAAA,CAAA,aAAA,CAAA,CAAA;;MCf5B,sBAAsB,CAAA;AALnC,IAAA,WAAA,GAAA;QAQW,IAAQ,CAAA,QAAA,GAAW,EAAE,CAAC;AAErB,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,YAAY,EAAO,CAAC;AACpC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAO,CAAC;AACtC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAO,CAAC;AACxC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AACjC,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,YAAY,EAAO,CAAC;AAC/B,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AACjC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AACjC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAO,CAAC;AACxC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAO,CAAC;AACtC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAO,CAAC;AACxC,QAAA,IAAA,CAAA,QAAQ,GAAsB,IAAI,YAAY,EAAO,CAAC;AAWhE,QAAA,IAAA,CAAA,eAAe,GAAW;AACxB,YAAA,IAAI,EAAE,QAAQ;AACd,YAAA,UAAU,EAAE,QAAQ;AACpB;;;;AAIG;AACH,YAAA,gBAAgB,EAAE,CAAC;AACnB,YAAA,2BAA2B,EAAE,KAAK;AAClC,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,aAAa,EAAE,KAAK;AACpB,YAAA,OAAO,EAAE;AACP,gBAAA,WAAW,EAAE,SAAS;AACtB,gBAAA,GAAG,EAAE,IAAI;AACT,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,MAAM,EAAE,IAAI;AACZ,gBAAA,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,MAAM;AACjB,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,UAAU,EAAE,EAAE;AACf,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,UAAU,EAAE,EAAE;AACd,gBAAA,iBAAiB,EAAE,MAAM;AACzB,gBAAA,iBAAiB,EAAE,QAAQ;AAC3B,gBAAA,mBAAmB,EAAE,QAAQ;AAC7B,gBAAA,WAAW,EAAE,KAAK;AACnB,aAAA;AACD,YAAA,GAAG,EAAE;AACH,gBAAA,UAAU,EAAE,EAAE;AACd,gBAAA,gBAAgB,EAAE,SAAS;AAC3B,gBAAA,mBAAmB,EAAE,QAAQ;AAC7B,gBAAA,mBAAmB,EAAE,QAAQ;AAC7B,gBAAA,aAAa,EAAE,KAAK;AACrB,aAAA;AACD,YAAA,MAAM,EAAE;AACN,gBAAA,mBAAmB,EAAE,QAAQ;AAC7B,gBAAA,aAAa,EAAE,KAAK;AACrB,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,EAAE,EAAE,EAAE;AACN,gBAAA,KAAK,EAAE,EAAE;AACV,aAAA;AACD,YAAA,aAAa,EAAE,eAAe;AAC9B,YAAA,OAAO,EAAE,EAAE;AACX,YAAA,KAAK,EAAE;AACL,gBAAA,OAAO,EAAE,IAAI;AACb,gBAAA,IAAI,EAAE,CAAC;AACP,gBAAA,OAAO,EAAE,EAAE;AACZ,aAAA;AACD,YAAA,gBAAgB,EAAE,MAAM,EAAE;SAC3B,CAAC;QAEF,IAAa,CAAA,aAAA,GAAY,KAAK,CAAC;AAIvB,QAAA,IAAA,CAAA,UAAU,GAAkB,IAAI,OAAO,EAAQ,CAAC;AA8MzD,KAAA;AA5MC,IAAA,WAAW,CAAC,OAAiD,EAAA;QAC3D,IAAI,IAAI,CAAC,IAAI,EAAE;AACb,YAAA,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AAC/C,aAAA;AACD,YAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;AACrB,gBAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBACnC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClC,aAAA;AACF,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,QAAQ,EAAE,CAAC;AACjB,SAAA;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACrD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACvD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QAC5D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QAC5D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;QACjE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;KAClE;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KACxB;IAED,SAAS,CAAC,KAAa,EAAE,2BAAuC,GAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,EAAA;AACjH,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,OAAO;AACR,SAAA;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAC5C,QAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;;YAEjC,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,OAAO;AACR,SAAA;AAED,QAAA,IAAI,2BAA2B,EAAE;AAC/B,YAAA,MAAM,MAAM,GAAe,IAAI,CAAC,MAAM,CAAC;AACvC,YAAA,MAAM,MAAM,GAAsC,MAAM,CAAC,SAAS,EAAE,CAAC;YACrE,MAAM,IAAI,GAAW,kBAAkB,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;AAC/D,YAAA,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAE5C,YAAA,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE;AACxB,gBAAA,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACrB,OAAO;AACR,aAAA;AAEF,SAAA;QAED,MAAM,GAAG,GAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;AAC5C,QAAA,IAAI,GAAG,EAAE;AACP,YAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACvB,SAAA;AAAM,aAAA;;YAEL,IAAI,CAAC,eAAe,EAAE,CAAC;AACxB,SAAA;KACF;IAEO,eAAe,GAAA;AACrB,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;AAChC,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;KAC5B;AAED,IAAA,aAAa,CAAC,GAAQ,EAAA;QACpB,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,OAAO,EAAE;AAClD,YAAA,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;AAC/B,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACvB,SAAA;KACF;AAED,IAAA,eAAe,CAAC,GAAQ,EAAA;QACtB,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,OAAO,EAAE;AAClD,YAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACzB,YAAA,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;AAC5B,YAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACzB,SAAA;KACF;AAED,IAAA,UAAU,CAAC,GAAQ,EAAA;AACjB,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACzB;AAED,IAAA,iBAAiB,CAAC,GAAQ,EAAA;AACxB,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;AAC5B,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;KACzB;AAED,IAAA,eAAe,CAAC,MAAW,EAAA;AACzB,QAAA,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAE5C,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;KAC1B;AAED,IAAA,WAAW,CAAC,GAAQ,EAAA;AAClB,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACzB,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;KACzB;AAED,IAAA,mBAAmB,CAAC,GAAQ,EAAA;AAC1B,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;KACzB;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACnC,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;QAE1D,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;IAED,aAAa,GAAA;AACX,QAAA,IAAI,IAAI,CAAC,MAAM,YAAY,UAAU,EAAE;YACrC,OAAO,IAAI,CAAC,MAAM,CAAC;AACpB,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,MAAM,YAAY,KAAK,EAAE;AACvC,YAAA,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,SAAA;QAED,OAAO,IAAI,eAAe,EAAE,CAAC;KAC9B;IAED,eAAe,GAAA;AACb,QAAA,OAAO,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC5D;AAED,IAAA,UAAU,CAAC,MAAW,EAAA;QACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;AAED,IAAA,IAAI,CAAC,MAAW,EAAA;QACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;AAED,IAAA,MAAM,CAAC,MAAW,EAAA;QAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAEO,gBAAgB,GAAA;AACtB,QAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;KAC5B;AAEO,IAAA,iBAAiB,CAAC,GAAQ,EAAA;QAChC,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;AAEjD,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;AACtB,YAAA,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI;AAChC,YAAA,UAAU,EAAE,GAAG,GAAG,GAAG,CAAC,aAAa,EAAE,GAAG,IAAI;YAC5C,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,YAAY,IAAI,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAM,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE;AAC/F,SAAA,CAAC,CAAC;KACJ;AAEO,IAAA,aAAa,CAAC,GAAQ,EAAA;AAC5B,QAAA,MAAM,IAAI,GAAG;AACX,YAAA,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI;AAChC,YAAA,UAAU,EAAE,GAAG,GAAG,GAAG,CAAC,aAAa,EAAE,GAAG,IAAI;YAC5C,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;AACF,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,QAAA,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE;AACpB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,SAAA;KACF;AAEO,IAAA,eAAe,CAAC,GAAQ,EAAA;AAC9B,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AACpB,YAAA,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI;AAChC,YAAA,UAAU,EAAE,GAAG,GAAG,GAAG,CAAC,aAAa,EAAE,GAAG,IAAI;YAC5C,MAAM,EAAE,IAAI,CAAC,MAAM;AACpB,SAAA,CAAC,CAAC;KACJ;AAEO,IAAA,iBAAiB,CAAC,KAAa,EAAA;QACrC,MAAM,UAAU,GAAW,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC;AAChD,QAAA,OAAO,KAAK,GAAG,CAAC,KAAK,OAAO,UAAU,KAAK,QAAQ,IAAI,KAAK,IAAI,UAAU,CAAC,CAAC;KAC7E;IAEO,sBAAsB,GAAA;QAC5B,IAAI,IAAI,CAAC,uBAAuB,EAAE;AAChC,YAAA,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;AAC5C,SAAA;QACD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AACnD,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChC,aAAA,SAAS,CAAC,CAAC,GAAG,KAAI;AACjB,YAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC1B,SAAC,CAAC,CAAC;KACN;IAEO,wBAAwB,GAAA;QAC9B,IAAI,IAAI,CAAC,yBAAyB,EAAE;AAClC,YAAA,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC;AAC9C,SAAA;QACD,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;AACvD,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChC,aAAA,SAAS,CAAC,CAAC,GAAG,KAAI;AACjB,YAAA,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;AAC5B,SAAC,CAAC,CAAC;KACN;;4FAjSU,sBAAsB,GAAA,CAAA,EAAA,CAAA;yEAAtB,sBAAsB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,WAAA,EAAA,aAAA,EAAA,aAAA,EAAA,eAAA,EAAA,MAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,aAAA,EAAA,eAAA,EAAA,WAAA,EAAA,aAAA,EAAA,aAAA,EAAA,eAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,SAAA,CAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,eAAA,EAAA,QAAA,EAAA,eAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,QAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,QAAA,EAAA,eAAA,EAAA,aAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,eAAA,EAAA,eAAA,EAAA,mBAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,QAAA,EAAA,eAAA,EAAA,YAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,eAAA,EAAA,QAAA,EAAA,eAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,QAAA,CAAA,EAAA,CAAA,CAAA,EAAA,QAAA,EAAA,eAAA,EAAA,YAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,+BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;QDfnC,EAA6C,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;QAE3C,EASQ,CAAA,UAAA,CAAA,CAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;QAER,EAWoD,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;AANhC,QAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,qDAAA,CAAA,MAAA,EAAA,EAAA,OAAQ,qBAAiB,CAAC,EAAA,CAAA,CAAA,QAAA,EAAA,SAAA,uDAAA,CAAA,MAAA,EAAA,EAAA,OAChB,uBAAmB,CADH,EAAA,CAAA,CAAA,QAAA,EAAA,SAAA,uDAAA,CAAA,MAAA,EAAA,EAAA,OAEhB,uBAAmB,CAFH,EAAA,CAAA,CAAA,eAAA,EAAA,SAAA,8DAAA,CAAA,MAAA,EAAA,EAAA,OAGT,2BAAuB,CAHd,EAAA,CAAA,CAAA,eAAA,EAAA,SAAA,8DAAA,CAAA,MAAA,EAAA,EAAA,OAIT,yBAAqB,CAJZ,EAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,kEAAA,CAAA,MAAA,EAAA,EAAA,OAKL,6BAAyB,CALpB,EAAA,CAAA,CAAA,UAAA,EAAA,SAAA,yDAAA,CAAA,MAAA,EAAA,EAAA,OAMd,sBAAkB,CANJ,EAAA,CAAA,CAAA;AAO9C,QAAA,EAAA,CAAA,YAAA,EAAQ,EAAA,CAAA;QAIV,EAIwB,CAAA,UAAA,CAAA,CAAA,EAAA,uDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,uBAAA,EAAA,CAAA,CAAA,CAAA;;AAjCjB,QAAA,EAAA,CAAA,UAAA,CAAA,IAAA,EAAA,GAAA,CAAA,OAAA,CAAc,CAAA,SAAA,EAAA,GAAA,CAAA,UAAA,CAAA,CAAA;QAEE,EAAuC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAvC,EAAuC,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,YAAA,IAAA,CAAA,GAAA,CAAA,eAAA,CAAA,CAAA;QAWxC,EAAa,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAAb,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,IAAA,CAAA,CAAA,QAAA,EAAA,GAAA,CAAA,MAAA,CAAA,CAAA,eAAA,EAAA,GAAA,CAAA,aAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,WAAA,CAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,gBAAA,CAAA,CAAA;QAgBX,EAAoB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;QAApB,EAAoB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,cAAA,CAAA,CAAA;;uFCd/B,sBAAsB,EAAA,CAAA;cALlC,SAAS;2BACE,iBAAiB,EAAA,QAAA,EAAA,miDAAA,EAAA,MAAA,EAAA,CAAA,gsBAAA,CAAA,EAAA,CAAA;gBAMlB,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,QAAQ,EAAA,CAAA;kBAAhB,KAAK;YAEI,SAAS,EAAA,CAAA;kBAAlB,MAAM;YACG,WAAW,EAAA,CAAA;kBAApB,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,MAAM,EAAA,CAAA;kBAAf,MAAM;YACG,IAAI,EAAA,CAAA;kBAAb,MAAM;YACG,MAAM,EAAA,CAAA;kBAAf,MAAM;YACG,MAAM,EAAA,CAAA;kBAAf,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,WAAW,EAAA,CAAA;kBAApB,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,QAAQ,EAAA,CAAA;kBAAjB,MAAM;;;MCAI,mBAAmB,CAAA;;sFAAnB,mBAAmB,GAAA,CAAA,EAAA,CAAA;qEAAnB,mBAAmB,EAAA,CAAA,CAAA;AAjBrB,mBAAA,CAAA,IAAA,iBAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA;YACP,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,UAAU;YACV,YAAY;YACZ,WAAW;YACX,WAAW;YACX,WAAW;AACZ,SAAA,CAAA,EAAA,CAAA,CAAA;uFAQU,mBAAmB,EAAA,CAAA;cAlB/B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;oBACX,mBAAmB;oBACnB,UAAU;oBACV,YAAY;oBACZ,WAAW;oBACX,WAAW;oBACX,WAAW;AACZ,iBAAA;AACD,gBAAA,YAAY,EAAE;oBACZ,sBAAsB;AACvB,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,sBAAsB;AACvB,iBAAA;AACF,aAAA,CAAA;;wFACY,mBAAmB,EAAA,EAAA,YAAA,EAAA,CAN5B,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAVtB,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,UAAU;QACV,YAAY;QACZ,WAAW;QACX,WAAW;AACX,QAAA,WAAW,aAMX,sBAAsB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MC3Bb,gBAAgB,CAAA;AAoB3B,IAAA,WAAA,CACE,EAAE,QAAQ,GAAG,EAAE,EAAE,YAAY,GAAG,EAAE,EAAE,UAAU,GAAG,EAAE,EACjD,YAAY,GAAG,EAAE,EAAE,aAAa,GAAG,EAAE,EAAE,cAAc,GAAG,EAAE,EAAE,QAAQ,GAAG,EAAE,EAAE,OAAO,GAAG,EAAE,EAAE,GAAG,EAAE,EAAA;AAEhG,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,EAAE,CAAC;AAEzC,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,GAAG,YAAY,GAAG,gBAAgB,CAAC,cAAc,CAAC;AAClF,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,gBAAgB,CAAC,YAAY,CAAC;AAC1E,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,GAAG,YAAY,GAAG,gBAAgB,CAAC,cAAc,CAAC;AAClF,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,GAAG,aAAa,GAAG,gBAAgB,CAAC,eAAe,CAAC;AACtF,QAAA,IAAI,CAAC,cAAc,GAAG,cAAc,GAAG,cAAc,GAAG,gBAAgB,CAAC,gBAAgB,CAAC;AAC1F,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,gBAAgB,CAAC,SAAS,CAAC;AACjE,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,gBAAgB,CAAC,QAAQ,CAAC;KAC9D;;AA/ByB,gBAAc,CAAA,cAAA,GAAG,OAAO,CAAC;AACzB,gBAAY,CAAA,YAAA,GAAG,QAAQ,CAAC;AACxB,gBAAc,CAAA,cAAA,GAAG,OAAO,CAAC;AACzB,gBAAe,CAAA,eAAA,GAAG,QAAQ,CAAC;AAC3B,gBAAgB,CAAA,gBAAA,GAAG,cAAc,CAAC;AAClC,gBAAS,CAAA,SAAA,GAAG,eAAe,CAAC;AAC5B,gBAAQ,CAAA,QAAA,GAAG,EAAE;;ACCnC,MAAO,gBAAiB,SAAQ,eAAe,CAAA;IAMnD,WAAsB,CAAA,IAAgB,EAAE,IAAA,GAA8B,EAAE,EAAA;AACtE,QAAA,KAAK,EAAE,CAAC;QADY,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAF5B,IAAgB,CAAA,gBAAA,GAAW,CAAC,CAAC;QAKrC,IAAI,CAAC,IAAI,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAEvC,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACvB,YAAA,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;AACtG,SAAA;KACF;IAED,KAAK,GAAA;QACH,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAED,WAAW,GAAA;QACT,OAAO,IAAI,CAAC,eAAe,EAAE;AAC1B,aAAA,IAAI,CAAC,GAAG,CAAC,GAAG,IAAG;YACd,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC;YAC3D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;YAE9C,OAAO,IAAI,CAAC,IAAI,CAAC;AACnB,SAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;KACnB;AAED;;;;AAIG;AACO,IAAA,uBAAuB,CAAC,GAAQ,EAAA;AACxC,QAAA,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;AACzB,QAAA,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC;QAE/F,IAAI,IAAI,YAAY,KAAK,EAAE;AACzB,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;QAED,MAAM,IAAI,KAAK,CAAC,CAAA;AACwD,0EAAA,EAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAA,sBAAA,CAAwB,CAAC,CAAC;KACpH;AAED;;;;;AAKG;AACO,IAAA,wBAAwB,CAAC,GAAQ,EAAA;AACzC,QAAA,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AACvC,YAAA,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7C,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;AACzB,YAAA,OAAO,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AAC1D,SAAA;KACF;IAES,eAAe,GAAA;AACvB,QAAA,IAAI,UAAU,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;KACvF;IAES,kBAAkB,GAAA;AAC1B,QAAA,IAAI,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;AAElC,QAAA,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;AACnD,QAAA,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;AACrD,QAAA,OAAO,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;KAC/C;AAES,IAAA,oBAAoB,CAAC,UAAsB,EAAA;QACnD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,KAAI;AAClC,gBAAA,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;AACrE,gBAAA,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACvF,aAAC,CAAC,CAAC;AACJ,SAAA;AAED,QAAA,OAAO,UAAU,CAAC;KACnB;AAES,IAAA,sBAAsB,CAAC,UAAsB,EAAA;AAErD,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YAC3B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAc,KAAI;AACjD,gBAAA,IAAI,SAAS,CAAC,QAAQ,CAAC,EAAE;oBACvB,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnH,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;AAED,QAAA,OAAO,UAAU,CAAC;KACnB;AAES,IAAA,qBAAqB,CAAC,UAAsB,EAAA;AAEpD,QAAA,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;AAC5E,YAAA,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7E,YAAA,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AAClF,SAAA;AAED,QAAA,OAAO,UAAU,CAAC;KACnB;AACF;;ACrHD;;AAEG;;;;"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { ViewContainerRef, Component, Input, ViewChild, ChangeDetectionStrategy, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/forms';\nimport { FormsModule, NgControl, FormControl, ReactiveFormsModule } from '@angular/forms';\nimport * as i1$2 from 'ng2-completer';\nimport { Ng2CompleterModule } from 'ng2-completer';\nimport { skip, distinctUntilChanged, debounceTime, map, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { HttpParams } from '@angular/common/http';\n\nconst _c0$c = [\"dynamicTarget\"];\r\nfunction CustomViewComponent_ng_template_0_Template(rf, ctx) { }\r\nclass CustomViewComponent {\r\n    constructor(resolver) {\r\n        this.resolver = resolver;\r\n    }\r\n    ngOnInit() {\r\n        if (this.cell && !this.customComponent) {\r\n            this.createCustomComponent();\r\n            this.callOnComponentInit();\r\n            this.patchInstance();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.customComponent) {\r\n            this.customComponent.destroy();\r\n        }\r\n    }\r\n    createCustomComponent() {\r\n        const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\r\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n    }\r\n    callOnComponentInit() {\r\n        const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\r\n        onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\r\n    }\r\n    patchInstance() {\r\n        Object.assign(this.customComponent.instance, this.getPatch());\r\n    }\r\n    getPatch() {\r\n        return {\r\n            value: this.cell.getValue(),\r\n            rowData: this.cell.getRow().getData()\r\n        };\r\n    }\r\n}\r\nCustomViewComponent.ɵfac = function CustomViewComponent_Factory(t) { return new (t || CustomViewComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\r\nCustomViewComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomViewComponent, selectors: [[\"custom-view-component\"]], viewQuery: function CustomViewComponent_Query(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵviewQuery(_c0$c, 7, ViewContainerRef);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\r\n        }\r\n    }, inputs: { cell: \"cell\" }, decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomViewComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, CustomViewComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\r\n        }\r\n    }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomViewComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'custom-view-component',\r\n                    template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n                }]\r\n        }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { cell: [{\r\n                type: Input\r\n            }], dynamicTarget: [{\r\n                type: ViewChild,\r\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\r\n            }] });\r\n})();\n\nfunction ViewCellComponent_custom_view_component_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"custom-view-component\", 4);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"cell\", ctx_r0.cell);\r\n    }\r\n}\r\nfunction ViewCellComponent_div_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"div\", 5);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"innerHTML\", ctx_r1.cell.getValue(), i0.ɵɵsanitizeHtml);\r\n    }\r\n}\r\nfunction ViewCellComponent_div_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\");\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r2 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate(ctx_r2.cell.getValue());\r\n    }\r\n}\r\nclass ViewCellComponent {\r\n}\r\nViewCellComponent.ɵfac = function ViewCellComponent_Factory(t) { return new (t || ViewCellComponent)(); };\r\nViewCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ViewCellComponent, selectors: [[\"table-cell-view-mode\"]], inputs: { cell: \"cell\" }, decls: 4, vars: 3, consts: [[3, \"ngSwitch\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"innerHTML\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"cell\"], [3, \"innerHTML\"]], template: function ViewCellComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"div\", 0);\r\n            i0.ɵɵtemplate(1, ViewCellComponent_custom_view_component_1_Template, 1, 1, \"custom-view-component\", 1);\r\n            i0.ɵɵtemplate(2, ViewCellComponent_div_2_Template, 1, 1, \"div\", 2);\r\n            i0.ɵɵtemplate(3, ViewCellComponent_div_3_Template, 2, 1, \"div\", 3);\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngSwitch\", ctx.cell.getColumn().type);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngSwitchCase\", \"html\");\r\n        }\r\n    }, directives: [i1.NgSwitch, i1.NgSwitchCase, CustomViewComponent, i1.NgSwitchDefault], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewCellComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'table-cell-view-mode',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    template: `\r\n    <div [ngSwitch]=\"cell.getColumn().type\">\r\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\r\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\r\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\r\n    </div>\r\n    `,\r\n                }]\r\n        }], null, { cell: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nclass EditCellDefault {\r\n    constructor() {\r\n        this.inputClass = '';\r\n        this.edited = new EventEmitter();\r\n    }\r\n    onEdited(event) {\r\n        this.edited.next(event);\r\n        return false;\r\n    }\r\n    onStopEditing() {\r\n        this.cell.getRow().isInEditing = false;\r\n        return false;\r\n    }\r\n    onClick(event) {\r\n        event.stopPropagation();\r\n    }\r\n}\r\nEditCellDefault.ɵfac = function EditCellDefault_Factory(t) { return new (t || EditCellDefault)(); };\r\nEditCellDefault.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditCellDefault, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, decls: 0, vars: 0, template: function EditCellDefault_Template(rf, ctx) { }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellDefault, [{\r\n            type: Component,\r\n            args: [{\r\n                    template: ''\r\n                }]\r\n        }], null, { cell: [{\r\n                type: Input\r\n            }], inputClass: [{\r\n                type: Input\r\n            }], edited: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nconst _c0$b = [\"dynamicTarget\"];\r\nfunction CustomEditComponent_ng_template_0_Template(rf, ctx) { }\r\nclass CustomEditComponent extends EditCellDefault {\r\n    constructor(resolver) {\r\n        super();\r\n        this.resolver = resolver;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.cell && !this.customComponent) {\r\n            const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\r\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n            // set @Inputs and @Outputs of custom component\r\n            this.customComponent.instance.cell = this.cell;\r\n            this.customComponent.instance.inputClass = this.inputClass;\r\n            this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\r\n            this.customComponent.instance.onEdited.subscribe((event) => this.onEdited(event));\r\n            this.customComponent.instance.onClick.subscribe((event) => this.onClick(event));\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.customComponent) {\r\n            this.customComponent.destroy();\r\n        }\r\n    }\r\n}\r\nCustomEditComponent.ɵfac = function CustomEditComponent_Factory(t) { return new (t || CustomEditComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\r\nCustomEditComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomEditComponent, selectors: [[\"table-cell-custom-editor\"]], viewQuery: function CustomEditComponent_Query(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵviewQuery(_c0$b, 7, ViewContainerRef);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\r\n        }\r\n    }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomEditComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, CustomEditComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\r\n        }\r\n    }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomEditComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'table-cell-custom-editor',\r\n                    template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n                }]\r\n        }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { dynamicTarget: [{\r\n                type: ViewChild,\r\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\r\n            }] });\r\n})();\n\nclass DefaultEditor {\r\n    constructor() {\r\n        this.onStopEditing = new EventEmitter();\r\n        this.onEdited = new EventEmitter();\r\n        this.onClick = new EventEmitter();\r\n    }\r\n}\r\nDefaultEditor.ɵfac = function DefaultEditor_Factory(t) { return new (t || DefaultEditor)(); };\r\nDefaultEditor.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultEditor, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { onStopEditing: \"onStopEditing\", onEdited: \"onEdited\", onClick: \"onClick\" }, decls: 0, vars: 0, template: function DefaultEditor_Template(rf, ctx) { }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditor, [{\r\n            type: Component,\r\n            args: [{\r\n                    template: '',\r\n                }]\r\n        }], null, { cell: [{\r\n                type: Input\r\n            }], inputClass: [{\r\n                type: Input\r\n            }], onStopEditing: [{\r\n                type: Output\r\n            }], onEdited: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nfunction SelectEditorComponent_option_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"option\", 2);\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const option_r1 = ctx.$implicit;\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"value\", option_r1.value)(\"selected\", option_r1.value === ctx_r0.cell.getValue());\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate1(\"\", option_r1.title, \" \");\r\n    }\r\n}\r\nclass SelectEditorComponent extends DefaultEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\nSelectEditorComponent.ɵfac = function SelectEditorComponent_Factory(t) { return new (t || SelectEditorComponent)(); };\r\nSelectEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectEditorComponent, selectors: [[\"select-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]], template: function SelectEditorComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"select\", 0);\r\n            i0.ɵɵlistener(\"ngModelChange\", function SelectEditorComponent_Template_select_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function SelectEditorComponent_Template_select_click_0_listener($event) { return ctx.onClick.emit($event); })(\"keydown.enter\", function SelectEditorComponent_Template_select_keydown_enter_0_listener($event) { return ctx.onEdited.emit($event); })(\"keydown.esc\", function SelectEditorComponent_Template_select_keydown_esc_0_listener() { return ctx.onStopEditing.emit(); });\r\n            i0.ɵɵtemplate(1, SelectEditorComponent_option_1_Template, 2, 3, \"option\", 1);\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            let tmp_4_0;\r\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable());\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngForOf\", (tmp_4_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_4_0.list);\r\n        }\r\n    }, directives: [i1$1.SelectControlValueAccessor, i1.NgClass, i1$1.NgControlStatus, i1$1.NgModel, i1.NgForOf, i1$1.NgSelectOption, i1$1.ɵNgSelectMultipleOption], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectEditorComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'select-editor',\r\n                    template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"cell.newValue\"\r\n            [name]=\"cell.getId()\"\r\n            [disabled]=\"!cell.isEditable()\"\r\n            (click)=\"onClick.emit($event)\"\r\n            (keydown.enter)=\"onEdited.emit($event)\"\r\n            (keydown.esc)=\"onStopEditing.emit()\">\r\n\r\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\r\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\r\n        </option>\r\n    </select>\r\n    `,\r\n                }]\r\n        }], function () { return []; }, null);\r\n})();\n\nclass TextareaEditorComponent extends DefaultEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\nTextareaEditorComponent.ɵfac = function TextareaEditorComponent_Factory(t) { return new (t || TextareaEditorComponent)(); };\r\nTextareaEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TextareaEditorComponent, selectors: [[\"textarea-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"placeholder\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function TextareaEditorComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"textarea\", 0);\r\n            i0.ɵɵlistener(\"ngModelChange\", function TextareaEditorComponent_Template_textarea_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function TextareaEditorComponent_Template_textarea_click_0_listener($event) { return ctx.onClick.emit($event); })(\"keydown.enter\", function TextareaEditorComponent_Template_textarea_keydown_enter_0_listener($event) { return ctx.onEdited.emit($event); })(\"keydown.esc\", function TextareaEditorComponent_Template_textarea_keydown_esc_0_listener() { return ctx.onStopEditing.emit(); });\r\n            i0.ɵɵtext(1, \"    \");\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"placeholder\", ctx.cell.getTitle());\r\n        }\r\n    }, directives: [i1$1.DefaultValueAccessor, i1.NgClass, i1$1.NgControlStatus, i1$1.NgModel], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextareaEditorComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'textarea-editor', template: `\r\n    <textarea [ngClass]=\"inputClass\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"cell.newValue\"\r\n              [name]=\"cell.getId()\"\r\n              [disabled]=\"!cell.isEditable()\"\r\n              [placeholder]=\"cell.getTitle()\"\r\n              (click)=\"onClick.emit($event)\"\r\n              (keydown.enter)=\"onEdited.emit($event)\"\r\n              (keydown.esc)=\"onStopEditing.emit()\">\r\n    </textarea>\r\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\r\n        }], function () { return []; }, null);\r\n})();\n\nclass CheckboxEditorComponent extends DefaultEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onChange(event) {\r\n        const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\r\n        const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\r\n        this.cell.newValue = event.target.checked ? trueVal : falseVal;\r\n    }\r\n}\r\nCheckboxEditorComponent.ɵfac = function CheckboxEditorComponent_Factory(t) { return new (t || CheckboxEditorComponent)(); };\r\nCheckboxEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxEditorComponent, selectors: [[\"checkbox-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 4, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngClass\", \"name\", \"disabled\", \"checked\", \"click\", \"change\"]], template: function CheckboxEditorComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"input\", 0);\r\n            i0.ɵɵlistener(\"click\", function CheckboxEditorComponent_Template_input_click_0_listener($event) { return ctx.onClick.emit($event); })(\"change\", function CheckboxEditorComponent_Template_input_change_0_listener($event) { return ctx.onChange($event); });\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            let tmp_3_0;\r\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"checked\", ctx.cell.getValue() == (((tmp_3_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_3_0.true) || true));\r\n        }\r\n    }, directives: [i1.NgClass], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxEditorComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'checkbox-editor', template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           type=\"checkbox\"\r\n           class=\"form-control\"\r\n           [name]=\"cell.getId()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (change)=\"onChange($event)\">\r\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\r\n        }], function () { return []; }, null);\r\n})();\n\nclass CompleterEditorComponent extends DefaultEditor {\r\n    constructor(completerService) {\r\n        super();\r\n        this.completerService = completerService;\r\n        this.completerStr = '';\r\n    }\r\n    ngOnInit() {\r\n        if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\r\n            const config = this.cell.getColumn().getConfig().completer;\r\n            config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n            config.dataService.descriptionField(config.descriptionField);\r\n        }\r\n    }\r\n    onEditedCompleter(event) {\r\n        this.cell.newValue = event.title;\r\n        return false;\r\n    }\r\n}\r\nCompleterEditorComponent.ɵfac = function CompleterEditorComponent_Factory(t) { return new (t || CompleterEditorComponent)(i0.ɵɵdirectiveInject(i1$2.CompleterService)); };\r\nCompleterEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CompleterEditorComponent, selectors: [[\"completer-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterEditorComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"ng2-completer\", 0);\r\n            i0.ɵɵlistener(\"ngModelChange\", function CompleterEditorComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.completerStr = $event; })(\"selected\", function CompleterEditorComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.onEditedCompleter($event); });\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngModel\", ctx.completerStr)(\"dataService\", ctx.cell.getColumn().getConfig().completer.dataService)(\"minSearchLength\", ctx.cell.getColumn().getConfig().completer.minSearchLength || 0)(\"pause\", ctx.cell.getColumn().getConfig().completer.pause || 0)(\"placeholder\", ctx.cell.getColumn().getConfig().completer.placeholder || \"Start typing...\");\r\n        }\r\n    }, directives: [i1$2.CompleterCmp, i1$1.NgControlStatus, i1$1.NgModel], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterEditorComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'completer-editor',\r\n                    template: `\r\n    <ng2-completer [(ngModel)]=\"completerStr\"\r\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\r\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\r\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"onEditedCompleter($event)\">\r\n    </ng2-completer>\r\n    `,\r\n                }]\r\n        }], function () { return [{ type: i1$2.CompleterService }]; }, null);\r\n})();\n\nclass InputEditorComponent extends DefaultEditor {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\nInputEditorComponent.ɵfac = function InputEditorComponent_Factory(t) { return new (t || InputEditorComponent)(); };\r\nInputEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputEditorComponent, selectors: [[\"input-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"placeholder\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function InputEditorComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"input\", 0);\r\n            i0.ɵɵlistener(\"ngModelChange\", function InputEditorComponent_Template_input_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function InputEditorComponent_Template_input_click_0_listener($event) { return ctx.onClick.emit($event); })(\"keydown.enter\", function InputEditorComponent_Template_input_keydown_enter_0_listener($event) { return ctx.onEdited.emit($event); })(\"keydown.esc\", function InputEditorComponent_Template_input_keydown_esc_0_listener() { return ctx.onStopEditing.emit(); });\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"placeholder\", ctx.cell.getTitle())(\"disabled\", !ctx.cell.isEditable());\r\n        }\r\n    }, directives: [i1$1.DefaultValueAccessor, i1.NgClass, i1$1.NgControlStatus, i1$1.NgModel], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputEditorComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'input-editor', template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           class=\"form-control\"\r\n           [(ngModel)]=\"cell.newValue\"\r\n           [name]=\"cell.getId()\"\r\n           [placeholder]=\"cell.getTitle()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (keydown.enter)=\"onEdited.emit($event)\"\r\n           (keydown.esc)=\"onStopEditing.emit()\">\r\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\r\n        }], function () { return []; }, null);\r\n})();\n\nfunction DefaultEditComponent_select_editor_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r6 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"select-editor\", 5);\r\n        i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_select_editor_1_Template_select_editor_onClick_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.onClick($event); })(\"onEdited\", function DefaultEditComponent_select_editor_1_Template_select_editor_onEdited_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.onEdited($event); })(\"onStopEditing\", function DefaultEditComponent_select_editor_1_Template_select_editor_onStopEditing_0_listener() { i0.ɵɵrestoreView(_r6); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.onStopEditing(); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\r\n    }\r\n}\r\nfunction DefaultEditComponent_textarea_editor_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r10 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"textarea-editor\", 5);\r\n        i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onClick_0_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.onClick($event); })(\"onEdited\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onEdited_0_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.onEdited($event); })(\"onStopEditing\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onStopEditing_0_listener() { i0.ɵɵrestoreView(_r10); const ctx_r12 = i0.ɵɵnextContext(); return ctx_r12.onStopEditing(); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\r\n    }\r\n}\r\nfunction DefaultEditComponent_checkbox_editor_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r14 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"checkbox-editor\", 6);\r\n        i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_checkbox_editor_3_Template_checkbox_editor_onClick_0_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(); return ctx_r13.onClick($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r2 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"cell\", ctx_r2.cell)(\"inputClass\", ctx_r2.inputClass);\r\n    }\r\n}\r\nfunction DefaultEditComponent_completer_editor_4_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"completer-editor\", 7);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r3 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"cell\", ctx_r3.cell);\r\n    }\r\n}\r\nfunction DefaultEditComponent_input_editor_5_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r16 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"input-editor\", 5);\r\n        i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_input_editor_5_Template_input_editor_onClick_0_listener($event) { i0.ɵɵrestoreView(_r16); const ctx_r15 = i0.ɵɵnextContext(); return ctx_r15.onClick($event); })(\"onEdited\", function DefaultEditComponent_input_editor_5_Template_input_editor_onEdited_0_listener($event) { i0.ɵɵrestoreView(_r16); const ctx_r17 = i0.ɵɵnextContext(); return ctx_r17.onEdited($event); })(\"onStopEditing\", function DefaultEditComponent_input_editor_5_Template_input_editor_onStopEditing_0_listener() { i0.ɵɵrestoreView(_r16); const ctx_r18 = i0.ɵɵnextContext(); return ctx_r18.onStopEditing(); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r4 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"cell\", ctx_r4.cell)(\"inputClass\", ctx_r4.inputClass);\r\n    }\r\n}\r\nclass DefaultEditComponent extends EditCellDefault {\r\n    constructor() {\r\n        super();\r\n    }\r\n    getEditorType() {\r\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n    }\r\n}\r\nDefaultEditComponent.ɵfac = function DefaultEditComponent_Factory(t) { return new (t || DefaultEditComponent)(); };\r\nDefaultEditComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultEditComponent, selectors: [[\"table-cell-default-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 6, vars: 5, consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"onClick\", 4, \"ngSwitchCase\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\"], [3, \"cell\", \"inputClass\", \"onClick\"], [3, \"cell\"]], template: function DefaultEditComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"div\", 0);\r\n            i0.ɵɵtemplate(1, DefaultEditComponent_select_editor_1_Template, 1, 2, \"select-editor\", 1);\r\n            i0.ɵɵtemplate(2, DefaultEditComponent_textarea_editor_2_Template, 1, 2, \"textarea-editor\", 1);\r\n            i0.ɵɵtemplate(3, DefaultEditComponent_checkbox_editor_3_Template, 1, 2, \"checkbox-editor\", 2);\r\n            i0.ɵɵtemplate(4, DefaultEditComponent_completer_editor_4_Template, 1, 1, \"completer-editor\", 3);\r\n            i0.ɵɵtemplate(5, DefaultEditComponent_input_editor_5_Template, 1, 2, \"input-editor\", 4);\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngSwitchCase\", \"textarea\");\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\r\n        }\r\n    }, directives: [i1.NgSwitch, i1.NgSwitchCase, SelectEditorComponent, TextareaEditorComponent, CheckboxEditorComponent, CompleterEditorComponent, i1.NgSwitchDefault, InputEditorComponent], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'table-cell-default-editor', template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\r\\n    <select-editor *ngSwitchCase=\\\"'list'\\\"\\r\\n                   [cell]=\\\"cell\\\"\\r\\n                   [inputClass]=\\\"inputClass\\\"\\r\\n                   (onClick)=\\\"onClick($event)\\\"\\r\\n                   (onEdited)=\\\"onEdited($event)\\\"\\r\\n                   (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </select-editor>\\r\\n\\r\\n    <textarea-editor *ngSwitchCase=\\\"'textarea'\\\"\\r\\n                     [cell]=\\\"cell\\\"\\r\\n                     [inputClass]=\\\"inputClass\\\"\\r\\n                     (onClick)=\\\"onClick($event)\\\"\\r\\n                     (onEdited)=\\\"onEdited($event)\\\"\\r\\n                     (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </textarea-editor>\\r\\n\\r\\n    <checkbox-editor *ngSwitchCase=\\\"'checkbox'\\\"\\r\\n                     [cell]=\\\"cell\\\"\\r\\n                     [inputClass]=\\\"inputClass\\\"\\r\\n                     (onClick)=\\\"onClick($event)\\\">\\r\\n    </checkbox-editor>\\r\\n\\r\\n    <completer-editor *ngSwitchCase=\\\"'completer'\\\"\\r\\n                      [cell]=\\\"cell\\\">\\r\\n    </completer-editor>\\r\\n\\r\\n    <input-editor *ngSwitchDefault\\r\\n                  [cell]=\\\"cell\\\"\\r\\n                  [inputClass]=\\\"inputClass\\\"\\r\\n                  (onClick)=\\\"onClick($event)\\\"\\r\\n                  (onEdited)=\\\"onEdited($event)\\\"\\r\\n                  (onStopEditing)=\\\"onStopEditing()\\\">\\r\\n    </input-editor>\\r\\n</div>\" }]\r\n        }], function () { return []; }, null);\r\n})();\n\nfunction EditCellComponent_table_cell_custom_editor_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r3 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"table-cell-custom-editor\", 3);\r\n        i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_custom_editor_1_Template_table_cell_custom_editor_edited_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.onEdited($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\r\n    }\r\n}\r\nfunction EditCellComponent_table_cell_default_editor_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r5 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"table-cell-default-editor\", 3);\r\n        i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_default_editor_2_Template_table_cell_default_editor_edited_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onEdited($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\r\n    }\r\n}\r\nclass EditCellComponent {\r\n    constructor() {\r\n        this.inputClass = '';\r\n        this.edited = new EventEmitter();\r\n    }\r\n    onEdited(event) {\r\n        this.edited.next(event);\r\n        return false;\r\n    }\r\n    getEditorType() {\r\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n    }\r\n}\r\nEditCellComponent.ɵfac = function EditCellComponent_Factory(t) { return new (t || EditCellComponent)(); };\r\nEditCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditCellComponent, selectors: [[\"table-cell-edit-mode\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, decls: 3, vars: 2, consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function EditCellComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"div\", 0);\r\n            i0.ɵɵtemplate(1, EditCellComponent_table_cell_custom_editor_1_Template, 1, 2, \"table-cell-custom-editor\", 1);\r\n            i0.ɵɵtemplate(2, EditCellComponent_table_cell_default_editor_2_Template, 1, 2, \"table-cell-default-editor\", 2);\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\r\n        }\r\n    }, directives: [i1.NgSwitch, i1.NgSwitchCase, CustomEditComponent, i1.NgSwitchDefault, DefaultEditComponent], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'table-cell-edit-mode',\r\n                    template: `\r\n      <div [ngSwitch]=\"getEditorType()\">\r\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-custom-editor>\r\n        <table-cell-default-editor *ngSwitchDefault\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-default-editor>\r\n      </div>\r\n    `,\r\n                }]\r\n        }], null, { cell: [{\r\n                type: Input\r\n            }], inputClass: [{\r\n                type: Input\r\n            }], edited: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nfunction CellComponent_table_cell_view_mode_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"table-cell-view-mode\", 2);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"cell\", ctx_r0.cell);\r\n    }\r\n}\r\nfunction CellComponent_table_cell_edit_mode_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r3 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"table-cell-edit-mode\", 3);\r\n        i0.ɵɵlistener(\"edited\", function CellComponent_table_cell_edit_mode_1_Template_table_cell_edit_mode_edited_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.onEdited($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\r\n    }\r\n}\r\nclass CellComponent {\r\n    constructor() {\r\n        this.inputClass = '';\r\n        this.mode = 'inline';\r\n        this.isInEditing = false;\r\n        this.edited = new EventEmitter();\r\n    }\r\n    onEdited(event) {\r\n        if (this.isNew) {\r\n            this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n        }\r\n        else {\r\n            this.grid.save(this.row, this.editConfirm);\r\n        }\r\n    }\r\n}\r\nCellComponent.ɵfac = function CellComponent_Factory(t) { return new (t || CellComponent)(); };\r\nCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CellComponent, selectors: [[\"ng2-smart-table-cell\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", isNew: \"isNew\", cell: \"cell\", inputClass: \"inputClass\", mode: \"mode\", isInEditing: \"isInEditing\" }, outputs: { edited: \"edited\" }, decls: 2, vars: 2, consts: [[3, \"cell\", 4, \"ngIf\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngIf\"], [3, \"cell\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function CellComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, CellComponent_table_cell_view_mode_0_Template, 1, 1, \"table-cell-view-mode\", 0);\r\n            i0.ɵɵtemplate(1, CellComponent_table_cell_edit_mode_1_Template, 1, 2, \"table-cell-edit-mode\", 1);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", !ctx.isInEditing);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.isInEditing);\r\n        }\r\n    }, directives: [i1.NgIf, ViewCellComponent, EditCellComponent], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'ng2-smart-table-cell',\r\n                    template: `\r\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\r\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\r\n                          [inputClass]=\"inputClass\"\r\n                          (edited)=\"onEdited($event)\">\r\n    </table-cell-edit-mode>\r\n  `,\r\n                }]\r\n        }], null, { grid: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], editConfirm: [{\r\n                type: Input\r\n            }], createConfirm: [{\r\n                type: Input\r\n            }], isNew: [{\r\n                type: Input\r\n            }], cell: [{\r\n                type: Input\r\n            }], inputClass: [{\r\n                type: Input\r\n            }], mode: [{\r\n                type: Input\r\n            }], isInEditing: [{\r\n                type: Input\r\n            }], edited: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nconst CELL_COMPONENTS = [\r\n    CellComponent,\r\n    EditCellDefault,\r\n    DefaultEditor,\r\n    CustomEditComponent,\r\n    DefaultEditComponent,\r\n    EditCellComponent,\r\n    CheckboxEditorComponent,\r\n    CompleterEditorComponent,\r\n    InputEditorComponent,\r\n    SelectEditorComponent,\r\n    TextareaEditorComponent,\r\n    CustomViewComponent,\r\n    ViewCellComponent,\r\n];\r\nclass CellModule {\r\n}\r\nCellModule.ɵfac = function CellModule_Factory(t) { return new (t || CellModule)(); };\r\nCellModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CellModule });\r\nCellModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            Ng2CompleterModule,\r\n        ]] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        Ng2CompleterModule,\r\n                    ],\r\n                    declarations: [\r\n                        ...CELL_COMPONENTS,\r\n                    ],\r\n                    exports: [\r\n                        ...CELL_COMPONENTS,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CellModule, { declarations: [CellComponent,\r\n            EditCellDefault,\r\n            DefaultEditor,\r\n            CustomEditComponent,\r\n            DefaultEditComponent,\r\n            EditCellComponent,\r\n            CheckboxEditorComponent,\r\n            CompleterEditorComponent,\r\n            InputEditorComponent,\r\n            SelectEditorComponent,\r\n            TextareaEditorComponent,\r\n            CustomViewComponent,\r\n            ViewCellComponent], imports: [CommonModule,\r\n            FormsModule,\r\n            Ng2CompleterModule], exports: [CellComponent,\r\n            EditCellDefault,\r\n            DefaultEditor,\r\n            CustomEditComponent,\r\n            DefaultEditComponent,\r\n            EditCellComponent,\r\n            CheckboxEditorComponent,\r\n            CompleterEditorComponent,\r\n            InputEditorComponent,\r\n            SelectEditorComponent,\r\n            TextareaEditorComponent,\r\n            CustomViewComponent,\r\n            ViewCellComponent] });\r\n})();\n\nclass FilterDefault {\r\n    constructor() {\r\n        this.inputClass = '';\r\n        this.filter = new EventEmitter();\r\n        this.query = '';\r\n    }\r\n    onFilter(query) {\r\n        this.source.addFilter({\r\n            field: this.column.id,\r\n            search: query,\r\n            filter: this.column.getFilterFunction(),\r\n        });\r\n    }\r\n}\r\nFilterDefault.ɵfac = function FilterDefault_Factory(t) { return new (t || FilterDefault)(); };\r\nFilterDefault.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FilterDefault, selectors: [[\"ng-component\"]], inputs: { column: \"column\", source: \"source\", inputClass: \"inputClass\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function FilterDefault_Template(rf, ctx) { }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterDefault, [{\r\n            type: Component,\r\n            args: [{\r\n                    template: '',\r\n                }]\r\n        }], null, { column: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], inputClass: [{\r\n                type: Input\r\n            }], filter: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nconst _c0$a = [\"dynamicTarget\"];\r\nfunction CustomFilterComponent_ng_template_0_Template(rf, ctx) { }\r\nclass CustomFilterComponent extends FilterDefault {\r\n    constructor(resolver) {\r\n        super();\r\n        this.resolver = resolver;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.column && !this.customComponent) {\r\n            const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\r\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n            // set @Inputs and @Outputs of custom component\r\n            this.customComponent.instance.query = this.query;\r\n            this.customComponent.instance.column = this.column;\r\n            this.customComponent.instance.source = this.source;\r\n            this.customComponent.instance.inputClass = this.inputClass;\r\n            this.customComponent.instance.filter.subscribe((event) => this.onFilter(event));\r\n        }\r\n        if (this.customComponent) {\r\n            this.customComponent.instance.ngOnChanges(changes);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.customComponent) {\r\n            this.customComponent.destroy();\r\n        }\r\n    }\r\n}\r\nCustomFilterComponent.ɵfac = function CustomFilterComponent_Factory(t) { return new (t || CustomFilterComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\r\nCustomFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomFilterComponent, selectors: [[\"custom-table-filter\"]], viewQuery: function CustomFilterComponent_Query(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵviewQuery(_c0$a, 7, ViewContainerRef);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\r\n        }\r\n    }, inputs: { query: \"query\" }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomFilterComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, CustomFilterComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\r\n        }\r\n    }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomFilterComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'custom-table-filter',\r\n                    template: `<ng-template #dynamicTarget></ng-template>`,\r\n                }]\r\n        }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { query: [{\r\n                type: Input\r\n            }], dynamicTarget: [{\r\n                type: ViewChild,\r\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\r\n            }] });\r\n})();\n\nclass DefaultFilter {\r\n    constructor() {\r\n        this.delay = 300;\r\n        this.filter = new EventEmitter();\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.changesSubscription) {\r\n            this.changesSubscription.unsubscribe();\r\n        }\r\n    }\r\n    setFilter() {\r\n        this.filter.emit(this.query);\r\n    }\r\n}\r\nDefaultFilter.ɵfac = function DefaultFilter_Factory(t) { return new (t || DefaultFilter)(); };\r\nDefaultFilter.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultFilter, selectors: [[\"ng-component\"]], inputs: { query: \"query\", inputClass: \"inputClass\", column: \"column\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function DefaultFilter_Template(rf, ctx) { }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilter, [{\r\n            type: Component,\r\n            args: [{\r\n                    template: '',\r\n                }]\r\n        }], null, { query: [{\r\n                type: Input\r\n            }], inputClass: [{\r\n                type: Input\r\n            }], column: [{\r\n                type: Input\r\n            }], filter: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nconst _c0$9 = [\"inputControl\"];\r\nfunction SelectFilterComponent_option_4_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"option\", 4);\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const option_r2 = ctx.$implicit;\r\n        i0.ɵɵproperty(\"value\", option_r2.value);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate1(\" \", option_r2.title, \" \");\r\n    }\r\n}\r\nclass SelectFilterComponent extends DefaultFilter {\r\n    constructor() {\r\n        super();\r\n    }\r\n    ngOnInit() {\r\n        this.inputControl.valueChanges\r\n            .pipe(skip(1), distinctUntilChanged(), debounceTime(this.delay))\r\n            .subscribe((value) => this.setFilter());\r\n    }\r\n}\r\nSelectFilterComponent.ɵfac = function SelectFilterComponent_Factory(t) { return new (t || SelectFilterComponent)(); };\r\nSelectFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectFilterComponent, selectors: [[\"select-filter\"]], viewQuery: function SelectFilterComponent_Query(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵviewQuery(_c0$9, 7, NgControl);\r\n        }\r\n        if (rf & 2) {\r\n            let _t;\r\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputControl = _t.first);\r\n        }\r\n    }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"inputControl\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function SelectFilterComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"select\", 0, 1);\r\n            i0.ɵɵlistener(\"ngModelChange\", function SelectFilterComponent_Template_select_ngModelChange_0_listener($event) { return ctx.query = $event; });\r\n            i0.ɵɵelementStart(2, \"option\", 2);\r\n            i0.ɵɵtext(3);\r\n            i0.ɵɵelementEnd();\r\n            i0.ɵɵtemplate(4, SelectFilterComponent_option_4_Template, 2, 2, \"option\", 3);\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.query);\r\n            i0.ɵɵadvance(3);\r\n            i0.ɵɵtextInterpolate(ctx.column.getFilterConfig().selectText);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngForOf\", ctx.column.getFilterConfig().list);\r\n        }\r\n    }, directives: [i1$1.SelectControlValueAccessor, i1.NgClass, i1$1.NgControlStatus, i1$1.NgModel, i1$1.NgSelectOption, i1$1.ɵNgSelectMultipleOption, i1.NgForOf], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectFilterComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'select-filter',\r\n                    template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            #inputControl\r\n            [(ngModel)]=\"query\">\r\n\r\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\r\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\r\n          {{ option.title }}\r\n        </option>\r\n    </select>\r\n  `,\r\n                }]\r\n        }], function () { return []; }, { inputControl: [{\r\n                type: ViewChild,\r\n                args: ['inputControl', { read: NgControl, static: true }]\r\n            }] });\r\n})();\n\nfunction CheckboxFilterComponent_a_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r2 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"a\", 2);\r\n        i0.ɵɵlistener(\"click\", function CheckboxFilterComponent_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return ctx_r1.resetFilter($event); });\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        let tmp_0_0;\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate(((tmp_0_0 = ctx_r0.column.getFilterConfig()) == null ? null : tmp_0_0.resetText) || \"reset\");\r\n    }\r\n}\r\nclass CheckboxFilterComponent extends DefaultFilter {\r\n    constructor() {\r\n        super();\r\n        this.filterActive = false;\r\n        this.inputControl = new FormControl();\r\n    }\r\n    ngOnInit() {\r\n        this.changesSubscription = this.inputControl.valueChanges\r\n            .pipe(debounceTime(this.delay))\r\n            .subscribe((checked) => {\r\n            this.filterActive = true;\r\n            const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\r\n            const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\r\n            this.query = checked ? trueVal : falseVal;\r\n            this.setFilter();\r\n        });\r\n    }\r\n    resetFilter(event) {\r\n        event.preventDefault();\r\n        this.query = '';\r\n        this.inputControl.setValue(false, { emitEvent: false });\r\n        this.filterActive = false;\r\n        this.setFilter();\r\n    }\r\n}\r\nCheckboxFilterComponent.ɵfac = function CheckboxFilterComponent_Factory(t) { return new (t || CheckboxFilterComponent)(); };\r\nCheckboxFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxFilterComponent, selectors: [[\"checkbox-filter\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 3, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 3, \"click\"]], template: function CheckboxFilterComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelement(0, \"input\", 0);\r\n            i0.ɵɵtemplate(1, CheckboxFilterComponent_a_1_Template, 2, 1, \"a\", 1);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"formControl\", ctx.inputControl)(\"ngClass\", ctx.inputClass);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.filterActive);\r\n        }\r\n    }, directives: [i1$1.CheckboxControlValueAccessor, i1$1.NgControlStatus, i1$1.FormControlDirective, i1.NgClass, i1.NgIf], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxFilterComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'checkbox-filter',\r\n                    template: `\r\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n    <a href=\"#\" *ngIf=\"filterActive\"\r\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\r\n  `,\r\n                }]\r\n        }], function () { return []; }, null);\r\n})();\n\nclass CompleterFilterComponent extends DefaultFilter {\r\n    constructor(completerService) {\r\n        super();\r\n        this.completerService = completerService;\r\n        this.completerContent = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        const config = this.column.getFilterConfig().completer;\r\n        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n        config.dataService.descriptionField(config.descriptionField);\r\n        this.changesSubscription = this.completerContent\r\n            .pipe(map((ev) => (ev && ev.title) || ev || ''), distinctUntilChanged(), debounceTime(this.delay))\r\n            .subscribe((search) => {\r\n            this.query = search;\r\n            this.setFilter();\r\n        });\r\n    }\r\n    inputTextChanged(event) {\r\n        // workaround to trigger the search event when the home/end buttons are clicked\r\n        // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\r\n        // so here it gets called manually\r\n        if (event === '') {\r\n            this.completerContent.next(event);\r\n        }\r\n    }\r\n}\r\nCompleterFilterComponent.ɵfac = function CompleterFilterComponent_Factory(t) { return new (t || CompleterFilterComponent)(i0.ɵɵdirectiveInject(i1$2.CompleterService)); };\r\nCompleterFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CompleterFilterComponent, selectors: [[\"completer-filter\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterFilterComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"ng2-completer\", 0);\r\n            i0.ɵɵlistener(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.query = $event; })(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.inputTextChanged($event); })(\"selected\", function CompleterFilterComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.completerContent.next($event); });\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngModel\", ctx.query)(\"dataService\", ctx.column.getFilterConfig().completer.dataService)(\"minSearchLength\", ctx.column.getFilterConfig().completer.minSearchLength || 0)(\"pause\", ctx.column.getFilterConfig().completer.pause || 0)(\"placeholder\", ctx.column.getFilterConfig().completer.placeholder || \"Start typing...\");\r\n        }\r\n    }, directives: [i1$2.CompleterCmp, i1$1.NgControlStatus, i1$1.NgModel], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterFilterComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'completer-filter',\r\n                    template: `\r\n    <ng2-completer [(ngModel)]=\"query\"\r\n                   (ngModelChange)=\"inputTextChanged($event)\"\r\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\r\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\r\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"completerContent.next($event)\">\r\n    </ng2-completer>\r\n  `,\r\n                }]\r\n        }], function () { return [{ type: i1$2.CompleterService }]; }, null);\r\n})();\n\nclass InputFilterComponent extends DefaultFilter {\r\n    constructor() {\r\n        super();\r\n        this.inputControl = new FormControl();\r\n    }\r\n    ngOnInit() {\r\n        if (this.query) {\r\n            this.inputControl.setValue(this.query);\r\n        }\r\n        this.inputControl.valueChanges\r\n            .pipe(distinctUntilChanged(), debounceTime(this.delay))\r\n            .subscribe((value) => {\r\n            this.query = this.inputControl.value;\r\n            this.setFilter();\r\n        });\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.query) {\r\n            this.inputControl.setValue(this.query);\r\n        }\r\n    }\r\n}\r\nInputFilterComponent.ɵfac = function InputFilterComponent_Factory(t) { return new (t || InputFilterComponent)(); };\r\nInputFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputFilterComponent, selectors: [[\"input-filter\"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 1, vars: 3, consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"formControl\", \"placeholder\"]], template: function InputFilterComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelement(0, \"input\", 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.column.title);\r\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"formControl\", ctx.inputControl);\r\n        }\r\n    }, directives: [i1$1.DefaultValueAccessor, i1.NgClass, i1$1.NgControlStatus, i1$1.FormControlDirective], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputFilterComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'input-filter',\r\n                    template: `\r\n    <input\r\n      [ngClass]=\"inputClass\"\r\n      [formControl]=\"inputControl\"\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      placeholder=\"{{ column.title }}\"/>\r\n  `,\r\n                }]\r\n        }], function () { return []; }, null);\r\n})();\n\nfunction DefaultFilterComponent_select_filter_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r5 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"select-filter\", 3);\r\n        i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_select_filter_1_Template_select_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onFilter($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"query\", ctx_r0.query)(\"ngClass\", ctx_r0.inputClass)(\"column\", ctx_r0.column);\r\n    }\r\n}\r\nfunction DefaultFilterComponent_checkbox_filter_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r7 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"checkbox-filter\", 3);\r\n        i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_checkbox_filter_2_Template_checkbox_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.onFilter($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"query\", ctx_r1.query)(\"ngClass\", ctx_r1.inputClass)(\"column\", ctx_r1.column);\r\n    }\r\n}\r\nfunction DefaultFilterComponent_completer_filter_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r9 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"completer-filter\", 3);\r\n        i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_completer_filter_3_Template_completer_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.onFilter($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r2 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"query\", ctx_r2.query)(\"ngClass\", ctx_r2.inputClass)(\"column\", ctx_r2.column);\r\n    }\r\n}\r\nfunction DefaultFilterComponent_input_filter_4_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r11 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"input-filter\", 3);\r\n        i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_input_filter_4_Template_input_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r11); const ctx_r10 = i0.ɵɵnextContext(); return ctx_r10.onFilter($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r3 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"query\", ctx_r3.query)(\"ngClass\", ctx_r3.inputClass)(\"column\", ctx_r3.column);\r\n    }\r\n}\r\nclass DefaultFilterComponent extends FilterDefault {\r\n}\r\nDefaultFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵDefaultFilterComponent_BaseFactory; return function DefaultFilterComponent_Factory(t) { return (ɵDefaultFilterComponent_BaseFactory || (ɵDefaultFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultFilterComponent)))(t || DefaultFilterComponent); }; }();\r\nDefaultFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultFilterComponent, selectors: [[\"default-table-filter\"]], inputs: { query: \"query\" }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[3, \"ngSwitch\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"ngClass\", \"column\", \"filter\"]], template: function DefaultFilterComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementContainerStart(0, 0);\r\n            i0.ɵɵtemplate(1, DefaultFilterComponent_select_filter_1_Template, 1, 3, \"select-filter\", 1);\r\n            i0.ɵɵtemplate(2, DefaultFilterComponent_checkbox_filter_2_Template, 1, 3, \"checkbox-filter\", 1);\r\n            i0.ɵɵtemplate(3, DefaultFilterComponent_completer_filter_3_Template, 1, 3, \"completer-filter\", 1);\r\n            i0.ɵɵtemplate(4, DefaultFilterComponent_input_filter_4_Template, 1, 3, \"input-filter\", 2);\r\n            i0.ɵɵelementContainerEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngSwitch\", ctx.column.getFilterType());\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\r\n        }\r\n    }, directives: [i1.NgSwitch, i1.NgSwitchCase, SelectFilterComponent, i1.NgClass, CheckboxFilterComponent, CompleterFilterComponent, i1.NgSwitchDefault, InputFilterComponent], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilterComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'default-table-filter',\r\n                    template: `\r\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\r\n      <select-filter *ngSwitchCase=\"'list'\"\r\n                     [query]=\"query\"\r\n                     [ngClass]=\"inputClass\"\r\n                     [column]=\"column\"\r\n                     (filter)=\"onFilter($event)\">\r\n      </select-filter>\r\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\r\n                       [query]=\"query\"\r\n                       [ngClass]=\"inputClass\"\r\n                       [column]=\"column\"\r\n                       (filter)=\"onFilter($event)\">\r\n      </checkbox-filter>\r\n      <completer-filter *ngSwitchCase=\"'completer'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </completer-filter>\r\n      <input-filter *ngSwitchDefault\r\n                    [query]=\"query\"\r\n                    [ngClass]=\"inputClass\"\r\n                    [column]=\"column\"\r\n                    (filter)=\"onFilter($event)\">\r\n      </input-filter>\r\n    </ng-container>\r\n  `,\r\n                }]\r\n        }], null, { query: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nfunction FilterComponent_div_0_custom_table_filter_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r4 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"custom-table-filter\", 4);\r\n        i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_custom_table_filter_1_Template_custom_table_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(2); return ctx_r3.onFilter($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext(2);\r\n        i0.ɵɵproperty(\"query\", ctx_r1.query)(\"column\", ctx_r1.column)(\"source\", ctx_r1.source)(\"inputClass\", ctx_r1.inputClass);\r\n    }\r\n}\r\nfunction FilterComponent_div_0_default_table_filter_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r6 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"default-table-filter\", 4);\r\n        i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_default_table_filter_2_Template_default_table_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(2); return ctx_r5.onFilter($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r2 = i0.ɵɵnextContext(2);\r\n        i0.ɵɵproperty(\"query\", ctx_r2.query)(\"column\", ctx_r2.column)(\"source\", ctx_r2.source)(\"inputClass\", ctx_r2.inputClass);\r\n    }\r\n}\r\nfunction FilterComponent_div_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 1);\r\n        i0.ɵɵtemplate(1, FilterComponent_div_0_custom_table_filter_1_Template, 1, 4, \"custom-table-filter\", 2);\r\n        i0.ɵɵtemplate(2, FilterComponent_div_0_default_table_filter_2_Template, 1, 4, \"default-table-filter\", 3);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"ngSwitch\", ctx_r0.column.getFilterType());\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\r\n    }\r\n}\r\nclass FilterComponent extends FilterDefault {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.query = '';\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.source) {\r\n            if (!changes.source.firstChange) {\r\n                this.dataChangedSub.unsubscribe();\r\n            }\r\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n                const filterConf = this.source.getFilter();\r\n                if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\r\n                    this.query = '';\r\n                    // add a check for existing filters an set the query if one exists for this column\r\n                    // this covers instances where the filter is set by user code while maintaining existing functionality\r\n                }\r\n                else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\r\n                    filterConf.filters.forEach((k, v) => {\r\n                        if (k.field == this.column.id) {\r\n                            this.query = k.search;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵFilterComponent_BaseFactory; return function FilterComponent_Factory(t) { return (ɵFilterComponent_BaseFactory || (ɵFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FilterComponent)))(t || FilterComponent); }; }();\r\nFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FilterComponent, selectors: [[\"ng2-smart-table-filter\"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"class\", \"ng2-smart-filter\", 3, \"ngSwitch\", 4, \"ngIf\"], [1, \"ng2-smart-filter\", 3, \"ngSwitch\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\"]], template: function FilterComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, FilterComponent_div_0_Template, 3, 2, \"div\", 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", ctx.column.isFilterable);\r\n        }\r\n    }, directives: [i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, CustomFilterComponent, i1.NgSwitchDefault, DefaultFilterComponent], styles: [\"[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     input, [_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     input[type=search]{box-sizing:inherit}[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     .completer-dropdown-holder{font-weight:400}[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     a{font-weight:400}\"] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'ng2-smart-table-filter', template: `\r\n      <div class=\"ng2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\r\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\r\n                             [query]=\"query\"\r\n                             [column]=\"column\"\r\n                             [source]=\"source\"\r\n                             [inputClass]=\"inputClass\"\r\n                             (filter)=\"onFilter($event)\">\r\n        </custom-table-filter>\r\n        <default-table-filter *ngSwitchDefault\r\n                              [query]=\"query\"\r\n                              [column]=\"column\"\r\n                              [source]=\"source\"\r\n                              [inputClass]=\"inputClass\"\r\n                              (filter)=\"onFilter($event)\">\r\n        </default-table-filter>\r\n      </div>\r\n    `, styles: [\":host .ng2-smart-filter ::ng-deep input,:host .ng2-smart-filter ::ng-deep select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}:host .ng2-smart-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .ng2-smart-filter ::ng-deep .completer-dropdown-holder{font-weight:400}:host .ng2-smart-filter ::ng-deep a{font-weight:400}\\n\"] }]\r\n        }], null, null);\r\n})();\n\nconst FILTER_COMPONENTS = [\r\n    FilterDefault,\r\n    DefaultFilter,\r\n    FilterComponent,\r\n    DefaultFilterComponent,\r\n    CustomFilterComponent,\r\n    CheckboxFilterComponent,\r\n    CompleterFilterComponent,\r\n    InputFilterComponent,\r\n    SelectFilterComponent,\r\n];\r\nclass FilterModule {\r\n}\r\nFilterModule.ɵfac = function FilterModule_Factory(t) { return new (t || FilterModule)(); };\r\nFilterModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FilterModule });\r\nFilterModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            ReactiveFormsModule,\r\n            Ng2CompleterModule,\r\n        ]] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        Ng2CompleterModule,\r\n                    ],\r\n                    declarations: [\r\n                        ...FILTER_COMPONENTS,\r\n                    ],\r\n                    exports: [\r\n                        ...FILTER_COMPONENTS,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FilterModule, { declarations: [FilterDefault,\r\n            DefaultFilter,\r\n            FilterComponent,\r\n            DefaultFilterComponent,\r\n            CustomFilterComponent,\r\n            CheckboxFilterComponent,\r\n            CompleterFilterComponent,\r\n            InputFilterComponent,\r\n            SelectFilterComponent], imports: [CommonModule,\r\n            FormsModule,\r\n            ReactiveFormsModule,\r\n            Ng2CompleterModule], exports: [FilterDefault,\r\n            DefaultFilter,\r\n            FilterComponent,\r\n            DefaultFilterComponent,\r\n            CustomFilterComponent,\r\n            CheckboxFilterComponent,\r\n            CompleterFilterComponent,\r\n            InputFilterComponent,\r\n            SelectFilterComponent] });\r\n})();\n\nfunction PagerComponent_nav_0_li_14_span_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"span\", 14);\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementStart(2, \"span\", 7);\r\n        i0.ɵɵtext(3, \"(current)\");\r\n        i0.ɵɵelementEnd()();\r\n    }\r\n    if (rf & 2) {\r\n        const page_r3 = i0.ɵɵnextContext().$implicit;\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate1(\"\", page_r3, \" \");\r\n    }\r\n}\r\nfunction PagerComponent_nav_0_li_14_a_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r9 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"a\", 15);\r\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_li_14_a_2_Template_a_click_0_listener() { i0.ɵɵrestoreView(_r9); const page_r3 = i0.ɵɵnextContext().$implicit; const ctx_r7 = i0.ɵɵnextContext(2); return ctx_r7.paginate(page_r3); });\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const page_r3 = i0.ɵɵnextContext().$implicit;\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate(page_r3);\r\n    }\r\n}\r\nconst _c0$8 = function (a0) { return { active: a0 }; };\r\nfunction PagerComponent_nav_0_li_14_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"li\", 4);\r\n        i0.ɵɵtemplate(1, PagerComponent_nav_0_li_14_span_1_Template, 4, 1, \"span\", 12);\r\n        i0.ɵɵtemplate(2, PagerComponent_nav_0_li_14_a_2_Template, 2, 1, \"a\", 13);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const page_r3 = ctx.$implicit;\r\n        const ctx_r2 = i0.ɵɵnextContext(2);\r\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0$8, ctx_r2.getPage() == page_r3));\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() == page_r3);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() != page_r3);\r\n    }\r\n}\r\nconst _c1$1 = function (a0) { return { disabled: a0 }; };\r\nfunction PagerComponent_nav_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r12 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"nav\", 2)(1, \"ul\", 3)(2, \"li\", 4)(3, \"a\", 5);\r\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_3_listener() { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.getPage() == 1 ? false : ctx_r11.paginate(1); });\r\n        i0.ɵɵelementStart(4, \"span\", 6);\r\n        i0.ɵɵtext(5, \"\\u00AB\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(6, \"span\", 7);\r\n        i0.ɵɵtext(7, \"First\");\r\n        i0.ɵɵelementEnd()()();\r\n        i0.ɵɵelementStart(8, \"li\", 4)(9, \"a\", 8);\r\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_9_listener() { i0.ɵɵrestoreView(_r12); const ctx_r13 = i0.ɵɵnextContext(); return ctx_r13.getPage() == 1 ? false : ctx_r13.prev(); });\r\n        i0.ɵɵelementStart(10, \"span\", 6);\r\n        i0.ɵɵtext(11, \"<\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(12, \"span\", 7);\r\n        i0.ɵɵtext(13, \"Prev\");\r\n        i0.ɵɵelementEnd()()();\r\n        i0.ɵɵtemplate(14, PagerComponent_nav_0_li_14_Template, 3, 5, \"li\", 9);\r\n        i0.ɵɵelementStart(15, \"li\", 4)(16, \"a\", 10);\r\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_16_listener() { i0.ɵɵrestoreView(_r12); const ctx_r14 = i0.ɵɵnextContext(); return ctx_r14.getPage() == ctx_r14.getLast() ? false : ctx_r14.next(); });\r\n        i0.ɵɵelementStart(17, \"span\", 6);\r\n        i0.ɵɵtext(18, \">\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(19, \"span\", 7);\r\n        i0.ɵɵtext(20, \"Next\");\r\n        i0.ɵɵelementEnd()()();\r\n        i0.ɵɵelementStart(21, \"li\", 4)(22, \"a\", 11);\r\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_22_listener() { i0.ɵɵrestoreView(_r12); const ctx_r15 = i0.ɵɵnextContext(); return ctx_r15.getPage() == ctx_r15.getLast() ? false : ctx_r15.paginate(ctx_r15.getLast()); });\r\n        i0.ɵɵelementStart(23, \"span\", 6);\r\n        i0.ɵɵtext(24, \"\\u00BB\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(25, \"span\", 7);\r\n        i0.ɵɵtext(26, \"Last\");\r\n        i0.ɵɵelementEnd()()()()();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1$1, ctx_r0.getPage() == 1));\r\n        i0.ɵɵadvance(6);\r\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1$1, ctx_r0.getPage() == 1));\r\n        i0.ɵɵadvance(6);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx_r0.getPages());\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1$1, ctx_r0.getPage() == ctx_r0.getLast()));\r\n        i0.ɵɵadvance(6);\r\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c1$1, ctx_r0.getPage() == ctx_r0.getLast()));\r\n    }\r\n}\r\nfunction PagerComponent_nav_1_option_4_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"option\", 20);\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const item_r17 = ctx.$implicit;\r\n        i0.ɵɵproperty(\"value\", item_r17);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate(item_r17);\r\n    }\r\n}\r\nfunction PagerComponent_nav_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r19 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"nav\", 16)(1, \"label\", 17);\r\n        i0.ɵɵtext(2, \" Per Page: \");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(3, \"select\", 18);\r\n        i0.ɵɵlistener(\"change\", function PagerComponent_nav_1_Template_select_change_3_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(); return ctx_r18.onChangePerPage($event); })(\"ngModelChange\", function PagerComponent_nav_1_Template_select_ngModelChange_3_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r20 = i0.ɵɵnextContext(); return ctx_r20.currentPerPage = $event; });\r\n        i0.ɵɵtemplate(4, PagerComponent_nav_1_option_4_Template, 2, 2, \"option\", 19);\r\n        i0.ɵɵelementEnd()();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(3);\r\n        i0.ɵɵproperty(\"ngModel\", ctx_r1.currentPerPage);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx_r1.perPageSelect);\r\n    }\r\n}\r\nclass PagerComponent {\r\n    constructor() {\r\n        this.perPageSelect = [];\r\n        this.changePage = new EventEmitter();\r\n        this.count = 0;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.source) {\r\n            if (!changes.source.firstChange) {\r\n                this.dataChangedSub.unsubscribe();\r\n            }\r\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n                this.page = this.source.getPaging().page;\r\n                this.perPage = this.source.getPaging().perPage;\r\n                this.currentPerPage = this.perPage;\r\n                this.count = this.source.count();\r\n                if (this.isPageOutOfBounce()) {\r\n                    this.source.setPage(--this.page);\r\n                }\r\n                this.processPageChange(dataChanges);\r\n                this.initPages();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * We change the page here depending on the action performed against data source\r\n     * if a new element was added to the end of the table - then change the page to the last\r\n     * if a new element was added to the beginning of the table - then to the first page\r\n     * @param changes\r\n     */\r\n    processPageChange(changes) {\r\n        if (changes['action'] === 'prepend') {\r\n            this.source.setPage(1);\r\n        }\r\n        if (changes['action'] === 'append') {\r\n            this.source.setPage(this.getLast());\r\n        }\r\n    }\r\n    shouldShow() {\r\n        return this.source.count() > this.perPage;\r\n    }\r\n    paginate(page) {\r\n        this.source.setPage(page);\r\n        this.page = page;\r\n        this.changePage.emit({ page });\r\n        return false;\r\n    }\r\n    next() {\r\n        return this.paginate(this.getPage() + 1);\r\n    }\r\n    prev() {\r\n        return this.paginate(this.getPage() - 1);\r\n    }\r\n    getPage() {\r\n        return this.page;\r\n    }\r\n    getPages() {\r\n        return this.pages;\r\n    }\r\n    getLast() {\r\n        return Math.ceil(this.count / this.perPage);\r\n    }\r\n    isPageOutOfBounce() {\r\n        return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\r\n    }\r\n    initPages() {\r\n        const pagesCount = this.getLast();\r\n        let showPagesCount = 4;\r\n        showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\r\n        this.pages = [];\r\n        if (this.shouldShow()) {\r\n            let middleOne = Math.ceil(showPagesCount / 2);\r\n            middleOne = this.page >= middleOne ? this.page : middleOne;\r\n            let lastOne = middleOne + Math.floor(showPagesCount / 2);\r\n            lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\r\n            const firstOne = lastOne - showPagesCount + 1;\r\n            for (let i = firstOne; i <= lastOne; i++) {\r\n                this.pages.push(i);\r\n            }\r\n        }\r\n    }\r\n    onChangePerPage(event) {\r\n        if (this.currentPerPage) {\r\n            if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\r\n                this.source.getPaging().perPage = null;\r\n            }\r\n            else {\r\n                this.source.getPaging().perPage = this.currentPerPage * 1;\r\n                this.source.refresh();\r\n            }\r\n            this.initPages();\r\n        }\r\n    }\r\n}\r\nPagerComponent.ɵfac = function PagerComponent_Factory(t) { return new (t || PagerComponent)(); };\r\nPagerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PagerComponent, selectors: [[\"ng2-smart-table-pager\"]], inputs: { source: \"source\", perPageSelect: \"perPageSelect\" }, outputs: { changePage: \"changePage\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"class\", \"ng2-smart-pagination-nav\", 4, \"ngIf\"], [\"class\", \"ng2-smart-pagination-per-page\", 4, \"ngIf\"], [1, \"ng2-smart-pagination-nav\"], [1, \"ng2-smart-pagination\", \"pagination\"], [1, \"ng2-smart-page-item\", \"page-item\", 3, \"ngClass\"], [\"href\", \"#\", \"aria-label\", \"First\", 1, \"ng2-smart-page-link\", \"page-link\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"href\", \"#\", \"aria-label\", \"Prev\", 1, \"ng2-smart-page-link\", \"page-link\", \"page-link-prev\", 3, \"click\"], [\"class\", \"ng2-smart-page-item page-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"aria-label\", \"Next\", 1, \"ng2-smart-page-link\", \"page-link\", \"page-link-next\", 3, \"click\"], [\"href\", \"#\", \"aria-label\", \"Last\", 1, \"ng2-smart-page-link\", \"page-link\", 3, \"click\"], [\"class\", \"ng2-smart-page-link page-link\", 4, \"ngIf\"], [\"class\", \"ng2-smart-page-link page-link\", \"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [1, \"ng2-smart-page-link\", \"page-link\"], [\"href\", \"#\", 1, \"ng2-smart-page-link\", \"page-link\", 3, \"click\"], [1, \"ng2-smart-pagination-per-page\"], [\"for\", \"per-page\"], [\"id\", \"per-page\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function PagerComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, PagerComponent_nav_0_Template, 27, 13, \"nav\", 0);\r\n            i0.ɵɵtemplate(1, PagerComponent_nav_1_Template, 5, 2, \"nav\", 1);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", ctx.shouldShow());\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.perPageSelect && ctx.perPageSelect.length > 0);\r\n        }\r\n    }, directives: [i1.NgIf, i1.NgClass, i1.NgForOf, i1$1.SelectControlValueAccessor, i1$1.NgControlStatus, i1$1.NgModel, i1$1.NgSelectOption, i1$1.ɵNgSelectMultipleOption], styles: [\".ng2-smart-pagination[_ngcontent-%COMP%]{display:inline-flex;font-size:.875em;padding:0}.ng2-smart-pagination[_ngcontent-%COMP%]   .sr-only[_ngcontent-%COMP%]{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.ng2-smart-pagination[_ngcontent-%COMP%]   .ng2-smart-page-item[_ngcontent-%COMP%]{display:inline}.ng2-smart-pagination[_ngcontent-%COMP%]   .page-link-next[_ngcontent-%COMP%], .ng2-smart-pagination[_ngcontent-%COMP%]   .page-link-prev[_ngcontent-%COMP%]{font-size:10px}[_nghost-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   select[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem;line-height:2.5rem}\"] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'ng2-smart-table-pager', template: `\r\n    <nav *ngIf=\"shouldShow()\" class=\"ng2-smart-pagination-nav\">\r\n      <ul class=\"ng2-smart-pagination pagination\">\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span class=\"sr-only\">First</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link page-link-prev\" href=\"#\"\r\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\r\n            <span aria-hidden=\"true\">&lt;</span>\r\n            <span class=\"sr-only\">Prev</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\r\n          <span class=\"ng2-smart-page-link page-link\"\r\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\r\n        </li>\r\n\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link page-link-next\" href=\"#\"\r\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\r\n            <span aria-hidden=\"true\">&gt;</span>\r\n            <span class=\"sr-only\">Next</span>\r\n          </a>\r\n        </li>\r\n        \r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span class=\"sr-only\">Last</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    \r\n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"ng2-smart-pagination-per-page\">\r\n      <label for=\"per-page\">\r\n        Per Page:\r\n      </label>\r\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\r\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\r\n      </select>\r\n    </nav>\r\n  `, styles: [\".ng2-smart-pagination{display:inline-flex;font-size:.875em;padding:0}.ng2-smart-pagination .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.ng2-smart-pagination .ng2-smart-page-item{display:inline}.ng2-smart-pagination .page-link-next,.ng2-smart-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host select{margin:1rem 0 1rem 1rem}:host label{margin:1rem 0 1rem 1rem;line-height:2.5rem}\\n\"] }]\r\n        }], null, { source: [{\r\n                type: Input\r\n            }], perPageSelect: [{\r\n                type: Input\r\n            }], changePage: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nclass PagerModule {\r\n}\r\nPagerModule.ɵfac = function PagerModule_Factory(t) { return new (t || PagerModule)(); };\r\nPagerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PagerModule });\r\nPagerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n        ]] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                    ],\r\n                    declarations: [\r\n                        PagerComponent,\r\n                    ],\r\n                    exports: [\r\n                        PagerComponent,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PagerModule, { declarations: [PagerComponent], imports: [CommonModule,\r\n            FormsModule], exports: [PagerComponent] });\r\n})();\n\nfunction TbodyCustomComponent_a_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r3 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"a\", 1);\r\n        i0.ɵɵlistener(\"click\", function TbodyCustomComponent_a_0_Template_a_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r3); const action_r1 = restoredCtx.$implicit; const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.onCustom(action_r1, $event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const action_r1 = ctx.$implicit;\r\n        i0.ɵɵproperty(\"innerHTML\", action_r1.title, i0.ɵɵsanitizeHtml);\r\n    }\r\n}\r\nclass TbodyCustomComponent {\r\n    constructor() {\r\n        this.custom = new EventEmitter();\r\n    }\r\n    onCustom(action, event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.custom.emit({\r\n            action: action.name,\r\n            data: this.row.getData(),\r\n            source: this.source\r\n        });\r\n    }\r\n}\r\nTbodyCustomComponent.ɵfac = function TbodyCustomComponent_Factory(t) { return new (t || TbodyCustomComponent)(); };\r\nTbodyCustomComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyCustomComponent, selectors: [[\"ng2-st-tbody-custom\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\" }, outputs: { custom: \"custom\" }, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-custom-custom\", 3, \"innerHTML\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-custom-custom\", 3, \"innerHTML\", \"click\"]], template: function TbodyCustomComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, TbodyCustomComponent_a_0_Template, 1, 1, \"a\", 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngForOf\", ctx.grid.getSetting(\"actions.custom\"));\r\n        }\r\n    }, directives: [i1.NgForOf], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCustomComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'ng2-st-tbody-custom',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    template: `\r\n      <a *ngFor=\"let action of grid.getSetting('actions.custom')\" href=\"#\"\r\n         class=\"ng2-smart-action ng2-smart-action-custom-custom\" \r\n         [innerHTML]=\"action.title\"\r\n         (click)=\"onCustom(action, $event)\"></a>\r\n        `\r\n                }]\r\n        }], null, { grid: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], custom: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nfunction TbodyEditDeleteComponent_a_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r3 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"a\", 2);\r\n        i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.onEdit($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"innerHTML\", ctx_r0.editRowButtonContent, i0.ɵɵsanitizeHtml);\r\n    }\r\n}\r\nfunction TbodyEditDeleteComponent_a_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r5 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"a\", 3);\r\n        i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onDelete($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"innerHTML\", ctx_r1.deleteRowButtonContent, i0.ɵɵsanitizeHtml);\r\n    }\r\n}\r\nclass TbodyEditDeleteComponent {\r\n    constructor() {\r\n        this.edit = new EventEmitter();\r\n        this.delete = new EventEmitter();\r\n        this.editRowSelect = new EventEmitter();\r\n    }\r\n    onEdit(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.editRowSelect.emit(this.row);\r\n        if (this.grid.getSetting('mode') === 'external') {\r\n            this.edit.emit({\r\n                data: this.row.getData(),\r\n                source: this.source,\r\n            });\r\n        }\r\n        else {\r\n            this.grid.edit(this.row);\r\n        }\r\n    }\r\n    onDelete(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (this.grid.getSetting('mode') === 'external') {\r\n            this.delete.emit({\r\n                data: this.row.getData(),\r\n                source: this.source,\r\n            });\r\n        }\r\n        else {\r\n            this.grid.delete(this.row, this.deleteConfirm);\r\n        }\r\n    }\r\n    ngOnChanges() {\r\n        this.isActionEdit = this.grid.getSetting('actions.edit');\r\n        this.isActionDelete = this.grid.getSetting('actions.delete');\r\n        this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\r\n        this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\r\n    }\r\n}\r\nTbodyEditDeleteComponent.ɵfac = function TbodyEditDeleteComponent_Factory(t) { return new (t || TbodyEditDeleteComponent)(); };\r\nTbodyEditDeleteComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyEditDeleteComponent, selectors: [[\"ng2-st-tbody-edit-delete\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\" }, outputs: { edit: \"edit\", delete: \"delete\", editRowSelect: \"editRowSelect\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-edit-edit\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-delete-delete\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-edit-edit\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-delete-delete\", 3, \"innerHTML\", \"click\"]], template: function TbodyEditDeleteComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, TbodyEditDeleteComponent_a_0_Template, 1, 1, \"a\", 0);\r\n            i0.ɵɵtemplate(1, TbodyEditDeleteComponent_a_1_Template, 1, 1, \"a\", 1);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", ctx.isActionEdit);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.isActionDelete);\r\n        }\r\n    }, directives: [i1.NgIf], encapsulation: 2, changeDetection: 0 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyEditDeleteComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'ng2-st-tbody-edit-delete',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    template: `\r\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"ng2-smart-action ng2-smart-action-edit-edit\"\r\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\r\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"ng2-smart-action ng2-smart-action-delete-delete\"\r\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\r\n  `,\r\n                }]\r\n        }], null, { grid: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], deleteConfirm: [{\r\n                type: Input\r\n            }], editConfirm: [{\r\n                type: Input\r\n            }], edit: [{\r\n                type: Output\r\n            }], delete: [{\r\n                type: Output\r\n            }], editRowSelect: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nclass TbodyCreateCancelComponent {\r\n    onSave(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.grid.save(this.row, this.editConfirm);\r\n    }\r\n    onCancelEdit(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.row.isInEditing = false;\r\n    }\r\n    ngOnChanges() {\r\n        this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\r\n        this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent');\r\n    }\r\n}\r\nTbodyCreateCancelComponent.ɵfac = function TbodyCreateCancelComponent_Factory(t) { return new (t || TbodyCreateCancelComponent)(); };\r\nTbodyCreateCancelComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyCreateCancelComponent, selectors: [[\"ng2-st-tbody-create-cancel\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-edit-save\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-edit-cancel\", 3, \"innerHTML\", \"click\"]], template: function TbodyCreateCancelComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"a\", 0);\r\n            i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_0_listener($event) { return ctx.onSave($event); });\r\n            i0.ɵɵelementEnd();\r\n            i0.ɵɵelementStart(1, \"a\", 1);\r\n            i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_1_listener($event) { return ctx.onCancelEdit($event); });\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"innerHTML\", ctx.saveButtonContent, i0.ɵɵsanitizeHtml);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\r\n        }\r\n    }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCreateCancelComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'ng2-st-tbody-create-cancel',\r\n                    template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-save\"\r\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\r\n  `,\r\n                }]\r\n        }], null, { grid: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], editConfirm: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nconst _c0$7 = [\"ng2-st-tbody\", \"\"];\r\nfunction Ng2SmartTableTbodyComponent_tr_0_td_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r11 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"td\", 6);\r\n        i0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_td_1_Template_td_click_0_listener() { i0.ɵɵrestoreView(_r11); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.multipleSelectRow.emit(row_r2); });\r\n        i0.ɵɵelement(1, \"input\", 7);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const row_r2 = i0.ɵɵnextContext().$implicit;\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngModel\", row_r2.isSelected);\r\n    }\r\n}\r\nfunction Ng2SmartTableTbodyComponent_tr_0_td_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r14 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"td\", 8)(1, \"ng2-st-tbody-custom\", 9);\r\n        i0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_custom_custom_1_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(2); return ctx_r13.custom.emit($event); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"ng2-st-tbody-edit-delete\", 10);\r\n        i0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_edit_delete_edit_2_listener() { i0.ɵɵrestoreView(_r14); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r15 = i0.ɵɵnextContext(); return ctx_r15.edit.emit(row_r2); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_edit_delete_delete_2_listener() { i0.ɵɵrestoreView(_r14); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r17 = i0.ɵɵnextContext(); return ctx_r17.delete.emit(row_r2); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_edit_delete_editRowSelect_2_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r19 = i0.ɵɵnextContext(2); return ctx_r19.editRowSelect.emit($event); });\r\n        i0.ɵɵelementEnd()();\r\n    }\r\n    if (rf & 2) {\r\n        const row_r2 = i0.ɵɵnextContext().$implicit;\r\n        const ctx_r4 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"row\", row_r2)(\"source\", ctx_r4.source);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"deleteConfirm\", ctx_r4.deleteConfirm)(\"editConfirm\", ctx_r4.editConfirm)(\"row\", row_r2)(\"source\", ctx_r4.source);\r\n    }\r\n}\r\nfunction Ng2SmartTableTbodyComponent_tr_0_td_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"td\", 8);\r\n        i0.ɵɵelement(1, \"ng2-st-tbody-create-cancel\", 11);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const row_r2 = i0.ɵɵnextContext().$implicit;\r\n        const ctx_r5 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"grid\", ctx_r5.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r5.editConfirm);\r\n    }\r\n}\r\nfunction Ng2SmartTableTbodyComponent_tr_0_td_4_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"td\");\r\n        i0.ɵɵelement(1, \"ng2-smart-table-cell\", 12);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const cell_r22 = ctx.$implicit;\r\n        const row_r2 = i0.ɵɵnextContext().$implicit;\r\n        const ctx_r6 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"cell\", cell_r22)(\"grid\", ctx_r6.grid)(\"row\", row_r2)(\"isNew\", false)(\"mode\", ctx_r6.mode)(\"editConfirm\", ctx_r6.editConfirm)(\"inputClass\", ctx_r6.editInputClass)(\"isInEditing\", row_r2.isInEditing);\r\n    }\r\n}\r\nfunction Ng2SmartTableTbodyComponent_tr_0_td_5_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"td\", 8);\r\n        i0.ɵɵelement(1, \"ng2-st-tbody-create-cancel\", 11);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const row_r2 = i0.ɵɵnextContext().$implicit;\r\n        const ctx_r7 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"grid\", ctx_r7.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r7.editConfirm);\r\n    }\r\n}\r\nfunction Ng2SmartTableTbodyComponent_tr_0_td_6_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r26 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"td\", 8)(1, \"ng2-st-tbody-custom\", 9);\r\n        i0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_custom_custom_1_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r25 = i0.ɵɵnextContext(2); return ctx_r25.custom.emit($event); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"ng2-st-tbody-edit-delete\", 10);\r\n        i0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_edit_delete_edit_2_listener() { i0.ɵɵrestoreView(_r26); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r27 = i0.ɵɵnextContext(); return ctx_r27.edit.emit(row_r2); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_edit_delete_delete_2_listener() { i0.ɵɵrestoreView(_r26); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r29 = i0.ɵɵnextContext(); return ctx_r29.delete.emit(row_r2); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_edit_delete_editRowSelect_2_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r31 = i0.ɵɵnextContext(2); return ctx_r31.editRowSelect.emit($event); });\r\n        i0.ɵɵelementEnd()();\r\n    }\r\n    if (rf & 2) {\r\n        const row_r2 = i0.ɵɵnextContext().$implicit;\r\n        const ctx_r8 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"row\", row_r2)(\"source\", ctx_r8.source);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"deleteConfirm\", ctx_r8.deleteConfirm)(\"editConfirm\", ctx_r8.editConfirm)(\"row\", row_r2)(\"source\", ctx_r8.source);\r\n    }\r\n}\r\nconst _c1 = function (a0) { return { selected: a0 }; };\r\nfunction Ng2SmartTableTbodyComponent_tr_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r34 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"tr\", 2);\r\n        i0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r33 = i0.ɵɵnextContext(); return ctx_r33.userSelectRow.emit(row_r2); })(\"mouseover\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_mouseover_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r35 = i0.ɵɵnextContext(); return ctx_r35.rowHover.emit(row_r2); });\r\n        i0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_0_td_1_Template, 2, 1, \"td\", 3);\r\n        i0.ɵɵtemplate(2, Ng2SmartTableTbodyComponent_tr_0_td_2_Template, 3, 8, \"td\", 4);\r\n        i0.ɵɵtemplate(3, Ng2SmartTableTbodyComponent_tr_0_td_3_Template, 2, 3, \"td\", 4);\r\n        i0.ɵɵtemplate(4, Ng2SmartTableTbodyComponent_tr_0_td_4_Template, 2, 8, \"td\", 5);\r\n        i0.ɵɵtemplate(5, Ng2SmartTableTbodyComponent_tr_0_td_5_Template, 2, 3, \"td\", 4);\r\n        i0.ɵɵtemplate(6, Ng2SmartTableTbodyComponent_tr_0_td_6_Template, 3, 8, \"td\", 4);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const row_r2 = ctx.$implicit;\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"className\", ctx_r0.rowClassFunction(row_r2))(\"ngClass\", i0.ɵɵpureFunction1(8, _c1, row_r2.isSelected));\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiSelectVisible);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnLeft);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnLeft);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx_r0.getVisibleCells(row_r2.cells));\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnRight);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnRight);\r\n    }\r\n}\r\nfunction Ng2SmartTableTbodyComponent_tr_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\r\n        i0.ɵɵtext(2);\r\n        i0.ɵɵelementEnd()();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵattribute(\"colspan\", ctx_r1.tableColumnsCount);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate1(\" \", ctx_r1.noDataMessage, \" \");\r\n    }\r\n}\r\nclass Ng2SmartTableTbodyComponent {\r\n    constructor() {\r\n        this.save = new EventEmitter();\r\n        this.cancel = new EventEmitter();\r\n        this.edit = new EventEmitter();\r\n        this.delete = new EventEmitter();\r\n        this.custom = new EventEmitter();\r\n        this.edited = new EventEmitter();\r\n        this.userSelectRow = new EventEmitter();\r\n        this.editRowSelect = new EventEmitter();\r\n        this.multipleSelectRow = new EventEmitter();\r\n        this.rowHover = new EventEmitter();\r\n    }\r\n    get tableColumnsCount() {\r\n        const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\r\n        return this.grid.getColumns().length + actionColumns;\r\n    }\r\n    ngOnChanges() {\r\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n        this.mode = this.grid.getSetting('mode');\r\n        this.editInputClass = this.grid.getSetting('edit.inputClass');\r\n        this.showActionColumnRight = this.grid.showActionColumn('right');\r\n        this.isActionAdd = this.grid.getSetting('actions.add');\r\n        this.isActionEdit = this.grid.getSetting('actions.edit');\r\n        this.isActionDelete = this.grid.getSetting('actions.delete');\r\n        this.noDataMessage = this.grid.getSetting('noDataMessage');\r\n    }\r\n    getVisibleCells(cells) {\r\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\r\n    }\r\n}\r\nNg2SmartTableTbodyComponent.ɵfac = function Ng2SmartTableTbodyComponent_Factory(t) { return new (t || Ng2SmartTableTbodyComponent)(); };\r\nNg2SmartTableTbodyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableTbodyComponent, selectors: [[\"\", \"ng2-st-tbody\", \"\"]], inputs: { grid: \"grid\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", rowClassFunction: \"rowClassFunction\" }, outputs: { save: \"save\", cancel: \"cancel\", edit: \"edit\", delete: \"delete\", custom: \"custom\", edited: \"edited\", userSelectRow: \"userSelectRow\", editRowSelect: \"editRowSelect\", multipleSelectRow: \"multipleSelectRow\", rowHover: \"rowHover\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$7, decls: 2, vars: 2, consts: [[\"class\", \"ng2-smart-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"ng2-smart-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\"], [\"class\", \"ng2-smart-actions ng2-smart-action-multiple-select\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"ng2-smart-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"ng2-smart-actions\", \"ng2-smart-action-multiple-select\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngModel\"], [1, \"ng2-smart-actions\"], [3, \"grid\", \"row\", \"source\", \"custom\"], [3, \"grid\", \"deleteConfirm\", \"editConfirm\", \"row\", \"source\", \"edit\", \"delete\", \"editRowSelect\"], [3, \"grid\", \"row\", \"editConfirm\"], [3, \"cell\", \"grid\", \"row\", \"isNew\", \"mode\", \"editConfirm\", \"inputClass\", \"isInEditing\"]], template: function Ng2SmartTableTbodyComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, Ng2SmartTableTbodyComponent_tr_0_Template, 7, 10, \"tr\", 0);\r\n            i0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_1_Template, 3, 2, \"tr\", 1);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngForOf\", ctx.grid.getRows());\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.grid.getRows().length == 0);\r\n        }\r\n    }, directives: [i1.NgForOf, i1.NgClass, i1.NgIf, i1$1.CheckboxControlValueAccessor, i1$1.NgControlStatus, i1$1.NgModel, TbodyCustomComponent, TbodyEditDeleteComponent, TbodyCreateCancelComponent, CellComponent], styles: [\"[_nghost-%COMP%]   .ng2-smart-row.selected[_ngcontent-%COMP%]{background:rgba(0,0,0,.05)}[_nghost-%COMP%]   .ng2-smart-row[_ngcontent-%COMP%]   .ng2-smart-actions.ng2-smart-action-multiple-select[_ngcontent-%COMP%]{text-align:center}[_nghost-%COMP%]     ng2-st-tbody-edit-delete a:first-child, [_nghost-%COMP%]     ng2-st-tbody-create-cancel a:first-child{margin-right:.25rem}\"] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableTbodyComponent, [{\r\n            type: Component,\r\n            args: [{ selector: '[ng2-st-tbody]', template: \"<tr *ngFor=\\\"let row of grid.getRows()\\\" (click)=\\\"userSelectRow.emit(row)\\\" (mouseover)=\\\"rowHover.emit(row)\\\" class=\\\"ng2-smart-row\\\" [className]=\\\"rowClassFunction(row)\\\" [ngClass]=\\\"{selected: row.isSelected}\\\">\\r\\n  <td *ngIf=\\\"isMultiSelectVisible\\\" class=\\\"ng2-smart-actions ng2-smart-action-multiple-select\\\" (click)=\\\"multipleSelectRow.emit(row)\\\">\\r\\n    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [ngModel]=\\\"row.isSelected\\\">\\r\\n  </td>\\r\\n  <td *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\" class=\\\"ng2-smart-actions\\\">\\r\\n    <ng2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></ng2-st-tbody-custom>\\r\\n\\r\\n    <ng2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\r\\n                              [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                              [editConfirm]=\\\"editConfirm\\\"\\r\\n                              (edit)=\\\"edit.emit(row)\\\"\\r\\n                              (delete)=\\\"delete.emit(row)\\\"\\r\\n                              (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\r\\n                              [row]=\\\"row\\\"\\r\\n                              [source]=\\\"source\\\">\\r\\n    </ng2-st-tbody-edit-delete>\\r\\n  </td>\\r\\n   <td *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"  class=\\\"ng2-smart-actions\\\">\\r\\n    <ng2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></ng2-st-tbody-create-cancel>\\r\\n  </td>\\r\\n  <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\r\\n    <ng2-smart-table-cell [cell]=\\\"cell\\\"\\r\\n                          [grid]=\\\"grid\\\"\\r\\n                          [row]=\\\"row\\\"\\r\\n                          [isNew]=\\\"false\\\"\\r\\n                          [mode]=\\\"mode\\\"\\r\\n                          [editConfirm]=\\\"editConfirm\\\"\\r\\n                          [inputClass]=\\\"editInputClass\\\"\\r\\n                          [isInEditing]=\\\"row.isInEditing\\\">\\r\\n    </ng2-smart-table-cell>\\r\\n  </td>\\r\\n\\r\\n  <td *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"  class=\\\"ng2-smart-actions\\\">\\r\\n    <ng2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></ng2-st-tbody-create-cancel>\\r\\n  </td>\\r\\n\\r\\n  <td *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\" class=\\\"ng2-smart-actions\\\">\\r\\n    <ng2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></ng2-st-tbody-custom>\\r\\n\\r\\n    <ng2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\r\\n                              [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                              [editConfirm]=\\\"editConfirm\\\"\\r\\n                              [row]=\\\"row\\\"\\r\\n                              [source]=\\\"source\\\"\\r\\n                              (edit)=\\\"edit.emit(row)\\\"\\r\\n                              (delete)=\\\"delete.emit(row)\\\"\\r\\n                              (editRowSelect)=\\\"editRowSelect.emit($event)\\\">\\r\\n    </ng2-st-tbody-edit-delete>\\r\\n  </td>\\r\\n</tr>\\r\\n\\r\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\r\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\r\\n    {{ noDataMessage }}\\r\\n  </td>\\r\\n</tr>\\r\\n\", styles: [\":host .ng2-smart-row.selected{background:rgba(0,0,0,.05)}:host .ng2-smart-row .ng2-smart-actions.ng2-smart-action-multiple-select{text-align:center}:host ::ng-deep ng2-st-tbody-edit-delete a:first-child,:host ::ng-deep ng2-st-tbody-create-cancel a:first-child{margin-right:.25rem}\\n\"] }]\r\n        }], null, { grid: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], deleteConfirm: [{\r\n                type: Input\r\n            }], editConfirm: [{\r\n                type: Input\r\n            }], rowClassFunction: [{\r\n                type: Input\r\n            }], save: [{\r\n                type: Output\r\n            }], cancel: [{\r\n                type: Output\r\n            }], edit: [{\r\n                type: Output\r\n            }], delete: [{\r\n                type: Output\r\n            }], custom: [{\r\n                type: Output\r\n            }], edited: [{\r\n                type: Output\r\n            }], userSelectRow: [{\r\n                type: Output\r\n            }], editRowSelect: [{\r\n                type: Output\r\n            }], multipleSelectRow: [{\r\n                type: Output\r\n            }], rowHover: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nconst TBODY_COMPONENTS = [\r\n    TbodyCreateCancelComponent,\r\n    TbodyEditDeleteComponent,\r\n    TbodyCustomComponent,\r\n    Ng2SmartTableTbodyComponent\r\n];\r\nclass TBodyModule {\r\n}\r\nTBodyModule.ɵfac = function TBodyModule_Factory(t) { return new (t || TBodyModule)(); };\r\nTBodyModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TBodyModule });\r\nTBodyModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            CellModule,\r\n        ]] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TBodyModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        CellModule,\r\n                    ],\r\n                    declarations: [\r\n                        ...TBODY_COMPONENTS,\r\n                    ],\r\n                    exports: [\r\n                        ...TBODY_COMPONENTS,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TBodyModule, { declarations: [TbodyCreateCancelComponent,\r\n            TbodyEditDeleteComponent,\r\n            TbodyCustomComponent,\r\n            Ng2SmartTableTbodyComponent], imports: [CommonModule,\r\n            FormsModule,\r\n            CellModule], exports: [TbodyCreateCancelComponent,\r\n            TbodyEditDeleteComponent,\r\n            TbodyCustomComponent,\r\n            Ng2SmartTableTbodyComponent] });\r\n})();\n\nconst _c0$6 = [\"ng2-st-checkbox-select-all\", \"\"];\r\nclass CheckboxSelectAllComponent {\r\n}\r\nCheckboxSelectAllComponent.ɵfac = function CheckboxSelectAllComponent_Factory(t) { return new (t || CheckboxSelectAllComponent)(); };\r\nCheckboxSelectAllComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxSelectAllComponent, selectors: [[\"\", \"ng2-st-checkbox-select-all\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\" }, attrs: _c0$6, decls: 1, vars: 1, consts: [[\"type\", \"checkbox\", 3, \"ngModel\"]], template: function CheckboxSelectAllComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelement(0, \"input\", 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngModel\", ctx.isAllSelected);\r\n        }\r\n    }, directives: [i1$1.CheckboxControlValueAccessor, i1$1.NgControlStatus, i1$1.NgModel], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxSelectAllComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: '[ng2-st-checkbox-select-all]',\r\n                    template: `\r\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\r\n  `,\r\n                }]\r\n        }], null, { grid: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], isAllSelected: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nconst _c0$5 = [\"ng2-st-actions-title\", \"\"];\r\nclass ActionsTitleComponent {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n    }\r\n    ngAfterViewInit() {\r\n        this.ref.nativeElement.classList.add('ng2-smart-actions');\r\n    }\r\n    ngOnChanges() {\r\n        this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\r\n    }\r\n}\r\nActionsTitleComponent.ɵfac = function ActionsTitleComponent_Factory(t) { return new (t || ActionsTitleComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nActionsTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionsTitleComponent, selectors: [[\"\", \"ng2-st-actions-title\", \"\"]], inputs: { grid: \"grid\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$5, decls: 2, vars: 1, consts: [[1, \"ng2-smart-title\"]], template: function ActionsTitleComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"div\", 0);\r\n            i0.ɵɵtext(1);\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵtextInterpolate(ctx.actionsColumnTitle);\r\n        }\r\n    }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsTitleComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: '[ng2-st-actions-title]',\r\n                    template: `\r\n    <div class=\"ng2-smart-title\">{{ actionsColumnTitle }}</div>\r\n  `,\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }]; }, { grid: [{\r\n                type: Input\r\n            }] });\r\n})();\n\nfunction TitleComponent_a_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r3 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"a\", 2);\r\n        i0.ɵɵlistener(\"click\", function TitleComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2._sort($event); });\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"ngClass\", ctx_r0.currentDirection);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate1(\" \", ctx_r0.column.title, \" \");\r\n    }\r\n}\r\nfunction TitleComponent_span_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"span\", 3);\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate(ctx_r1.column.title);\r\n    }\r\n}\r\nclass TitleComponent {\r\n    constructor() {\r\n        this.currentDirection = '';\r\n        this.sort = new EventEmitter();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.source) {\r\n            if (!changes.source.firstChange) {\r\n                this.dataChangedSub.unsubscribe();\r\n            }\r\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n                const sortConf = this.source.getSort();\r\n                if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\r\n                    this.currentDirection = sortConf[0]['direction'];\r\n                }\r\n                else {\r\n                    this.currentDirection = '';\r\n                }\r\n                sortConf.forEach((fieldConf) => {\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _sort(event) {\r\n        event.preventDefault();\r\n        this.changeSortDirection();\r\n        this.source.setSort([\r\n            {\r\n                field: this.column.id,\r\n                direction: this.currentDirection,\r\n                compare: this.column.getCompareFunction(),\r\n            },\r\n        ]);\r\n        this.sort.emit(null);\r\n    }\r\n    changeSortDirection() {\r\n        if (this.currentDirection) {\r\n            const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\r\n            this.currentDirection = newDirection;\r\n        }\r\n        else {\r\n            this.currentDirection = this.column.sortDirection;\r\n        }\r\n        return this.currentDirection;\r\n    }\r\n}\r\nTitleComponent.ɵfac = function TitleComponent_Factory(t) { return new (t || TitleComponent)(); };\r\nTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TitleComponent, selectors: [[\"ng2-smart-table-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"ng2-smart-sort-link sort\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"ng2-smart-sort\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"ng2-smart-sort-link\", \"sort\", 3, \"ngClass\", \"click\"], [1, \"ng2-smart-sort\"]], template: function TitleComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, TitleComponent_a_0_Template, 2, 2, \"a\", 0);\r\n            i0.ɵɵtemplate(1, TitleComponent_span_1_Template, 2, 1, \"span\", 1);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", ctx.column.isSortable);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", !ctx.column.isSortable);\r\n        }\r\n    }, directives: [i1.NgIf, i1.NgClass], styles: [\"a.sort.asc[_ngcontent-%COMP%], a.sort.desc[_ngcontent-%COMP%]{font-weight:700}a.sort.asc[_ngcontent-%COMP%]:after, a.sort.desc[_ngcontent-%COMP%]:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc[_ngcontent-%COMP%]:after{transform:rotate(-180deg);margin-bottom:-2px}\"] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TitleComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'ng2-smart-table-title', template: `\r\n    <a href=\"#\" *ngIf=\"column.isSortable\"\r\n                (click)=\"_sort($event)\"\r\n                class=\"ng2-smart-sort-link sort\"\r\n                [ngClass]=\"currentDirection\">\r\n      {{ column.title }}\r\n    </a>\r\n    <span class=\"ng2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\r\n  `, styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc:after{transform:rotate(-180deg);margin-bottom:-2px}\\n\"] }]\r\n        }], null, { column: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], sort: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nclass ColumnTitleComponent {\r\n    constructor() {\r\n        this.sort = new EventEmitter();\r\n    }\r\n}\r\nColumnTitleComponent.ɵfac = function ColumnTitleComponent_Factory(t) { return new (t || ColumnTitleComponent)(); };\r\nColumnTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnTitleComponent, selectors: [[\"ng2-st-column-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, decls: 2, vars: 2, consts: [[1, \"ng2-smart-title\"], [3, \"source\", \"column\", \"sort\"]], template: function ColumnTitleComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"ng2-smart-table-title\", 1);\r\n            i0.ɵɵlistener(\"sort\", function ColumnTitleComponent_Template_ng2_smart_table_title_sort_1_listener($event) { return ctx.sort.emit($event); });\r\n            i0.ɵɵelementEnd()();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"source\", ctx.source)(\"column\", ctx.column);\r\n        }\r\n    }, directives: [TitleComponent], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnTitleComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'ng2-st-column-title',\r\n                    template: `\r\n    <div class=\"ng2-smart-title\">\r\n      <ng2-smart-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-smart-table-title>\r\n    </div>\r\n  `,\r\n                }]\r\n        }], null, { column: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], sort: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nconst _c0$4 = [\"ng2-st-thead-titles-row\", \"\"];\r\nfunction TheadTitlesRowComponent_th_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r5 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"th\", 3);\r\n        i0.ɵɵlistener(\"click\", function TheadTitlesRowComponent_th_0_Template_th_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.selectAllRows.emit($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"source\", ctx_r0.source)(\"isAllSelected\", ctx_r0.isAllSelected);\r\n    }\r\n}\r\nfunction TheadTitlesRowComponent_th_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"th\", 4);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"grid\", ctx_r1.grid);\r\n    }\r\n}\r\nfunction TheadTitlesRowComponent_th_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r8 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"th\", 5)(1, \"ng2-st-column-title\", 6);\r\n        i0.ɵɵlistener(\"sort\", function TheadTitlesRowComponent_th_2_Template_ng2_st_column_title_sort_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.sort.emit($event); });\r\n        i0.ɵɵelementEnd()();\r\n    }\r\n    if (rf & 2) {\r\n        const column_r6 = ctx.$implicit;\r\n        const ctx_r2 = i0.ɵɵnextContext();\r\n        i0.ɵɵclassMapInterpolate1(\"ng2-smart-th \", column_r6.id, \"\");\r\n        i0.ɵɵstyleProp(\"width\", column_r6.width);\r\n        i0.ɵɵproperty(\"ngClass\", column_r6.class);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6);\r\n    }\r\n}\r\nfunction TheadTitlesRowComponent_th_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"th\", 4);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r3 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"grid\", ctx_r3.grid);\r\n    }\r\n}\r\nclass TheadTitlesRowComponent {\r\n    constructor() {\r\n        this.sort = new EventEmitter();\r\n        this.selectAllRows = new EventEmitter();\r\n    }\r\n    ngOnChanges() {\r\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n        this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    }\r\n    getVisibleColumns(columns) {\r\n        return (columns || []).filter((column) => !column.hide);\r\n    }\r\n}\r\nTheadTitlesRowComponent.ɵfac = function TheadTitlesRowComponent_Factory(t) { return new (t || TheadTitlesRowComponent)(); };\r\nTheadTitlesRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadTitlesRowComponent, selectors: [[\"\", \"ng2-st-thead-titles-row\", \"\"]], inputs: { grid: \"grid\", isAllSelected: \"isAllSelected\", source: \"source\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$4, decls: 4, vars: 4, consts: [[\"ng2-st-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\", 4, \"ngIf\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\", 4, \"ngIf\"], [3, \"class\", \"ngClass\", \"width\", 4, \"ngFor\", \"ngForOf\"], [\"ng2-st-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\"], [3, \"ngClass\"], [3, \"source\", \"column\", \"sort\"]], template: function TheadTitlesRowComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, TheadTitlesRowComponent_th_0_Template, 1, 3, \"th\", 0);\r\n            i0.ɵɵtemplate(1, TheadTitlesRowComponent_th_1_Template, 1, 1, \"th\", 1);\r\n            i0.ɵɵtemplate(2, TheadTitlesRowComponent_th_2_Template, 2, 8, \"th\", 2);\r\n            i0.ɵɵtemplate(3, TheadTitlesRowComponent_th_3_Template, 1, 1, \"th\", 1);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\r\n        }\r\n    }, directives: [i1.NgIf, CheckboxSelectAllComponent, ActionsTitleComponent, i1.NgForOf, i1.NgClass, ColumnTitleComponent], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadTitlesRowComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: '[ng2-st-thead-titles-row]',\r\n                    template: `\r\n    <th ng2-st-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\r\n                                   [grid]=\"grid\"\r\n                                   [source]=\"source\"\r\n                                   [isAllSelected]=\"isAllSelected\"\r\n                                   (click)=\"selectAllRows.emit($event)\">\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\r\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\r\n        class=\"ng2-smart-th {{ column.id }}\"\r\n        [ngClass]=\"column.class\"\r\n        [style.width]=\"column.width\">\r\n      <ng2-st-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-st-column-title>\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\r\n  `,\r\n                }]\r\n        }], null, { grid: [{\r\n                type: Input\r\n            }], isAllSelected: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], sort: [{\r\n                type: Output\r\n            }], selectAllRows: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nconst _c0$3 = [\"ng2-st-add-button\", \"\"];\r\nfunction AddButtonComponent_a_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r2 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"a\", 1);\r\n        i0.ɵɵlistener(\"click\", function AddButtonComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return ctx_r1.onAdd($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"innerHTML\", ctx_r0.addNewButtonContent, i0.ɵɵsanitizeHtml);\r\n    }\r\n}\r\nclass AddButtonComponent {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.create = new EventEmitter();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.ref.nativeElement.classList.add('ng2-smart-actions-title', 'ng2-smart-actions-title-add');\r\n    }\r\n    ngOnChanges() {\r\n        this.isActionAdd = this.grid.getSetting('actions.add');\r\n        this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\r\n    }\r\n    onAdd(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (this.grid.getSetting('mode') === 'external') {\r\n            this.create.emit({\r\n                source: this.source,\r\n            });\r\n        }\r\n        else {\r\n            this.grid.createFormShown = true;\r\n        }\r\n    }\r\n}\r\nAddButtonComponent.ɵfac = function AddButtonComponent_Factory(t) { return new (t || AddButtonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\r\nAddButtonComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AddButtonComponent, selectors: [[\"\", \"ng2-st-add-button\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$3, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-add-add\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-add-add\", 3, \"innerHTML\", \"click\"]], template: function AddButtonComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, AddButtonComponent_a_0_Template, 1, 1, \"a\", 0);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", ctx.isActionAdd);\r\n        }\r\n    }, directives: [i1.NgIf], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddButtonComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: '[ng2-st-add-button]',\r\n                    template: `\r\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-add\"\r\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\r\n  `,\r\n                }]\r\n        }], function () { return [{ type: i0.ElementRef }]; }, { grid: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], create: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nconst _c0$2 = [\"ng2-st-thead-filters-row\", \"\"];\r\nfunction TheadFitlersRowComponent_th_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"th\");\r\n    }\r\n}\r\nfunction TheadFitlersRowComponent_th_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r5 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"th\", 4);\r\n        i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_1_Template_th_create_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.create.emit($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"grid\", ctx_r1.grid);\r\n    }\r\n}\r\nfunction TheadFitlersRowComponent_th_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r8 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"th\")(1, \"ng2-smart-table-filter\", 5);\r\n        i0.ɵɵlistener(\"filter\", function TheadFitlersRowComponent_th_2_Template_ng2_smart_table_filter_filter_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.filter.emit($event); });\r\n        i0.ɵɵelementEnd()();\r\n    }\r\n    if (rf & 2) {\r\n        const column_r6 = ctx.$implicit;\r\n        const ctx_r2 = i0.ɵɵnextContext();\r\n        i0.ɵɵclassMapInterpolate1(\"ng2-smart-th \", column_r6.id, \"\");\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6)(\"inputClass\", ctx_r2.filterInputClass);\r\n    }\r\n}\r\nfunction TheadFitlersRowComponent_th_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r10 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"th\", 6);\r\n        i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_3_Template_th_create_0_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.create.emit($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r3 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"grid\", ctx_r3.grid)(\"source\", ctx_r3.source);\r\n    }\r\n}\r\nclass TheadFitlersRowComponent {\r\n    constructor() {\r\n        this.create = new EventEmitter();\r\n        this.filter = new EventEmitter();\r\n    }\r\n    ngOnChanges() {\r\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n        this.showActionColumnRight = this.grid.showActionColumn('right');\r\n        this.filterInputClass = this.grid.getSetting('filter.inputClass');\r\n    }\r\n    getVisibleColumns(columns) {\r\n        return (columns || []).filter((column) => !column.hide);\r\n    }\r\n}\r\nTheadFitlersRowComponent.ɵfac = function TheadFitlersRowComponent_Factory(t) { return new (t || TheadFitlersRowComponent)(); };\r\nTheadFitlersRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadFitlersRowComponent, selectors: [[\"\", \"ng2-st-thead-filters-row\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\", filter: \"filter\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$2, decls: 4, vars: 4, consts: [[4, \"ngIf\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"create\", 4, \"ngIf\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"source\", \"create\", 4, \"ngIf\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"create\"], [3, \"source\", \"column\", \"inputClass\", \"filter\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"source\", \"create\"]], template: function TheadFitlersRowComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, TheadFitlersRowComponent_th_0_Template, 1, 0, \"th\", 0);\r\n            i0.ɵɵtemplate(1, TheadFitlersRowComponent_th_1_Template, 1, 1, \"th\", 1);\r\n            i0.ɵɵtemplate(2, TheadFitlersRowComponent_th_2_Template, 2, 6, \"th\", 2);\r\n            i0.ɵɵtemplate(3, TheadFitlersRowComponent_th_3_Template, 1, 2, \"th\", 3);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\r\n        }\r\n    }, directives: [i1.NgIf, AddButtonComponent, i1.NgForOf, FilterComponent], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFitlersRowComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: '[ng2-st-thead-filters-row]',\r\n                    template: `\r\n    <th *ngIf=\"isMultiSelectVisible\"></th>\r\n    <th ng2-st-add-button *ngIf=\"showActionColumnLeft\"\r\n                          [grid]=\"grid\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"ng2-smart-th {{ column.id }}\">\r\n      <ng2-smart-table-filter [source]=\"source\"\r\n                              [column]=\"column\"\r\n                              [inputClass]=\"filterInputClass\"\r\n                              (filter)=\"filter.emit($event)\">\r\n      </ng2-smart-table-filter>\r\n    </th>\r\n    <th ng2-st-add-button *ngIf=\"showActionColumnRight\"\r\n                          [grid]=\"grid\"\r\n                          [source]=\"source\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n  `,\r\n                }]\r\n        }], null, { grid: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], create: [{\r\n                type: Output\r\n            }], filter: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nclass ActionsComponent {\r\n    constructor() {\r\n        this.create = new EventEmitter();\r\n    }\r\n    ngOnChanges() {\r\n        this.createButtonContent = this.grid.getSetting('add.createButtonContent');\r\n        this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\r\n    }\r\n}\r\nActionsComponent.ɵfac = function ActionsComponent_Factory(t) { return new (t || ActionsComponent)(); };\r\nActionsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionsComponent, selectors: [[\"ng2-st-actions\"]], inputs: { grid: \"grid\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-add-create\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-add-cancel\", 3, \"innerHTML\", \"click\"]], template: function ActionsComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"a\", 0);\r\n            i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_0_listener($event) { $event.preventDefault(); return ctx.create.emit($event); });\r\n            i0.ɵɵelementEnd();\r\n            i0.ɵɵelementStart(1, \"a\", 1);\r\n            i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_1_listener($event) { $event.preventDefault(); return ctx.grid.createFormShown = false; });\r\n            i0.ɵɵelementEnd();\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"innerHTML\", ctx.createButtonContent, i0.ɵɵsanitizeHtml);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\r\n        }\r\n    }, encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'ng2-st-actions',\r\n                    template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-create\"\r\n        [innerHTML]=\"createButtonContent\"\r\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\"\r\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\r\n  `,\r\n                }]\r\n        }], null, { grid: [{\r\n                type: Input\r\n            }], create: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nconst _c0$1 = [\"ng2-st-thead-form-row\", \"\"];\r\nfunction TheadFormRowComponent_td_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"td\");\r\n    }\r\n}\r\nfunction TheadFormRowComponent_td_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r5 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\r\n        i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_1_Template_ng2_st_actions_create_1_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onCreate($event); });\r\n        i0.ɵɵelementEnd()();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"grid\", ctx_r1.grid);\r\n    }\r\n}\r\nfunction TheadFormRowComponent_td_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r8 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"td\")(1, \"ng2-smart-table-cell\", 5);\r\n        i0.ɵɵlistener(\"edited\", function TheadFormRowComponent_td_2_Template_ng2_smart_table_cell_edited_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.onCreate($event); });\r\n        i0.ɵɵelementEnd()();\r\n    }\r\n    if (rf & 2) {\r\n        const cell_r6 = ctx.$implicit;\r\n        const ctx_r2 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"cell\", cell_r6)(\"grid\", ctx_r2.grid)(\"isNew\", true)(\"createConfirm\", ctx_r2.createConfirm)(\"inputClass\", ctx_r2.addInputClass)(\"isInEditing\", ctx_r2.grid.getNewRow().isInEditing);\r\n    }\r\n}\r\nfunction TheadFormRowComponent_td_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r10 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\r\n        i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_3_Template_ng2_st_actions_create_1_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.onCreate($event); });\r\n        i0.ɵɵelementEnd()();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r3 = i0.ɵɵnextContext();\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"grid\", ctx_r3.grid);\r\n    }\r\n}\r\nclass TheadFormRowComponent {\r\n    constructor() {\r\n        this.create = new EventEmitter();\r\n    }\r\n    onCreate(event) {\r\n        event.stopPropagation();\r\n        this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n    }\r\n    ngOnChanges() {\r\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n        this.showActionColumnRight = this.grid.showActionColumn('right');\r\n        this.addInputClass = this.grid.getSetting('add.inputClass');\r\n    }\r\n    getVisibleCells(cells) {\r\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\r\n    }\r\n}\r\nTheadFormRowComponent.ɵfac = function TheadFormRowComponent_Factory(t) { return new (t || TheadFormRowComponent)(); };\r\nTheadFormRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadFormRowComponent, selectors: [[\"\", \"ng2-st-thead-form-row\", \"\"]], inputs: { grid: \"grid\", row: \"row\", createConfirm: \"createConfirm\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$1, decls: 4, vars: 3, consts: [[4, \"ngIf\"], [\"class\", \"ng2-smart-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"ng2-smart-actions\"], [3, \"grid\", \"create\"], [3, \"cell\", \"grid\", \"isNew\", \"createConfirm\", \"inputClass\", \"isInEditing\", \"edited\"]], template: function TheadFormRowComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, TheadFormRowComponent_td_0_Template, 1, 0, \"td\", 0);\r\n            i0.ɵɵtemplate(1, TheadFormRowComponent_td_1_Template, 2, 1, \"td\", 1);\r\n            i0.ɵɵtemplate(2, TheadFormRowComponent_td_2_Template, 2, 6, \"td\", 2);\r\n            i0.ɵɵtemplate(3, TheadFormRowComponent_td_3_Template, 2, 1, \"td\", 1);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleCells(ctx.grid.getNewRow().getCells()));\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\r\n        }\r\n    }, directives: [i1.NgIf, ActionsComponent, i1.NgForOf, CellComponent], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFormRowComponent, [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: '[ng2-st-thead-form-row]',\r\n                    template: `\r\n      <td *ngIf=\"\"></td>\r\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\r\n        <ng2-smart-table-cell [cell]=\"cell\"\r\n                              [grid]=\"grid\"\r\n                              [isNew]=\"true\"\r\n                              [createConfirm]=\"createConfirm\"\r\n                              [inputClass]=\"addInputClass\"\r\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\r\n                              (edited)=\"onCreate($event)\">\r\n        </ng2-smart-table-cell>\r\n      </td>\r\n      <td  *ngIf=\"showActionColumnRight\"  class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n  `,\r\n                }]\r\n        }], null, { grid: [{\r\n                type: Input\r\n            }], row: [{\r\n                type: Input\r\n            }], createConfirm: [{\r\n                type: Input\r\n            }], create: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nconst _c0 = [\"ng2-st-thead\", \"\"];\r\nfunction Ng2SmartTableTheadComponent_tr_0_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r4 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"tr\", 3);\r\n        i0.ɵɵlistener(\"sort\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_sort_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.sort.emit($event); })(\"selectAllRows\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_selectAllRows_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.selectAllRows.emit($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source);\r\n    }\r\n}\r\nfunction Ng2SmartTableTheadComponent_tr_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r7 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"tr\", 4);\r\n        i0.ɵɵlistener(\"create\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_create_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.create.emit($event); })(\"filter\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_filter_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.filter.emit($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"grid\", ctx_r1.grid)(\"source\", ctx_r1.source);\r\n    }\r\n}\r\nfunction Ng2SmartTableTheadComponent_tr_2_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        i0.ɵɵelement(0, \"tr\", 5);\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r2 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"grid\", ctx_r2.grid)(\"createConfirm\", ctx_r2.createConfirm);\r\n    }\r\n}\r\nclass Ng2SmartTableTheadComponent {\r\n    constructor() {\r\n        this.sort = new EventEmitter();\r\n        this.selectAllRows = new EventEmitter();\r\n        this.create = new EventEmitter();\r\n        this.filter = new EventEmitter();\r\n    }\r\n    ngOnChanges() {\r\n        this.isHideHeader = this.grid.getSetting('hideHeader');\r\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n    }\r\n}\r\nNg2SmartTableTheadComponent.ɵfac = function Ng2SmartTableTheadComponent_Factory(t) { return new (t || Ng2SmartTableTheadComponent)(); };\r\nNg2SmartTableTheadComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableTheadComponent, selectors: [[\"\", \"ng2-st-thead\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\", createConfirm: \"createConfirm\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\", create: \"create\", filter: \"filter\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 3, vars: 3, consts: [[\"ng2-st-thead-titles-row\", \"\", \"class\", \"ng2-smart-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\", 4, \"ngIf\"], [\"ng2-st-thead-filters-row\", \"\", \"class\", \"ng2-smart-filters\", 3, \"grid\", \"source\", \"create\", \"filter\", 4, \"ngIf\"], [\"ng2-st-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\", 4, \"ngIf\"], [\"ng2-st-thead-titles-row\", \"\", 1, \"ng2-smart-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\"], [\"ng2-st-thead-filters-row\", \"\", 1, \"ng2-smart-filters\", 3, \"grid\", \"source\", \"create\", \"filter\"], [\"ng2-st-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\"]], template: function Ng2SmartTableTheadComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵtemplate(0, Ng2SmartTableTheadComponent_tr_0_Template, 1, 3, \"tr\", 0);\r\n            i0.ɵɵtemplate(1, Ng2SmartTableTheadComponent_tr_1_Template, 1, 2, \"tr\", 1);\r\n            i0.ɵɵtemplate(2, Ng2SmartTableTheadComponent_tr_2_Template, 1, 2, \"tr\", 2);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", !ctx.isHideSubHeader);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.grid.createFormShown);\r\n        }\r\n    }, directives: [i1.NgIf, TheadTitlesRowComponent, TheadFitlersRowComponent, TheadFormRowComponent], encapsulation: 2 });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableTheadComponent, [{\r\n            type: Component,\r\n            args: [{ selector: '[ng2-st-thead]', template: \"<tr ng2-st-thead-titles-row *ngIf=\\\"!isHideHeader\\\"\\r\\n                            class=\\\"ng2-smart-titles\\\"\\r\\n                            [grid]=\\\"grid\\\"\\r\\n                            [isAllSelected]=\\\"isAllSelected\\\"\\r\\n                            [source]=\\\"source\\\"\\r\\n                            (sort)=\\\"sort.emit($event)\\\"\\r\\n                            (selectAllRows)=\\\"selectAllRows.emit($event)\\\">\\r\\n</tr>\\r\\n\\r\\n<tr ng2-st-thead-filters-row *ngIf=\\\"!isHideSubHeader\\\"\\r\\n                              class=\\\"ng2-smart-filters\\\"\\r\\n                              [grid]=\\\"grid\\\"\\r\\n                              [source]=\\\"source\\\"\\r\\n                              (create)=\\\"create.emit($event)\\\"\\r\\n                              (filter)=\\\"filter.emit($event)\\\">\\r\\n</tr>\\r\\n\\r\\n<tr ng2-st-thead-form-row *ngIf=\\\"grid.createFormShown\\\"\\r\\n                          [grid]=\\\"grid\\\"\\r\\n                          [createConfirm]=\\\"createConfirm\\\">\\r\\n</tr>\\r\\n\" }]\r\n        }], null, { grid: [{\r\n                type: Input\r\n            }], source: [{\r\n                type: Input\r\n            }], isAllSelected: [{\r\n                type: Input\r\n            }], createConfirm: [{\r\n                type: Input\r\n            }], sort: [{\r\n                type: Output\r\n            }], selectAllRows: [{\r\n                type: Output\r\n            }], create: [{\r\n                type: Output\r\n            }], filter: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nconst THEAD_COMPONENTS = [\r\n    ActionsComponent,\r\n    ActionsTitleComponent,\r\n    AddButtonComponent,\r\n    CheckboxSelectAllComponent,\r\n    ColumnTitleComponent,\r\n    TitleComponent,\r\n    TheadFitlersRowComponent,\r\n    TheadFormRowComponent,\r\n    TheadTitlesRowComponent,\r\n    Ng2SmartTableTheadComponent,\r\n];\r\nclass THeadModule {\r\n}\r\nTHeadModule.ɵfac = function THeadModule_Factory(t) { return new (t || THeadModule)(); };\r\nTHeadModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: THeadModule });\r\nTHeadModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            FilterModule,\r\n            CellModule,\r\n        ]] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(THeadModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        FilterModule,\r\n                        CellModule,\r\n                    ],\r\n                    declarations: [\r\n                        ...THEAD_COMPONENTS,\r\n                    ],\r\n                    exports: [\r\n                        ...THEAD_COMPONENTS,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(THeadModule, { declarations: [ActionsComponent,\r\n            ActionsTitleComponent,\r\n            AddButtonComponent,\r\n            CheckboxSelectAllComponent,\r\n            ColumnTitleComponent,\r\n            TitleComponent,\r\n            TheadFitlersRowComponent,\r\n            TheadFormRowComponent,\r\n            TheadTitlesRowComponent,\r\n            Ng2SmartTableTheadComponent], imports: [CommonModule,\r\n            FormsModule,\r\n            FilterModule,\r\n            CellModule], exports: [ActionsComponent,\r\n            ActionsTitleComponent,\r\n            AddButtonComponent,\r\n            CheckboxSelectAllComponent,\r\n            ColumnTitleComponent,\r\n            TitleComponent,\r\n            TheadFitlersRowComponent,\r\n            TheadFormRowComponent,\r\n            TheadTitlesRowComponent,\r\n            Ng2SmartTableTheadComponent] });\r\n})();\n\n/**\r\n * Extending object that entered in first argument.\r\n *\r\n * Returns extended object or false if have no target object or incorrect type.\r\n *\r\n * If you wish to clone source object (without modify it), just use empty new\r\n * object as first argument, like this:\r\n *   deepExtend({}, yourObj_1, [yourObj_N]);\r\n */\r\nconst deepExtend = function (...objects) {\r\n    if (arguments.length < 1 || typeof arguments[0] !== 'object') {\r\n        return false;\r\n    }\r\n    if (arguments.length < 2) {\r\n        return arguments[0];\r\n    }\r\n    const target = arguments[0];\r\n    // convert arguments to array and cut off target object\r\n    const args = Array.prototype.slice.call(arguments, 1);\r\n    let val, src;\r\n    args.forEach((obj) => {\r\n        // skip argument if it is array or isn't object\r\n        if (typeof obj !== 'object' || Array.isArray(obj)) {\r\n            return;\r\n        }\r\n        Object.keys(obj).forEach(function (key) {\r\n            src = target[key]; // source value\r\n            val = obj[key]; // new value\r\n            // recursion prevention\r\n            if (val === target) {\r\n                return;\r\n                /**\r\n                 * if new value isn't object then just overwrite by new value\r\n                 * instead of extending.\r\n                 */\r\n            }\r\n            else if (typeof val !== 'object' || val === null) {\r\n                target[key] = val;\r\n                return;\r\n                // just clone arrays (and recursive clone objects inside)\r\n            }\r\n            else if (Array.isArray(val)) {\r\n                target[key] = cloneDeep(val);\r\n                return;\r\n                // overwrite by new value if source isn't object or array\r\n            }\r\n            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\r\n                target[key] = deepExtend({}, val);\r\n                return;\r\n                // source value and new value is objects both, extending...\r\n            }\r\n            else {\r\n                target[key] = deepExtend(src, val);\r\n                return;\r\n            }\r\n        });\r\n    });\r\n    return target;\r\n};\r\nclass Deferred {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n}\r\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\r\nfunction getDeepFromObject(object = {}, name, defaultValue) {\r\n    const keys = name.split('.');\r\n    // clone the object\r\n    let level = deepExtend({}, object);\r\n    keys.forEach((k) => {\r\n        if (level && typeof level[k] !== 'undefined') {\r\n            level = level[k];\r\n        }\r\n    });\r\n    return typeof level === 'undefined' ? defaultValue : level;\r\n}\r\nfunction getPageForRowIndex(index, perPage) {\r\n    // we need to add 1 to convert 0-based index to 1-based page number.\r\n    return Math.floor(index / perPage) + 1;\r\n}\n\nfunction prepareValue(value) { return value; }\r\nclass Cell {\r\n    constructor(value, row, column, dataSet) {\r\n        this.value = value;\r\n        this.row = row;\r\n        this.column = column;\r\n        this.dataSet = dataSet;\r\n        this.newValue = '';\r\n        this.newValue = value;\r\n    }\r\n    getColumn() {\r\n        return this.column;\r\n    }\r\n    getRow() {\r\n        return this.row;\r\n    }\r\n    getValue() {\r\n        const valid = this.column.getValuePrepareFunction() instanceof Function;\r\n        const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\r\n        return prepare.call(null, this.value, this.row.getData(), this);\r\n    }\r\n    setValue(value) {\r\n        this.newValue = value;\r\n    }\r\n    getId() {\r\n        return this.getColumn().id;\r\n    }\r\n    getTitle() {\r\n        return this.getColumn().title;\r\n    }\r\n    isEditable() {\r\n        if (this.getRow().index === -1) {\r\n            return this.getColumn().isAddable;\r\n        }\r\n        else {\r\n            return this.getColumn().isEditable;\r\n        }\r\n    }\r\n}\r\nCell.PREPARE = prepareValue;\n\nclass Row {\r\n    constructor(index, data, _dataSet) {\r\n        this.index = index;\r\n        this.data = data;\r\n        this._dataSet = _dataSet;\r\n        this.isSelected = false;\r\n        this.isInEditing = false;\r\n        this.cells = [];\r\n        this.process();\r\n    }\r\n    getCell(column) {\r\n        return this.cells.find(el => el.getColumn() === column);\r\n    }\r\n    getCells() {\r\n        return this.cells;\r\n    }\r\n    getData() {\r\n        return this.data;\r\n    }\r\n    getIsSelected() {\r\n        return this.isSelected;\r\n    }\r\n    getNewData() {\r\n        const values = Object.assign({}, this.data);\r\n        this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\r\n        return values;\r\n    }\r\n    setData(data) {\r\n        this.data = data;\r\n        this.process();\r\n    }\r\n    process() {\r\n        this.cells = [];\r\n        this._dataSet.getColumns().forEach((column) => {\r\n            const cell = this.createCell(column);\r\n            this.cells.push(cell);\r\n        });\r\n    }\r\n    createCell(column) {\r\n        const defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\r\n        const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\r\n        return new Cell(value, this, column, this._dataSet);\r\n    }\r\n}\n\nclass Column {\r\n    constructor(id, settings, dataSet) {\r\n        this.id = id;\r\n        this.settings = settings;\r\n        this.dataSet = dataSet;\r\n        this.title = '';\r\n        this.type = '';\r\n        this.class = '';\r\n        this.width = '';\r\n        this.hide = false;\r\n        this.isSortable = false;\r\n        this.isEditable = true;\r\n        this.isAddable = true;\r\n        this.isFilterable = false;\r\n        this.sortDirection = '';\r\n        this.defaultSortDirection = '';\r\n        this.editor = { type: '', config: {}, component: null };\r\n        this.filter = { type: '', config: {}, component: null };\r\n        this.renderComponent = null;\r\n        this.process();\r\n    }\r\n    getOnComponentInitFunction() {\r\n        return this.onComponentInitFunction;\r\n    }\r\n    getCompareFunction() {\r\n        return this.compareFunction;\r\n    }\r\n    getValuePrepareFunction() {\r\n        return this.valuePrepareFunction;\r\n    }\r\n    getFilterFunction() {\r\n        return this.filterFunction;\r\n    }\r\n    getConfig() {\r\n        return this.editor && this.editor.config;\r\n    }\r\n    getFilterType() {\r\n        return this.filter && this.filter.type;\r\n    }\r\n    getFilterConfig() {\r\n        return this.filter && this.filter.config;\r\n    }\r\n    process() {\r\n        this.title = this.settings['title'];\r\n        this.class = this.settings['class'];\r\n        this.width = this.settings['width'];\r\n        this.hide = !!this.settings['hide'];\r\n        this.type = this.prepareType();\r\n        this.editor = this.settings['editor'];\r\n        this.filter = this.settings['filter'];\r\n        this.renderComponent = this.settings['renderComponent'];\r\n        this.isFilterable = typeof this.settings['filter'] === 'undefined' ? true : !!this.settings['filter'];\r\n        this.defaultSortDirection = ['asc', 'desc']\r\n            .indexOf(this.settings['sortDirection']) !== -1 ? this.settings['sortDirection'] : '';\r\n        this.isSortable = typeof this.settings['sort'] === 'undefined' ? true : !!this.settings['sort'];\r\n        this.isEditable = typeof this.settings['editable'] === 'undefined' ? true : !!this.settings['editable'];\r\n        this.isAddable = typeof this.settings['addable'] === 'undefined' ? true : !!this.settings['addable'];\r\n        this.sortDirection = this.prepareSortDirection();\r\n        this.compareFunction = this.settings['compareFunction'];\r\n        this.valuePrepareFunction = this.settings['valuePrepareFunction'];\r\n        this.filterFunction = this.settings['filterFunction'];\r\n        this.onComponentInitFunction = this.settings['onComponentInitFunction'];\r\n    }\r\n    prepareType() {\r\n        return this.settings['type'] || this.determineType();\r\n    }\r\n    prepareSortDirection() {\r\n        return this.settings['sort'] === 'desc' ? 'desc' : 'asc';\r\n    }\r\n    determineType() {\r\n        // TODO: determine type by data\r\n        return 'text';\r\n    }\r\n}\n\nclass DataSet {\r\n    constructor(data = [], columnSettings) {\r\n        this.columnSettings = columnSettings;\r\n        this.data = [];\r\n        this.columns = [];\r\n        this.rows = [];\r\n        this.createColumns(columnSettings);\r\n        this.setData(data);\r\n        this.createNewRow();\r\n    }\r\n    setData(data) {\r\n        this.data = data;\r\n        this.createRows();\r\n    }\r\n    getColumns() {\r\n        return this.columns;\r\n    }\r\n    getRows() {\r\n        return this.rows;\r\n    }\r\n    getFirstRow() {\r\n        return this.rows[0];\r\n    }\r\n    getLastRow() {\r\n        return this.rows[this.rows.length - 1];\r\n    }\r\n    findRowByData(data) {\r\n        return this.rows.find((row) => row.getData() === data);\r\n    }\r\n    deselectAll() {\r\n        this.rows.forEach((row) => {\r\n            row.isSelected = false;\r\n        });\r\n        // we need to clear selectedRow field because no one row selected\r\n        this.selectedRow = undefined;\r\n    }\r\n    selectRow(row) {\r\n        const previousIsSelected = row.isSelected;\r\n        this.deselectAll();\r\n        row.isSelected = !previousIsSelected;\r\n        this.selectedRow = row;\r\n        return this.selectedRow;\r\n    }\r\n    multipleSelectRow(row) {\r\n        row.isSelected = !row.isSelected;\r\n        this.selectedRow = row;\r\n        return this.selectedRow;\r\n    }\r\n    selectPreviousRow() {\r\n        if (this.rows.length > 0) {\r\n            let index = this.selectedRow ? this.selectedRow.index : 0;\r\n            if (index > this.rows.length - 1) {\r\n                index = this.rows.length - 1;\r\n            }\r\n            this.selectRow(this.rows[index]);\r\n            return this.selectedRow;\r\n        }\r\n    }\r\n    selectFirstRow() {\r\n        if (this.rows.length > 0) {\r\n            this.selectRow(this.rows[0]);\r\n            return this.selectedRow;\r\n        }\r\n    }\r\n    selectLastRow() {\r\n        if (this.rows.length > 0) {\r\n            this.selectRow(this.rows[this.rows.length - 1]);\r\n            return this.selectedRow;\r\n        }\r\n    }\r\n    selectRowByIndex(index) {\r\n        const rowsLength = this.rows.length;\r\n        if (rowsLength === 0) {\r\n            return;\r\n        }\r\n        if (!index) {\r\n            this.selectFirstRow();\r\n            return this.selectedRow;\r\n        }\r\n        if (index > 0 && index < rowsLength) {\r\n            this.selectRow(this.rows[index]);\r\n            return this.selectedRow;\r\n        }\r\n        // we need to deselect all rows if we got an incorrect index\r\n        this.deselectAll();\r\n    }\r\n    willSelectFirstRow() {\r\n        this.willSelect = 'first';\r\n    }\r\n    willSelectLastRow() {\r\n        this.willSelect = 'last';\r\n    }\r\n    select(selectedRowIndex) {\r\n        if (this.getRows().length === 0) {\r\n            return;\r\n        }\r\n        if (this.willSelect) {\r\n            if (this.willSelect === 'first') {\r\n                this.selectFirstRow();\r\n            }\r\n            if (this.willSelect === 'last') {\r\n                this.selectLastRow();\r\n            }\r\n            this.willSelect = '';\r\n        }\r\n        else {\r\n            this.selectRowByIndex(selectedRowIndex);\r\n        }\r\n        return this.selectedRow;\r\n    }\r\n    createNewRow() {\r\n        this.newRow = new Row(-1, {}, this);\r\n        this.newRow.isInEditing = true;\r\n    }\r\n    /**\r\n     * Create columns by mapping from the settings\r\n     * @param settings\r\n     * @private\r\n     */\r\n    createColumns(settings) {\r\n        for (const id in settings) {\r\n            if (settings.hasOwnProperty(id)) {\r\n                this.columns.push(new Column(id, settings[id], this));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Create rows based on current data prepared in data source\r\n     * @private\r\n     */\r\n    createRows() {\r\n        this.rows = [];\r\n        this.data.forEach((el, index) => {\r\n            this.rows.push(new Row(index, el, this));\r\n        });\r\n    }\r\n}\n\nclass Grid {\r\n    constructor(source, settings) {\r\n        this.createFormShown = false;\r\n        this.onSelectRowSource = new Subject();\r\n        this.onDeselectRowSource = new Subject();\r\n        this.setSettings(settings);\r\n        this.setSource(source);\r\n    }\r\n    detach() {\r\n        if (this.sourceOnChangedSubscription) {\r\n            this.sourceOnChangedSubscription.unsubscribe();\r\n        }\r\n        if (this.sourceOnUpdatedSubscription) {\r\n            this.sourceOnUpdatedSubscription.unsubscribe();\r\n        }\r\n    }\r\n    showActionColumn(position) {\r\n        return this.isCurrentActionsPosition(position) && this.isActionsVisible();\r\n    }\r\n    isCurrentActionsPosition(position) {\r\n        return position == this.getSetting('actions.position');\r\n    }\r\n    isActionsVisible() {\r\n        return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\r\n    }\r\n    isMultiSelectVisible() {\r\n        return this.getSetting('selectMode') === 'multi';\r\n    }\r\n    getNewRow() {\r\n        return this.dataSet.newRow;\r\n    }\r\n    setSettings(settings) {\r\n        this.settings = settings;\r\n        this.dataSet = new DataSet([], this.getSetting('columns'));\r\n        if (this.source) {\r\n            this.source.refresh();\r\n        }\r\n    }\r\n    getDataSet() {\r\n        return this.dataSet;\r\n    }\r\n    setSource(source) {\r\n        this.source = this.prepareSource(source);\r\n        this.detach();\r\n        this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes) => this.processDataChange(changes));\r\n        this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data) => {\r\n            const changedRow = this.dataSet.findRowByData(data);\r\n            changedRow.setData(data);\r\n        });\r\n    }\r\n    getSetting(name, defaultValue) {\r\n        return getDeepFromObject(this.settings, name, defaultValue);\r\n    }\r\n    getColumns() {\r\n        return this.dataSet.getColumns();\r\n    }\r\n    getRows() {\r\n        return this.dataSet.getRows();\r\n    }\r\n    selectRow(row) {\r\n        this.dataSet.selectRow(row);\r\n    }\r\n    multipleSelectRow(row) {\r\n        this.dataSet.multipleSelectRow(row);\r\n    }\r\n    onSelectRow() {\r\n        return this.onSelectRowSource.asObservable();\r\n    }\r\n    onDeselectRow() {\r\n        return this.onDeselectRowSource.asObservable();\r\n    }\r\n    edit(row) {\r\n        row.isInEditing = true;\r\n    }\r\n    create(row, confirmEmitter) {\r\n        const deferred = new Deferred();\r\n        deferred.promise.then((newData) => {\r\n            newData = newData ? newData : row.getNewData();\r\n            if (deferred.resolve.skipAdd) {\r\n                this.createFormShown = false;\r\n            }\r\n            else {\r\n                this.source.prepend(newData).then(() => {\r\n                    this.createFormShown = false;\r\n                    this.dataSet.createNewRow();\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            // doing nothing\r\n        });\r\n        if (this.getSetting('add.confirmCreate')) {\r\n            confirmEmitter.emit({\r\n                newData: row.getNewData(),\r\n                source: this.source,\r\n                confirm: deferred,\r\n            });\r\n        }\r\n        else {\r\n            deferred.resolve();\r\n        }\r\n    }\r\n    save(row, confirmEmitter) {\r\n        const deferred = new Deferred();\r\n        deferred.promise.then((newData) => {\r\n            newData = newData ? newData : row.getNewData();\r\n            if (deferred.resolve.skipEdit) {\r\n                row.isInEditing = false;\r\n            }\r\n            else {\r\n                this.source.update(row.getData(), newData).then(() => {\r\n                    row.isInEditing = false;\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            // doing nothing\r\n        });\r\n        if (this.getSetting('edit.confirmSave')) {\r\n            confirmEmitter.emit({\r\n                data: row.getData(),\r\n                newData: row.getNewData(),\r\n                source: this.source,\r\n                confirm: deferred,\r\n            });\r\n        }\r\n        else {\r\n            deferred.resolve();\r\n        }\r\n    }\r\n    delete(row, confirmEmitter) {\r\n        const deferred = new Deferred();\r\n        deferred.promise.then(() => {\r\n            this.source.remove(row.getData());\r\n        }).catch((err) => {\r\n            // doing nothing\r\n        });\r\n        if (this.getSetting('delete.confirmDelete')) {\r\n            confirmEmitter.emit({\r\n                data: row.getData(),\r\n                source: this.source,\r\n                confirm: deferred,\r\n            });\r\n        }\r\n        else {\r\n            deferred.resolve();\r\n        }\r\n    }\r\n    processDataChange(changes) {\r\n        if (this.shouldProcessChange(changes)) {\r\n            this.dataSet.setData(changes['elements']);\r\n            if (this.getSetting('selectMode') !== 'multi') {\r\n                const row = this.determineRowToSelect(changes);\r\n                if (row) {\r\n                    this.onSelectRowSource.next(row);\r\n                }\r\n                else {\r\n                    this.onDeselectRowSource.next(null);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    shouldProcessChange(changes) {\r\n        if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes['action']) !== -1) {\r\n            return true;\r\n        }\r\n        else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @breaking-change 1.8.0\r\n     * Need to add `| null` in return type\r\n     *\r\n     * TODO: move to selectable? Separate directive\r\n     */\r\n    determineRowToSelect(changes) {\r\n        if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\r\n            return this.dataSet.select(this.getRowIndexToSelect());\r\n        }\r\n        if (this.shouldSkipSelection()) {\r\n            return null;\r\n        }\r\n        if (changes['action'] === 'remove') {\r\n            if (changes['elements'].length === 0) {\r\n                // we have to store which one to select as the data will be reloaded\r\n                this.dataSet.willSelectLastRow();\r\n            }\r\n            else {\r\n                return this.dataSet.selectPreviousRow();\r\n            }\r\n        }\r\n        if (changes['action'] === 'append') {\r\n            // we have to store which one to select as the data will be reloaded\r\n            this.dataSet.willSelectLastRow();\r\n        }\r\n        if (changes['action'] === 'add') {\r\n            return this.dataSet.selectFirstRow();\r\n        }\r\n        if (changes['action'] === 'update') {\r\n            return this.dataSet.selectFirstRow();\r\n        }\r\n        if (changes['action'] === 'prepend') {\r\n            // we have to store which one to select as the data will be reloaded\r\n            this.dataSet.willSelectFirstRow();\r\n        }\r\n        return null;\r\n    }\r\n    prepareSource(source) {\r\n        const initialSource = this.getInitialSort();\r\n        if (initialSource && initialSource['field'] && initialSource['direction']) {\r\n            source.setSort([initialSource], false);\r\n        }\r\n        if (this.getSetting('pager.display') === true) {\r\n            source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\r\n        }\r\n        source.refresh();\r\n        return source;\r\n    }\r\n    getInitialSort() {\r\n        const sortConf = {};\r\n        this.getColumns().forEach((column) => {\r\n            if (column.isSortable && column.defaultSortDirection) {\r\n                sortConf['field'] = column.id;\r\n                sortConf['direction'] = column.defaultSortDirection;\r\n                sortConf['compare'] = column.getCompareFunction();\r\n            }\r\n        });\r\n        return sortConf;\r\n    }\r\n    getSelectedRows() {\r\n        return this.dataSet.getRows()\r\n            .filter(r => r.isSelected);\r\n    }\r\n    selectAllRows(status) {\r\n        this.dataSet.getRows()\r\n            .forEach(r => r.isSelected = status);\r\n    }\r\n    getFirstRow() {\r\n        return this.dataSet.getFirstRow();\r\n    }\r\n    getLastRow() {\r\n        return this.dataSet.getLastRow();\r\n    }\r\n    getSelectionInfo() {\r\n        const switchPageToSelectedRowPage = this.getSetting('switchPageToSelectedRowPage');\r\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex', 0)) || 0;\r\n        const { perPage, page } = this.getSetting('pager');\r\n        return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\r\n    }\r\n    getRowIndexToSelect() {\r\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\r\n        const dataAmount = this.source.count();\r\n        /**\r\n         * source - contains all table data\r\n         * dataSet - contains data for current page\r\n         * selectedRowIndex - contains index for data in all data\r\n         *\r\n         * because of that, we need to count index for a specific row in page\r\n         * if\r\n         * `switchPageToSelectedRowPage` - we need to change page automatically\r\n         * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\r\n         * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\r\n         *  if we return index witch not points to existing data - no line will be highlighted)\r\n         */\r\n        return (switchPageToSelectedRowPage &&\r\n            selectedRowIndex < dataAmount &&\r\n            selectedRowIndex >= 0) ?\r\n            selectedRowIndex % perPage :\r\n            selectedRowIndex;\r\n    }\r\n    getPageToSelect(source) {\r\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\r\n        let pageToSelect = Math.max(1, page);\r\n        if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\r\n            pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\r\n        }\r\n        const maxPageAmount = Math.ceil(source.count() / perPage);\r\n        return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\r\n    }\r\n    shouldSkipSelection() {\r\n        /**\r\n         * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\r\n         *\r\n         * Therefore, in order to select a row after some changes,\r\n         * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\r\n         *\r\n         * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\r\n         *\r\n         * !!! We should skip a row only in cases when `selectedRowIndex` < 0\r\n         * because when < 0 all lines must be deselected\r\n         */\r\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\r\n        return selectedRowIndex < 0;\r\n    }\r\n}\n\nclass DataSource {\r\n    constructor() {\r\n        this.onChangedSource = new Subject();\r\n        this.onAddedSource = new Subject();\r\n        this.onUpdatedSource = new Subject();\r\n        this.onRemovedSource = new Subject();\r\n    }\r\n    refresh() {\r\n        this.emitOnChanged('refresh');\r\n    }\r\n    load(data) {\r\n        this.emitOnChanged('load');\r\n        return Promise.resolve();\r\n    }\r\n    onChanged() {\r\n        return this.onChangedSource.asObservable();\r\n    }\r\n    onAdded() {\r\n        return this.onAddedSource.asObservable();\r\n    }\r\n    onUpdated() {\r\n        return this.onUpdatedSource.asObservable();\r\n    }\r\n    onRemoved() {\r\n        return this.onRemovedSource.asObservable();\r\n    }\r\n    prepend(element) {\r\n        this.emitOnAdded(element);\r\n        this.emitOnChanged('prepend');\r\n        return Promise.resolve();\r\n    }\r\n    append(element) {\r\n        this.emitOnAdded(element);\r\n        this.emitOnChanged('append');\r\n        return Promise.resolve();\r\n    }\r\n    add(element) {\r\n        this.emitOnAdded(element);\r\n        this.emitOnChanged('add');\r\n        return Promise.resolve();\r\n    }\r\n    remove(element) {\r\n        this.emitOnRemoved(element);\r\n        this.emitOnChanged('remove');\r\n        return Promise.resolve();\r\n    }\r\n    update(element, values) {\r\n        this.emitOnUpdated(element);\r\n        this.emitOnChanged('update');\r\n        return Promise.resolve();\r\n    }\r\n    empty() {\r\n        this.emitOnChanged('empty');\r\n        return Promise.resolve();\r\n    }\r\n    setSort(conf, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('sort');\r\n        }\r\n    }\r\n    setFilter(conf, andOperator, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('filter');\r\n        }\r\n    }\r\n    addFilter(fieldConf, andOperator, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('filter');\r\n        }\r\n    }\r\n    setPaging(page, perPage, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('paging');\r\n        }\r\n    }\r\n    setPage(page, doEmit) {\r\n        if (doEmit) {\r\n            this.emitOnChanged('page');\r\n        }\r\n    }\r\n    emitOnRemoved(element) {\r\n        this.onRemovedSource.next(element);\r\n    }\r\n    emitOnUpdated(element) {\r\n        this.onUpdatedSource.next(element);\r\n    }\r\n    emitOnAdded(element) {\r\n        this.onAddedSource.next(element);\r\n    }\r\n    emitOnChanged(action) {\r\n        this.getElements().then((elements) => this.onChangedSource.next({\r\n            action: action,\r\n            elements: elements,\r\n            paging: this.getPaging(),\r\n            filter: this.getFilter(),\r\n            sort: this.getSort(),\r\n        }));\r\n    }\r\n}\n\nfunction compareValues(direction, a, b) {\r\n    if (a < b) {\r\n        return -1 * direction;\r\n    }\r\n    if (a > b) {\r\n        return direction;\r\n    }\r\n    return 0;\r\n}\r\nclass LocalSorter {\r\n    static sort(data, field, direction, customCompare) {\r\n        const dir = (direction === 'asc') ? 1 : -1;\r\n        const compare = customCompare ? customCompare : compareValues;\r\n        return data.sort((a, b) => {\r\n            return compare.call(null, dir, a[field], b[field]);\r\n        });\r\n    }\r\n}\n\nfunction filterValues(value, search) {\r\n    return value.toString().toLowerCase().includes(search.toString().toLowerCase());\r\n}\r\nclass LocalFilter {\r\n    static filter(data, field, search, customFilter) {\r\n        const filter = customFilter ? customFilter : filterValues;\r\n        return data.filter((el) => {\r\n            const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\r\n            return filter.call(null, value, search);\r\n        });\r\n    }\r\n}\n\nclass LocalPager {\r\n    static paginate(data, page, perPage) {\r\n        return data.slice(perPage * (page - 1), perPage * page);\r\n    }\r\n}\n\nclass LocalDataSource extends DataSource {\r\n    constructor(data = []) {\r\n        super();\r\n        this.data = [];\r\n        this.filteredAndSorted = [];\r\n        this.sortConf = [];\r\n        this.filterConf = {\r\n            filters: [],\r\n            andOperator: true,\r\n        };\r\n        this.pagingConf = {};\r\n        this.data = data;\r\n    }\r\n    load(data) {\r\n        this.data = data;\r\n        return super.load(data);\r\n    }\r\n    prepend(element) {\r\n        this.reset(true);\r\n        this.data.unshift(element);\r\n        return super.prepend(element);\r\n    }\r\n    append(element) {\r\n        this.reset(true);\r\n        this.data.push(element);\r\n        return super.append(element);\r\n    }\r\n    add(element) {\r\n        this.data.push(element);\r\n        return super.add(element);\r\n    }\r\n    remove(element) {\r\n        this.data = this.data.filter(el => el !== element);\r\n        return super.remove(element);\r\n    }\r\n    update(element, values) {\r\n        return new Promise((resolve, reject) => {\r\n            this.find(element).then((found) => {\r\n                found = deepExtend(found, values);\r\n                super.update(found, values).then(resolve).catch(reject);\r\n            }).catch(reject);\r\n        });\r\n    }\r\n    find(element) {\r\n        const found = this.data.find(el => el === element);\r\n        if (found) {\r\n            return Promise.resolve(found);\r\n        }\r\n        return Promise.reject(new Error('Element was not found in the dataset'));\r\n    }\r\n    getElements() {\r\n        const data = this.data.slice(0);\r\n        return Promise.resolve(this.prepareData(data));\r\n    }\r\n    getFilteredAndSorted() {\r\n        let data = this.data.slice(0);\r\n        this.prepareData(data);\r\n        return Promise.resolve(this.filteredAndSorted);\r\n    }\r\n    getAll() {\r\n        const data = this.data.slice(0);\r\n        return Promise.resolve(data);\r\n    }\r\n    reset(silent = false) {\r\n        if (silent) {\r\n            this.filterConf = {\r\n                filters: [],\r\n                andOperator: true,\r\n            };\r\n            this.sortConf = [];\r\n            this.pagingConf['page'] = 1;\r\n        }\r\n        else {\r\n            this.setFilter([], true, false);\r\n            this.setSort([], false);\r\n            this.setPage(1);\r\n        }\r\n    }\r\n    empty() {\r\n        this.data = [];\r\n        return super.empty();\r\n    }\r\n    count() {\r\n        return this.filteredAndSorted.length;\r\n    }\r\n    /**\r\n     *\r\n     * Array of conf objects\r\n     * [\r\n     *  {field: string, direction: asc|desc|null, compare: Function|null},\r\n     * ]\r\n     * @param conf\r\n     * @param doEmit\r\n     * @returns {LocalDataSource}\r\n     */\r\n    setSort(conf, doEmit = true) {\r\n        if (conf !== null) {\r\n            conf.forEach((fieldConf) => {\r\n                if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {\r\n                    throw new Error('Sort configuration object is not valid');\r\n                }\r\n            });\r\n            this.sortConf = conf;\r\n        }\r\n        super.setSort(conf, doEmit);\r\n        return this;\r\n    }\r\n    /**\r\n     *\r\n     * Array of conf objects\r\n     * [\r\n     *  {field: string, search: string, filter: Function|null},\r\n     * ]\r\n     * @param conf\r\n     * @param andOperator\r\n     * @param doEmit\r\n     * @returns {LocalDataSource}\r\n     */\r\n    setFilter(conf, andOperator = true, doEmit = true) {\r\n        if (conf && conf.length > 0) {\r\n            conf.forEach((fieldConf) => {\r\n                this.addFilter(fieldConf, andOperator, false);\r\n            });\r\n        }\r\n        else {\r\n            this.filterConf = {\r\n                filters: [],\r\n                andOperator: true,\r\n            };\r\n        }\r\n        this.filterConf.andOperator = andOperator;\r\n        this.pagingConf['page'] = 1;\r\n        super.setFilter(conf, andOperator, doEmit);\r\n        return this;\r\n    }\r\n    addFilter(fieldConf, andOperator = true, doEmit = true) {\r\n        if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\r\n            throw new Error('Filter configuration object is not valid');\r\n        }\r\n        let found = false;\r\n        this.filterConf.filters.forEach((currentFieldConf, index) => {\r\n            if (currentFieldConf['field'] === fieldConf['field']) {\r\n                this.filterConf.filters[index] = fieldConf;\r\n                found = true;\r\n            }\r\n        });\r\n        if (!found) {\r\n            this.filterConf.filters.push(fieldConf);\r\n        }\r\n        this.filterConf.andOperator = andOperator;\r\n        super.addFilter(fieldConf, andOperator, doEmit);\r\n        return this;\r\n    }\r\n    setPaging(page, perPage, doEmit = true) {\r\n        this.pagingConf['page'] = page;\r\n        this.pagingConf['perPage'] = perPage;\r\n        super.setPaging(page, perPage, doEmit);\r\n        return this;\r\n    }\r\n    setPage(page, doEmit = true) {\r\n        this.pagingConf['page'] = page;\r\n        super.setPage(page, doEmit);\r\n        return this;\r\n    }\r\n    getSort() {\r\n        return this.sortConf;\r\n    }\r\n    getFilter() {\r\n        return this.filterConf;\r\n    }\r\n    getPaging() {\r\n        return this.pagingConf;\r\n    }\r\n    prepareData(data) {\r\n        data = this.filter(data);\r\n        data = this.sort(data);\r\n        this.filteredAndSorted = data.slice(0);\r\n        return this.paginate(data);\r\n    }\r\n    sort(data) {\r\n        if (this.sortConf) {\r\n            this.sortConf.forEach((fieldConf) => {\r\n                data = LocalSorter\r\n                    .sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\r\n            });\r\n        }\r\n        return data;\r\n    }\r\n    // TODO: refactor?\r\n    filter(data) {\r\n        if (this.filterConf.filters) {\r\n            if (this.filterConf.andOperator) {\r\n                this.filterConf.filters.forEach((fieldConf) => {\r\n                    if (fieldConf['search'].length > 0) {\r\n                        data = LocalFilter\r\n                            .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                let mergedData = [];\r\n                this.filterConf.filters.forEach((fieldConf) => {\r\n                    if (fieldConf['search'].length > 0) {\r\n                        mergedData = mergedData.concat(LocalFilter\r\n                            .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\r\n                    }\r\n                });\r\n                // remove non unique items\r\n                data = mergedData.filter((elem, pos, arr) => {\r\n                    return arr.indexOf(elem) === pos;\r\n                });\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    paginate(data) {\r\n        if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n            data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\r\n        }\r\n        return data;\r\n    }\r\n}\n\nfunction Ng2SmartTableComponent_thead_1_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r3 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"thead\", 4);\r\n        i0.ɵɵlistener(\"create\", function Ng2SmartTableComponent_thead_1_Template_thead_create_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return ctx_r2.create.emit($event); })(\"selectAllRows\", function Ng2SmartTableComponent_thead_1_Template_thead_selectAllRows_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onSelectAllRows($event); })(\"sort\", function Ng2SmartTableComponent_thead_1_Template_thead_sort_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r5 = i0.ɵɵnextContext(); return ctx_r5.sort($event); })(\"filter\", function Ng2SmartTableComponent_thead_1_Template_thead_filter_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.filter($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r0 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source)(\"createConfirm\", ctx_r0.createConfirm);\r\n    }\r\n}\r\nfunction Ng2SmartTableComponent_ng2_smart_table_pager_3_Template(rf, ctx) {\r\n    if (rf & 1) {\r\n        const _r8 = i0.ɵɵgetCurrentView();\r\n        i0.ɵɵelementStart(0, \"ng2-smart-table-pager\", 5);\r\n        i0.ɵɵlistener(\"changePage\", function Ng2SmartTableComponent_ng2_smart_table_pager_3_Template_ng2_smart_table_pager_changePage_0_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.changePage($event); });\r\n        i0.ɵɵelementEnd();\r\n    }\r\n    if (rf & 2) {\r\n        const ctx_r1 = i0.ɵɵnextContext();\r\n        i0.ɵɵproperty(\"source\", ctx_r1.source)(\"perPageSelect\", ctx_r1.perPageSelect);\r\n    }\r\n}\r\nclass Ng2SmartTableComponent {\r\n    constructor() {\r\n        this.settings = {};\r\n        this.rowSelect = new EventEmitter();\r\n        this.rowDeselect = new EventEmitter();\r\n        this.userRowSelect = new EventEmitter();\r\n        this.delete = new EventEmitter();\r\n        this.edit = new EventEmitter();\r\n        this.create = new EventEmitter();\r\n        this.custom = new EventEmitter();\r\n        this.deleteConfirm = new EventEmitter();\r\n        this.editConfirm = new EventEmitter();\r\n        this.createConfirm = new EventEmitter();\r\n        this.rowHover = new EventEmitter();\r\n        this.defaultSettings = {\r\n            mode: 'inline',\r\n            selectMode: 'single',\r\n            /**\r\n             * Points to an element in all data\r\n             *\r\n             * when < 0 all lines must be deselected\r\n             */\r\n            selectedRowIndex: 0,\r\n            switchPageToSelectedRowPage: false,\r\n            hideHeader: false,\r\n            hideSubHeader: false,\r\n            actions: {\r\n                columnTitle: 'Actions',\r\n                add: true,\r\n                edit: true,\r\n                delete: true,\r\n                custom: [],\r\n                position: 'left', // left|right\r\n            },\r\n            filter: {\r\n                inputClass: '',\r\n            },\r\n            edit: {\r\n                inputClass: '',\r\n                editButtonContent: 'Edit',\r\n                saveButtonContent: 'Update',\r\n                cancelButtonContent: 'Cancel',\r\n                confirmSave: false,\r\n            },\r\n            add: {\r\n                inputClass: '',\r\n                addButtonContent: 'Add New',\r\n                createButtonContent: 'Create',\r\n                cancelButtonContent: 'Cancel',\r\n                confirmCreate: false,\r\n            },\r\n            delete: {\r\n                deleteButtonContent: 'Delete',\r\n                confirmDelete: false,\r\n            },\r\n            attr: {\r\n                id: '',\r\n                class: '',\r\n            },\r\n            noDataMessage: 'No data found',\r\n            columns: {},\r\n            pager: {\r\n                display: true,\r\n                page: 1,\r\n                perPage: 10,\r\n            },\r\n            rowClassFunction: () => '',\r\n        };\r\n        this.isAllSelected = false;\r\n        this.destroyed$ = new Subject();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.grid) {\r\n            if (changes['settings']) {\r\n                this.grid.setSettings(this.prepareSettings());\r\n            }\r\n            if (changes['source']) {\r\n                this.source = this.prepareSource();\r\n                this.grid.setSource(this.source);\r\n            }\r\n        }\r\n        else {\r\n            this.initGrid();\r\n        }\r\n        this.tableId = this.grid.getSetting('attr.id');\r\n        this.tableClass = this.grid.getSetting('attr.class');\r\n        this.isHideHeader = this.grid.getSetting('hideHeader');\r\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n        this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\r\n        this.rowClassFunction = this.grid.getSetting('rowClassFunction');\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroyed$.next();\r\n    }\r\n    selectRow(index, switchPageToSelectedRowPage = this.grid.getSetting('switchPageToSelectedRowPage')) {\r\n        if (!this.grid) {\r\n            return;\r\n        }\r\n        this.grid.settings.selectedRowIndex = index;\r\n        if (this.isIndexOutOfRange(index)) {\r\n            // we need to deselect all rows if we got an incorrect index\r\n            this.deselectAllRows();\r\n            return;\r\n        }\r\n        if (switchPageToSelectedRowPage) {\r\n            const source = this.source;\r\n            const paging = source.getPaging();\r\n            const page = getPageForRowIndex(index, paging.perPage);\r\n            index = index % paging.perPage;\r\n            this.grid.settings.selectedRowIndex = index;\r\n            if (page !== paging.page) {\r\n                source.setPage(page);\r\n                return;\r\n            }\r\n        }\r\n        const row = this.grid.getRows()[index];\r\n        if (row) {\r\n            this.onSelectRow(row);\r\n        }\r\n        else {\r\n            // we need to deselect all rows if we got an incorrect index\r\n            this.deselectAllRows();\r\n        }\r\n    }\r\n    deselectAllRows() {\r\n        this.grid.dataSet.deselectAll();\r\n        this.emitDeselectRow(null);\r\n    }\r\n    editRowSelect(row) {\r\n        if (this.grid.getSetting('selectMode') === 'multi') {\r\n            this.onMultipleSelectRow(row);\r\n        }\r\n        else {\r\n            this.onSelectRow(row);\r\n        }\r\n    }\r\n    onUserSelectRow(row) {\r\n        if (this.grid.getSetting('selectMode') !== 'multi') {\r\n            this.grid.selectRow(row);\r\n            this.emitUserSelectRow(row);\r\n            this.emitSelectRow(row);\r\n        }\r\n    }\r\n    onRowHover(row) {\r\n        this.rowHover.emit(row);\r\n    }\r\n    multipleSelectRow(row) {\r\n        this.grid.multipleSelectRow(row);\r\n        this.emitUserSelectRow(row);\r\n        this.emitSelectRow(row);\r\n    }\r\n    onSelectAllRows($event) {\r\n        this.isAllSelected = !this.isAllSelected;\r\n        this.grid.selectAllRows(this.isAllSelected);\r\n        this.emitUserSelectRow(null);\r\n        this.emitSelectRow(null);\r\n    }\r\n    onSelectRow(row) {\r\n        this.grid.selectRow(row);\r\n        this.emitSelectRow(row);\r\n    }\r\n    onMultipleSelectRow(row) {\r\n        this.emitSelectRow(row);\r\n    }\r\n    initGrid() {\r\n        this.source = this.prepareSource();\r\n        this.grid = new Grid(this.source, this.prepareSettings());\r\n        this.subscribeToOnSelectRow();\r\n        this.subscribeToOnDeselectRow();\r\n    }\r\n    prepareSource() {\r\n        if (this.source instanceof DataSource) {\r\n            return this.source;\r\n        }\r\n        else if (this.source instanceof Array) {\r\n            return new LocalDataSource(this.source);\r\n        }\r\n        return new LocalDataSource();\r\n    }\r\n    prepareSettings() {\r\n        return deepExtend({}, this.defaultSettings, this.settings);\r\n    }\r\n    changePage($event) {\r\n        this.resetAllSelector();\r\n    }\r\n    sort($event) {\r\n        this.resetAllSelector();\r\n    }\r\n    filter($event) {\r\n        this.resetAllSelector();\r\n    }\r\n    resetAllSelector() {\r\n        this.isAllSelected = false;\r\n    }\r\n    emitUserSelectRow(row) {\r\n        const selectedRows = this.grid.getSelectedRows();\r\n        this.userRowSelect.emit({\r\n            data: row ? row.getData() : null,\r\n            isSelected: row ? row.getIsSelected() : null,\r\n            source: this.source,\r\n            selected: selectedRows && selectedRows.length ? selectedRows.map((r) => r.getData()) : [],\r\n        });\r\n    }\r\n    emitSelectRow(row) {\r\n        const data = {\r\n            data: row ? row.getData() : null,\r\n            isSelected: row ? row.getIsSelected() : null,\r\n            source: this.source,\r\n        };\r\n        this.rowSelect.emit(data);\r\n        if (!(row === null || row === void 0 ? void 0 : row.isSelected)) {\r\n            this.rowDeselect.emit(data);\r\n        }\r\n    }\r\n    emitDeselectRow(row) {\r\n        this.rowDeselect.emit({\r\n            data: row ? row.getData() : null,\r\n            isSelected: row ? row.getIsSelected() : null,\r\n            source: this.source,\r\n        });\r\n    }\r\n    isIndexOutOfRange(index) {\r\n        var _a;\r\n        const dataAmount = (_a = this.source) === null || _a === void 0 ? void 0 : _a.count();\r\n        return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\r\n    }\r\n    subscribeToOnSelectRow() {\r\n        if (this.onSelectRowSubscription) {\r\n            this.onSelectRowSubscription.unsubscribe();\r\n        }\r\n        this.onSelectRowSubscription = this.grid.onSelectRow()\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((row) => {\r\n            this.emitSelectRow(row);\r\n        });\r\n    }\r\n    subscribeToOnDeselectRow() {\r\n        if (this.onDeselectRowSubscription) {\r\n            this.onDeselectRowSubscription.unsubscribe();\r\n        }\r\n        this.onDeselectRowSubscription = this.grid.onDeselectRow()\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((row) => {\r\n            this.emitDeselectRow(row);\r\n        });\r\n    }\r\n}\r\nNg2SmartTableComponent.ɵfac = function Ng2SmartTableComponent_Factory(t) { return new (t || Ng2SmartTableComponent)(); };\r\nNg2SmartTableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableComponent, selectors: [[\"ng2-smart-table\"]], inputs: { source: \"source\", settings: \"settings\" }, outputs: { rowSelect: \"rowSelect\", rowDeselect: \"rowDeselect\", userRowSelect: \"userRowSelect\", delete: \"delete\", edit: \"edit\", create: \"create\", custom: \"custom\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", rowHover: \"rowHover\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 4, vars: 9, consts: [[3, \"id\", \"ngClass\"], [\"ng2-st-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\", 4, \"ngIf\"], [\"ng2-st-tbody\", \"\", 3, \"grid\", \"source\", \"deleteConfirm\", \"editConfirm\", \"rowClassFunction\", \"edit\", \"delete\", \"custom\", \"userSelectRow\", \"editRowSelect\", \"multipleSelectRow\", \"rowHover\"], [3, \"source\", \"perPageSelect\", \"changePage\", 4, \"ngIf\"], [\"ng2-st-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\"], [3, \"source\", \"perPageSelect\", \"changePage\"]], template: function Ng2SmartTableComponent_Template(rf, ctx) {\r\n        if (rf & 1) {\r\n            i0.ɵɵelementStart(0, \"table\", 0);\r\n            i0.ɵɵtemplate(1, Ng2SmartTableComponent_thead_1_Template, 1, 4, \"thead\", 1);\r\n            i0.ɵɵelementStart(2, \"tbody\", 2);\r\n            i0.ɵɵlistener(\"edit\", function Ng2SmartTableComponent_Template_tbody_edit_2_listener($event) { return ctx.edit.emit($event); })(\"delete\", function Ng2SmartTableComponent_Template_tbody_delete_2_listener($event) { return ctx.delete.emit($event); })(\"custom\", function Ng2SmartTableComponent_Template_tbody_custom_2_listener($event) { return ctx.custom.emit($event); })(\"userSelectRow\", function Ng2SmartTableComponent_Template_tbody_userSelectRow_2_listener($event) { return ctx.onUserSelectRow($event); })(\"editRowSelect\", function Ng2SmartTableComponent_Template_tbody_editRowSelect_2_listener($event) { return ctx.editRowSelect($event); })(\"multipleSelectRow\", function Ng2SmartTableComponent_Template_tbody_multipleSelectRow_2_listener($event) { return ctx.multipleSelectRow($event); })(\"rowHover\", function Ng2SmartTableComponent_Template_tbody_rowHover_2_listener($event) { return ctx.onRowHover($event); });\r\n            i0.ɵɵelementEnd()();\r\n            i0.ɵɵtemplate(3, Ng2SmartTableComponent_ng2_smart_table_pager_3_Template, 1, 2, \"ng2-smart-table-pager\", 3);\r\n        }\r\n        if (rf & 2) {\r\n            i0.ɵɵproperty(\"id\", ctx.tableId)(\"ngClass\", ctx.tableClass);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader || !ctx.isHideSubHeader);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"grid\", ctx.grid)(\"source\", ctx.source)(\"deleteConfirm\", ctx.deleteConfirm)(\"editConfirm\", ctx.editConfirm)(\"rowClassFunction\", ctx.rowClassFunction);\r\n            i0.ɵɵadvance(1);\r\n            i0.ɵɵproperty(\"ngIf\", ctx.isPagerDisplay);\r\n        }\r\n    }, directives: [i1.NgClass, i1.NgIf, Ng2SmartTableTheadComponent, Ng2SmartTableTbodyComponent, PagerComponent], styles: [\"[_nghost-%COMP%]{font-size:1rem}[_nghost-%COMP%]     *{box-sizing:border-box}[_nghost-%COMP%]     button, [_nghost-%COMP%]     input, [_nghost-%COMP%]     optgroup, [_nghost-%COMP%]     select, [_nghost-%COMP%]     textarea{color:inherit;font:inherit;margin:0}[_nghost-%COMP%]     table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}[_nghost-%COMP%]     table tr th{font-weight:700}[_nghost-%COMP%]     table tr section{font-size:.75em;font-weight:700}[_nghost-%COMP%]     table tr td, [_nghost-%COMP%]     table tr th{font-size:.875em;margin:0;padding:.5em 1em}[_nghost-%COMP%]     a{color:#1e6bb8;text-decoration:none}[_nghost-%COMP%]     a:hover{text-decoration:underline}\"] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableComponent, [{\r\n            type: Component,\r\n            args: [{ selector: 'ng2-smart-table', template: \"<table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\r\\n\\r\\n  <thead ng2-st-thead *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\r\\n                      [grid]=\\\"grid\\\"\\r\\n                      [isAllSelected]=\\\"isAllSelected\\\"\\r\\n                      [source]=\\\"source\\\"\\r\\n                      [createConfirm]=\\\"createConfirm\\\"\\r\\n                      (create)=\\\"create.emit($event)\\\"\\r\\n                      (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\r\\n                      (sort)=\\\"sort($event)\\\"\\r\\n                      (filter)=\\\"filter($event)\\\">\\r\\n  </thead>\\r\\n\\r\\n  <tbody ng2-st-tbody [grid]=\\\"grid\\\"\\r\\n                      [source]=\\\"source\\\"\\r\\n                      [deleteConfirm]=\\\"deleteConfirm\\\"\\r\\n                      [editConfirm]=\\\"editConfirm\\\"\\r\\n                      [rowClassFunction]=\\\"rowClassFunction\\\"\\r\\n                      (edit)=\\\"edit.emit($event)\\\"\\r\\n                      (delete)=\\\"delete.emit($event)\\\"\\r\\n                      (custom)=\\\"custom.emit($event)\\\"\\r\\n                      (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\r\\n                      (editRowSelect)=\\\"editRowSelect($event)\\\"\\r\\n                      (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\r\\n                      (rowHover)=\\\"onRowHover($event)\\\">\\r\\n  </tbody>\\r\\n\\r\\n</table>\\r\\n\\r\\n<ng2-smart-table-pager *ngIf=\\\"isPagerDisplay\\\"\\r\\n                        [source]=\\\"source\\\"\\r\\n                        [perPageSelect]=\\\"perPageSelect\\\"\\r\\n                        (changePage)=\\\"changePage($event)\\\">\\r\\n</ng2-smart-table-pager>\\r\\n\", styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}\\n\"] }]\r\n        }], null, { source: [{\r\n                type: Input\r\n            }], settings: [{\r\n                type: Input\r\n            }], rowSelect: [{\r\n                type: Output\r\n            }], rowDeselect: [{\r\n                type: Output\r\n            }], userRowSelect: [{\r\n                type: Output\r\n            }], delete: [{\r\n                type: Output\r\n            }], edit: [{\r\n                type: Output\r\n            }], create: [{\r\n                type: Output\r\n            }], custom: [{\r\n                type: Output\r\n            }], deleteConfirm: [{\r\n                type: Output\r\n            }], editConfirm: [{\r\n                type: Output\r\n            }], createConfirm: [{\r\n                type: Output\r\n            }], rowHover: [{\r\n                type: Output\r\n            }] });\r\n})();\n\nclass Ng2SmartTableModule {\r\n}\r\nNg2SmartTableModule.ɵfac = function Ng2SmartTableModule_Factory(t) { return new (t || Ng2SmartTableModule)(); };\r\nNg2SmartTableModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: Ng2SmartTableModule });\r\nNg2SmartTableModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n            FormsModule,\r\n            ReactiveFormsModule,\r\n            CellModule,\r\n            FilterModule,\r\n            PagerModule,\r\n            TBodyModule,\r\n            THeadModule,\r\n        ]] });\r\n(function () {\r\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableModule, [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        CellModule,\r\n                        FilterModule,\r\n                        PagerModule,\r\n                        TBodyModule,\r\n                        THeadModule,\r\n                    ],\r\n                    declarations: [\r\n                        Ng2SmartTableComponent,\r\n                    ],\r\n                    exports: [\r\n                        Ng2SmartTableComponent,\r\n                    ],\r\n                }]\r\n        }], null, null);\r\n})();\r\n(function () {\r\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(Ng2SmartTableModule, { declarations: [Ng2SmartTableComponent], imports: [CommonModule,\r\n            FormsModule,\r\n            ReactiveFormsModule,\r\n            CellModule,\r\n            FilterModule,\r\n            PagerModule,\r\n            TBodyModule,\r\n            THeadModule], exports: [Ng2SmartTableComponent] });\r\n})();\n\nclass ServerSourceConf {\r\n    constructor({ endPoint = '', sortFieldKey = '', sortDirKey = '', pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\r\n        this.endPoint = endPoint ? endPoint : '';\r\n        this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\r\n        this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\r\n        this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\r\n        this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\r\n        this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\r\n        this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\r\n        this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\r\n    }\r\n}\r\nServerSourceConf.SORT_FIELD_KEY = '_sort';\r\nServerSourceConf.SORT_DIR_KEY = '_order';\r\nServerSourceConf.PAGER_PAGE_KEY = '_page';\r\nServerSourceConf.PAGER_LIMIT_KEY = '_limit';\r\nServerSourceConf.FILTER_FIELD_KEY = '#field#_like';\r\nServerSourceConf.TOTAL_KEY = 'x-total-count';\r\nServerSourceConf.DATA_KEY = '';\n\nclass ServerDataSource extends LocalDataSource {\r\n    constructor(http, conf = {}) {\r\n        super();\r\n        this.http = http;\r\n        this.lastRequestCount = 0;\r\n        this.conf = new ServerSourceConf(conf);\r\n        if (!this.conf.endPoint) {\r\n            throw new Error('At least endPoint must be specified as a configuration of the server data source.');\r\n        }\r\n    }\r\n    count() {\r\n        return this.lastRequestCount;\r\n    }\r\n    getElements() {\r\n        return this.requestElements()\r\n            .pipe(map(res => {\r\n            this.lastRequestCount = this.extractTotalFromResponse(res);\r\n            this.data = this.extractDataFromResponse(res);\r\n            return this.data;\r\n        })).toPromise();\r\n    }\r\n    /**\r\n     * Extracts array of data from server response\r\n     * @param res\r\n     * @returns {any}\r\n     */\r\n    extractDataFromResponse(res) {\r\n        const rawData = res.body;\r\n        const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\r\n        if (data instanceof Array) {\r\n            return data;\r\n        }\r\n        throw new Error(`Data must be an array.\r\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\r\n    }\r\n    /**\r\n     * Extracts total rows count from the server response\r\n     * Looks for the count in the heders first, then in the response body\r\n     * @param res\r\n     * @returns {any}\r\n     */\r\n    extractTotalFromResponse(res) {\r\n        if (res.headers.has(this.conf.totalKey)) {\r\n            return +res.headers.get(this.conf.totalKey);\r\n        }\r\n        else {\r\n            const rawData = res.body;\r\n            return getDeepFromObject(rawData, this.conf.totalKey, 0);\r\n        }\r\n    }\r\n    requestElements() {\r\n        let httpParams = this.createRequesParams();\r\n        return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\r\n    }\r\n    createRequesParams() {\r\n        let httpParams = new HttpParams();\r\n        httpParams = this.addSortRequestParams(httpParams);\r\n        httpParams = this.addFilterRequestParams(httpParams);\r\n        return this.addPagerRequestParams(httpParams);\r\n    }\r\n    addSortRequestParams(httpParams) {\r\n        if (this.sortConf) {\r\n            this.sortConf.forEach((fieldConf) => {\r\n                httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\r\n                httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\r\n            });\r\n        }\r\n        return httpParams;\r\n    }\r\n    addFilterRequestParams(httpParams) {\r\n        if (this.filterConf.filters) {\r\n            this.filterConf.filters.forEach((fieldConf) => {\r\n                if (fieldConf['search']) {\r\n                    httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\r\n                }\r\n            });\r\n        }\r\n        return httpParams;\r\n    }\r\n    addPagerRequestParams(httpParams) {\r\n        if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n            httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\r\n            httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\r\n        }\r\n        return httpParams;\r\n    }\r\n}\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { Cell, DefaultEditor, DefaultFilter, LocalDataSource, Ng2SmartTableComponent, Ng2SmartTableModule, ServerDataSource };\n//# sourceMappingURL=cgokceli-ng2-smart-table.mjs.map\n","map":{"version":3,"file":"cgokceli-ng2-smart-table.mjs","sources":["../../../projects/ng2-smart-table/src/lib/components/cell/cell-view-mode/custom-view.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-view-mode/view-cell.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/edit-cell-default.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/custom-edit.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/default-editor.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/select-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/textarea-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/checkbox-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/completer-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-editors/input-editor.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/default-edit.component.html","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/default-edit.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell-edit-mode/edit-cell.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell.component.ts","../../../projects/ng2-smart-table/src/lib/components/cell/cell.module.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-default.ts","../../../projects/ng2-smart-table/src/lib/components/filter/custom-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/default-filter.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/select-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/checkbox-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/completer-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter-types/input-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/default-filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter.component.ts","../../../projects/ng2-smart-table/src/lib/components/filter/filter.module.ts","../../../projects/ng2-smart-table/src/lib/components/pager/pager.component.ts","../../../projects/ng2-smart-table/src/lib/components/pager/pager.module.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/cells/custom.component.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/cells/edit-delete.component.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/cells/create-cancel.component.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/tbody.component.html","../../../projects/ng2-smart-table/src/lib/components/tbody/tbody.component.ts","../../../projects/ng2-smart-table/src/lib/components/tbody/tbody.module.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/checkbox-select-all.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/actions-title.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/title/title.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/column-title.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/rows/thead-titles-row.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/add-button.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/rows/thead-filters-row.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/cells/actions.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/rows/thead-form-row.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/thead.component.html","../../../projects/ng2-smart-table/src/lib/components/thead/thead.component.ts","../../../projects/ng2-smart-table/src/lib/components/thead/thead.module.ts","../../../projects/ng2-smart-table/src/lib/lib/helpers.ts","../../../projects/ng2-smart-table/src/lib/lib/data-set/cell.ts","../../../projects/ng2-smart-table/src/lib/lib/data-set/row.ts","../../../projects/ng2-smart-table/src/lib/lib/data-set/column.ts","../../../projects/ng2-smart-table/src/lib/lib/data-set/data-set.ts","../../../projects/ng2-smart-table/src/lib/lib/grid.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/data-source.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/local/local.sorter.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/local/local.filter.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/local/local.pager.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/local/local.data-source.ts","../../../projects/ng2-smart-table/src/lib/ng2-smart-table.component.html","../../../projects/ng2-smart-table/src/lib/ng2-smart-table.component.ts","../../../projects/ng2-smart-table/src/lib/ng2-smart-table.module.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/server/server-source.conf.ts","../../../projects/ng2-smart-table/src/lib/lib/data-source/server/server.data-source.ts","../../../projects/ng2-smart-table/src/cgokceli-ng2-smart-table.ts"],"sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  ComponentFactoryResolver,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  OnInit,\r\n  OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\nimport { ViewCell } from './view-cell';\r\n\r\n@Component({\r\n  selector: 'custom-view-component',\r\n  template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n})\r\nexport class CustomViewComponent implements OnInit, OnDestroy {\r\n\r\n  customComponent: any;\r\n  @Input() cell: Cell;\r\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.cell && !this.customComponent) {\r\n      this.createCustomComponent();\r\n      this.callOnComponentInit();\r\n      this.patchInstance();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n\r\n  protected createCustomComponent() {\r\n    const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\r\n    this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n  }\r\n\r\n  protected callOnComponentInit() {\r\n    const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\r\n    onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\r\n  }\r\n\r\n  protected patchInstance() {\r\n    Object.assign(this.customComponent.instance, this.getPatch());\r\n  }\r\n\r\n  protected getPatch(): ViewCell {\r\n    return {\r\n      value: this.cell.getValue(),\r\n      rowData: this.cell.getRow().getData()\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-view-mode',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div [ngSwitch]=\"cell.getColumn().type\">\r\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\r\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\r\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\r\n    </div>\r\n    `,\r\n})\r\nexport class ViewCellComponent {\r\n\r\n  @Input() cell: Cell;\r\n}\r\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class EditCellDefault {\r\n\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event: any): boolean {\r\n    this.edited.next(event);\r\n    return false;\r\n  }\r\n\r\n  onStopEditing(): boolean {\r\n    this.cell.getRow().isInEditing = false;\r\n    return false;\r\n  }\r\n\r\n  onClick(event: any) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { EditCellDefault } from './edit-cell-default';\r\n\r\n@Component({\r\n  selector: 'table-cell-custom-editor',\r\n  template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n})\r\nexport class CustomEditComponent extends EditCellDefault implements OnChanges, OnDestroy {\r\n\r\n  customComponent: any;\r\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.cell && !this.customComponent) {\r\n      const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\r\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n\r\n      // set @Inputs and @Outputs of custom component\r\n      this.customComponent.instance.cell = this.cell;\r\n      this.customComponent.instance.inputClass = this.inputClass;\r\n      this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\r\n      this.customComponent.instance.onEdited.subscribe((event: any) => this.onEdited(event));\r\n      this.customComponent.instance.onClick.subscribe((event: any) => this.onClick(event));\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n}\r\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport class DefaultEditor implements Editor {\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string;\r\n\r\n  @Output() onStopEditing = new EventEmitter<any>();\r\n  @Output() onEdited = new EventEmitter<any>();\r\n  @Output() onClick = new EventEmitter<any>();\r\n}\r\n\r\nexport interface Editor {\r\n  cell: Cell;\r\n  inputClass: string;\r\n  onStopEditing: EventEmitter<any>;\r\n  onEdited: EventEmitter<any>;\r\n  onClick: EventEmitter<any>;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'select-editor',\r\n  template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"cell.newValue\"\r\n            [name]=\"cell.getId()\"\r\n            [disabled]=\"!cell.isEditable()\"\r\n            (click)=\"onClick.emit($event)\"\r\n            (keydown.enter)=\"onEdited.emit($event)\"\r\n            (keydown.esc)=\"onStopEditing.emit()\">\r\n\r\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\r\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\r\n        </option>\r\n    </select>\r\n    `,\r\n})\r\nexport class SelectEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'textarea-editor',\r\n  styleUrls: ['./editor.component.scss'],\r\n  template: `\r\n    <textarea [ngClass]=\"inputClass\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"cell.newValue\"\r\n              [name]=\"cell.getId()\"\r\n              [disabled]=\"!cell.isEditable()\"\r\n              [placeholder]=\"cell.getTitle()\"\r\n              (click)=\"onClick.emit($event)\"\r\n              (keydown.enter)=\"onEdited.emit($event)\"\r\n              (keydown.esc)=\"onStopEditing.emit()\">\r\n    </textarea>\r\n    `,\r\n})\r\nexport class TextareaEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'checkbox-editor',\r\n  styleUrls: ['./editor.component.scss'],\r\n  template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           type=\"checkbox\"\r\n           class=\"form-control\"\r\n           [name]=\"cell.getId()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (change)=\"onChange($event)\">\r\n    `,\r\n})\r\nexport class CheckboxEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  onChange(event: any) {\r\n    const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\r\n    const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\r\n    this.cell.newValue = event.target.checked ? trueVal : falseVal;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CompleterService } from 'ng2-completer';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'completer-editor',\r\n  template: `\r\n    <ng2-completer [(ngModel)]=\"completerStr\"\r\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\r\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\r\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"onEditedCompleter($event)\">\r\n    </ng2-completer>\r\n    `,\r\n})\r\nexport class CompleterEditorComponent extends DefaultEditor implements OnInit {\r\n\r\n  completerStr: string = '';\r\n\r\n  constructor(private completerService: CompleterService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\r\n      const config = this.cell.getColumn().getConfig().completer;\r\n      config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n      config.dataService.descriptionField(config.descriptionField);\r\n    }\r\n  }\r\n\r\n  onEditedCompleter(event: { title: '' }): boolean {\r\n    this.cell.newValue = event.title;\r\n    return false;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'input-editor',\r\n  styleUrls: ['./editor.component.scss'],\r\n  template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           class=\"form-control\"\r\n           [(ngModel)]=\"cell.newValue\"\r\n           [name]=\"cell.getId()\"\r\n           [placeholder]=\"cell.getTitle()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (keydown.enter)=\"onEdited.emit($event)\"\r\n           (keydown.esc)=\"onStopEditing.emit()\">\r\n    `,\r\n})\r\nexport class InputEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","<div [ngSwitch]=\"getEditorType()\">\r\n    <select-editor *ngSwitchCase=\"'list'\"\r\n                   [cell]=\"cell\"\r\n                   [inputClass]=\"inputClass\"\r\n                   (onClick)=\"onClick($event)\"\r\n                   (onEdited)=\"onEdited($event)\"\r\n                   (onStopEditing)=\"onStopEditing()\">\r\n    </select-editor>\r\n\r\n    <textarea-editor *ngSwitchCase=\"'textarea'\"\r\n                     [cell]=\"cell\"\r\n                     [inputClass]=\"inputClass\"\r\n                     (onClick)=\"onClick($event)\"\r\n                     (onEdited)=\"onEdited($event)\"\r\n                     (onStopEditing)=\"onStopEditing()\">\r\n    </textarea-editor>\r\n\r\n    <checkbox-editor *ngSwitchCase=\"'checkbox'\"\r\n                     [cell]=\"cell\"\r\n                     [inputClass]=\"inputClass\"\r\n                     (onClick)=\"onClick($event)\">\r\n    </checkbox-editor>\r\n\r\n    <completer-editor *ngSwitchCase=\"'completer'\"\r\n                      [cell]=\"cell\">\r\n    </completer-editor>\r\n\r\n    <input-editor *ngSwitchDefault\r\n                  [cell]=\"cell\"\r\n                  [inputClass]=\"inputClass\"\r\n                  (onClick)=\"onClick($event)\"\r\n                  (onEdited)=\"onEdited($event)\"\r\n                  (onStopEditing)=\"onStopEditing()\">\r\n    </input-editor>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nimport { EditCellDefault } from './edit-cell-default';\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-default-editor',\r\n  templateUrl: './default-edit.component.html',\r\n})\r\nexport class DefaultEditComponent extends EditCellDefault {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getEditorType(): string {\r\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-edit-mode',\r\n  template: `\r\n      <div [ngSwitch]=\"getEditorType()\">\r\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-custom-editor>\r\n        <table-cell-default-editor *ngSwitchDefault\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-default-editor>\r\n      </div>\r\n    `,\r\n})\r\nexport class EditCellComponent {\r\n\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event: any): boolean {\r\n    this.edited.next(event);\r\n    return false;\r\n  }\r\n\r\n  getEditorType(): string {\r\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { Cell } from '../../lib/data-set/cell';\r\nimport { Row } from '../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-cell',\r\n  template: `\r\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\r\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\r\n                          [inputClass]=\"inputClass\"\r\n                          (edited)=\"onEdited($event)\">\r\n    </table-cell-edit-mode>\r\n  `,\r\n})\r\nexport class CellComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n  @Input() createConfirm: EventEmitter<any>;\r\n  @Input() isNew: boolean;\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n  @Input() mode: string = 'inline';\r\n  @Input() isInEditing: boolean = false;\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event: any) {\r\n    if (this.isNew) {\r\n      this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n    } else {\r\n      this.grid.save(this.row, this.editConfirm);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Ng2CompleterModule } from 'ng2-completer';\r\n\r\nimport { CellComponent } from './cell.component';\r\nimport { CustomEditComponent } from './cell-edit-mode/custom-edit.component';\r\nimport { DefaultEditComponent } from './cell-edit-mode/default-edit.component';\r\nimport { EditCellComponent } from './cell-edit-mode/edit-cell.component';\r\nimport { CheckboxEditorComponent } from './cell-editors/checkbox-editor.component';\r\nimport { CompleterEditorComponent } from './cell-editors/completer-editor.component';\r\nimport { InputEditorComponent } from './cell-editors/input-editor.component';\r\nimport { SelectEditorComponent } from './cell-editors/select-editor.component';\r\nimport { TextareaEditorComponent } from './cell-editors/textarea-editor.component';\r\nimport { CustomViewComponent } from './cell-view-mode/custom-view.component';\r\nimport { ViewCellComponent } from './cell-view-mode/view-cell.component';\r\nimport { EditCellDefault } from './cell-edit-mode/edit-cell-default';\r\nimport { DefaultEditor } from './cell-editors/default-editor';\r\n\r\nconst CELL_COMPONENTS = [\r\n  CellComponent,\r\n  EditCellDefault,\r\n  DefaultEditor,\r\n  CustomEditComponent,\r\n  DefaultEditComponent,\r\n  EditCellComponent,\r\n  CheckboxEditorComponent,\r\n  CompleterEditorComponent,\r\n  InputEditorComponent,\r\n  SelectEditorComponent,\r\n  TextareaEditorComponent,\r\n  CustomViewComponent,\r\n  ViewCellComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    Ng2CompleterModule,\r\n  ],\r\n  declarations: [\r\n    ...CELL_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...CELL_COMPONENTS,\r\n  ],\r\n})\r\nexport class CellModule { }\r\n","import { Output, EventEmitter, Input, Component } from '@angular/core';\r\n\r\nimport { Column } from '../../lib/data-set/column';\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport class FilterDefault {\r\n\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() filter = new EventEmitter<any>();\r\n\r\n  query: string = '';\r\n\r\n  onFilter(query: string) {\r\n    this.source.addFilter({\r\n      field: this.column.id,\r\n      search: query,\r\n      filter: this.column.getFilterFunction(),\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver, Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { FilterDefault } from './filter-default';\r\n\r\n@Component({\r\n  selector: 'custom-table-filter',\r\n  template: `<ng-template #dynamicTarget></ng-template>`,\r\n})\r\nexport class CustomFilterComponent extends FilterDefault implements OnChanges, OnDestroy {\r\n  @Input() query: string;\r\n  customComponent: any;\r\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.column && !this.customComponent) {\r\n      const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\r\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n\r\n      // set @Inputs and @Outputs of custom component\r\n      this.customComponent.instance.query = this.query;\r\n      this.customComponent.instance.column = this.column;\r\n      this.customComponent.instance.source = this.source;\r\n      this.customComponent.instance.inputClass = this.inputClass;\r\n      this.customComponent.instance.filter.subscribe((event: any) => this.onFilter(event));\r\n    }\r\n    if (this.customComponent) {\r\n      this.customComponent.instance.ngOnChanges(changes);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n}\r\n","import { Input, Output, EventEmitter, OnDestroy, Component } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Column } from '../../../lib/data-set/column';\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport class DefaultFilter implements Filter, OnDestroy {\r\n\r\n  delay: number = 300;\r\n  changesSubscription: Subscription;\r\n  @Input() query: string;\r\n  @Input() inputClass: string;\r\n  @Input() column: Column;\r\n  @Output() filter = new EventEmitter<string>();\r\n\r\n  ngOnDestroy() {\r\n    if (this.changesSubscription) {\r\n      this.changesSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  setFilter() {\r\n    this.filter.emit(this.query);\r\n  }\r\n}\r\n\r\nexport interface Filter {\r\n\r\n  delay?: number;\r\n  changesSubscription?: Subscription;\r\n  query: string;\r\n  inputClass: string;\r\n  column: Column;\r\n  filter: EventEmitter<string>;\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { distinctUntilChanged, debounceTime, skip } from 'rxjs/operators';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\n\r\n@Component({\r\n  selector: 'select-filter',\r\n  template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            #inputControl\r\n            [(ngModel)]=\"query\">\r\n\r\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\r\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\r\n          {{ option.title }}\r\n        </option>\r\n    </select>\r\n  `,\r\n})\r\nexport class SelectFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  @ViewChild('inputControl', { read: NgControl, static: true }) inputControl: NgControl;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputControl.valueChanges\r\n      .pipe(\r\n        skip(1),\r\n        distinctUntilChanged(),\r\n        debounceTime(this.delay)\r\n      )\r\n      .subscribe((value: string) => this.setFilter());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'checkbox-filter',\r\n  template: `\r\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n    <a href=\"#\" *ngIf=\"filterActive\"\r\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\r\n  `,\r\n})\r\nexport class CheckboxFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  filterActive: boolean = false;\r\n  inputControl = new FormControl();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.changesSubscription = this.inputControl.valueChanges\r\n      .pipe(debounceTime(this.delay))\r\n      .subscribe((checked: boolean) => {\r\n        this.filterActive = true;\r\n        const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\r\n        const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\r\n        this.query = checked ? trueVal : falseVal;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  resetFilter(event: any) {\r\n    event.preventDefault();\r\n    this.query = '';\r\n    this.inputControl.setValue(false, { emitEvent: false });\r\n    this.filterActive = false;\r\n    this.setFilter();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { CompleterService } from 'ng2-completer';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport { distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'completer-filter',\r\n  template: `\r\n    <ng2-completer [(ngModel)]=\"query\"\r\n                   (ngModelChange)=\"inputTextChanged($event)\"\r\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\r\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\r\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"completerContent.next($event)\">\r\n    </ng2-completer>\r\n  `,\r\n})\r\nexport class CompleterFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  completerContent = new Subject<any>();\r\n\r\n  constructor(private completerService: CompleterService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const config = this.column.getFilterConfig().completer;\r\n    config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n    config.dataService.descriptionField(config.descriptionField);\r\n\r\n    this.changesSubscription = this.completerContent\r\n      .pipe(\r\n        map((ev: any) => (ev && ev.title) || ev || ''),\r\n        distinctUntilChanged(),\r\n        debounceTime(this.delay)\r\n      )\r\n      .subscribe((search: string) => {\r\n        this.query = search;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  inputTextChanged(event: string) {\r\n    // workaround to trigger the search event when the home/end buttons are clicked\r\n    // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\r\n    // so here it gets called manually\r\n    if (event === '') {\r\n      this.completerContent.next(event);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { debounceTime, distinctUntilChanged, skip } from 'rxjs/operators';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\n\r\n@Component({\r\n  selector: 'input-filter',\r\n  template: `\r\n    <input\r\n      [ngClass]=\"inputClass\"\r\n      [formControl]=\"inputControl\"\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      placeholder=\"{{ column.title }}\"/>\r\n  `,\r\n})\r\nexport class InputFilterComponent extends DefaultFilter implements OnInit, OnChanges {\r\n\r\n  inputControl = new FormControl();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.query) {\r\n      this.inputControl.setValue(this.query);\r\n    }\r\n    this.inputControl.valueChanges\r\n      .pipe(\r\n        distinctUntilChanged(),\r\n        debounceTime(this.delay),\r\n      )\r\n      .subscribe((value: string) => {\r\n        this.query = this.inputControl.value;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.query) {\r\n      this.inputControl.setValue(this.query);\r\n    }\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\n\r\nimport {FilterDefault} from \"./filter-default\";\r\n\r\n@Component({\r\n  selector: 'default-table-filter',\r\n  template: `\r\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\r\n      <select-filter *ngSwitchCase=\"'list'\"\r\n                     [query]=\"query\"\r\n                     [ngClass]=\"inputClass\"\r\n                     [column]=\"column\"\r\n                     (filter)=\"onFilter($event)\">\r\n      </select-filter>\r\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\r\n                       [query]=\"query\"\r\n                       [ngClass]=\"inputClass\"\r\n                       [column]=\"column\"\r\n                       (filter)=\"onFilter($event)\">\r\n      </checkbox-filter>\r\n      <completer-filter *ngSwitchCase=\"'completer'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </completer-filter>\r\n      <input-filter *ngSwitchDefault\r\n                    [query]=\"query\"\r\n                    [ngClass]=\"inputClass\"\r\n                    [column]=\"column\"\r\n                    (filter)=\"onFilter($event)\">\r\n      </input-filter>\r\n    </ng-container>\r\n  `,\r\n})\r\nexport class DefaultFilterComponent extends FilterDefault {\r\n  @Input() query: string;\r\n}\r\n","import { Component, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FilterDefault } from './filter-default';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-filter',\r\n  styleUrls: ['./filter.component.scss'],\r\n  template: `\r\n      <div class=\"ng2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\r\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\r\n                             [query]=\"query\"\r\n                             [column]=\"column\"\r\n                             [source]=\"source\"\r\n                             [inputClass]=\"inputClass\"\r\n                             (filter)=\"onFilter($event)\">\r\n        </custom-table-filter>\r\n        <default-table-filter *ngSwitchDefault\r\n                              [query]=\"query\"\r\n                              [column]=\"column\"\r\n                              [source]=\"source\"\r\n                              [inputClass]=\"inputClass\"\r\n                              (filter)=\"onFilter($event)\">\r\n        </default-table-filter>\r\n      </div>\r\n    `,\r\n})\r\nexport class FilterComponent extends FilterDefault implements OnChanges {\r\n  query: string = '';\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        const filterConf = this.source.getFilter();\r\n        if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\r\n          this.query = '';\r\n\r\n          // add a check for existing filters an set the query if one exists for this column\r\n          // this covers instances where the filter is set by user code while maintaining existing functionality\r\n        } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\r\n          filterConf.filters.forEach((k: any, v: any) => {\r\n            if (k.field == this.column.id) {\r\n              this.query = k.search;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2CompleterModule } from 'ng2-completer';\r\n\r\nimport { FilterComponent } from './filter.component';\r\nimport { DefaultFilterComponent } from \"./default-filter.component\";\r\nimport { CustomFilterComponent } from \"./custom-filter.component\";\r\nimport { CheckboxFilterComponent } from './filter-types/checkbox-filter.component';\r\nimport { CompleterFilterComponent } from './filter-types/completer-filter.component';\r\nimport { InputFilterComponent } from './filter-types/input-filter.component';\r\nimport { SelectFilterComponent } from './filter-types/select-filter.component';\r\nimport { DefaultFilter } from './filter-types/default-filter';\r\nimport { FilterDefault } from './filter-default';\r\n\r\nconst FILTER_COMPONENTS = [\r\n  FilterDefault,\r\n  DefaultFilter,\r\n  FilterComponent,\r\n  DefaultFilterComponent,\r\n  CustomFilterComponent,\r\n  CheckboxFilterComponent,\r\n  CompleterFilterComponent,\r\n  InputFilterComponent,\r\n  SelectFilterComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Ng2CompleterModule,\r\n  ],\r\n  declarations: [\r\n    ...FILTER_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...FILTER_COMPONENTS,\r\n  ],\r\n})\r\nexport class FilterModule { }\r\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-pager',\r\n  styleUrls: ['./pager.component.scss'],\r\n  template: `\r\n    <nav *ngIf=\"shouldShow()\" class=\"ng2-smart-pagination-nav\">\r\n      <ul class=\"ng2-smart-pagination pagination\">\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span class=\"sr-only\">First</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link page-link-prev\" href=\"#\"\r\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\r\n            <span aria-hidden=\"true\">&lt;</span>\r\n            <span class=\"sr-only\">Prev</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\r\n          <span class=\"ng2-smart-page-link page-link\"\r\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\r\n        </li>\r\n\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link page-link-next\" href=\"#\"\r\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\r\n            <span aria-hidden=\"true\">&gt;</span>\r\n            <span class=\"sr-only\">Next</span>\r\n          </a>\r\n        </li>\r\n        \r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span class=\"sr-only\">Last</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    \r\n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"ng2-smart-pagination-per-page\">\r\n      <label for=\"per-page\">\r\n        Per Page:\r\n      </label>\r\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\r\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\r\n      </select>\r\n    </nav>\r\n  `,\r\n})\r\nexport class PagerComponent implements OnChanges {\r\n\r\n  @Input() source: DataSource;\r\n  @Input() perPageSelect: any[] = [];\r\n\r\n  @Output() changePage = new EventEmitter<any>();\r\n\r\n  currentPerPage: any;\r\n\r\n  protected pages: Array<any>;\r\n  protected page: number;\r\n  protected count: number = 0;\r\n  protected perPage: number;\r\n\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        this.page = this.source.getPaging().page;\r\n        this.perPage = this.source.getPaging().perPage;\r\n        this.currentPerPage = this.perPage;\r\n        this.count = this.source.count();\r\n        if (this.isPageOutOfBounce()) {\r\n          this.source.setPage(--this.page);\r\n        }\r\n\r\n        this.processPageChange(dataChanges);\r\n        this.initPages();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * We change the page here depending on the action performed against data source\r\n   * if a new element was added to the end of the table - then change the page to the last\r\n   * if a new element was added to the beginning of the table - then to the first page\r\n   * @param changes\r\n   */\r\n  processPageChange(changes: any) {\r\n    if (changes['action'] === 'prepend') {\r\n      this.source.setPage(1);\r\n    }\r\n    if (changes['action'] === 'append') {\r\n      this.source.setPage(this.getLast());\r\n    }\r\n  }\r\n\r\n  shouldShow(): boolean {\r\n    return this.source.count() > this.perPage;\r\n  }\r\n\r\n  paginate(page: number): boolean {\r\n    this.source.setPage(page);\r\n    this.page = page;\r\n    this.changePage.emit({ page });\r\n    return false;\r\n  }\r\n\r\n  next(): boolean {\r\n    return this.paginate(this.getPage() + 1);\r\n  }\r\n\r\n  prev(): boolean {\r\n    return this.paginate(this.getPage() - 1);\r\n  }\r\n\r\n  getPage(): number {\r\n    return this.page;\r\n  }\r\n\r\n  getPages(): Array<any> {\r\n    return this.pages;\r\n  }\r\n\r\n  getLast(): number {\r\n    return Math.ceil(this.count / this.perPage);\r\n  }\r\n\r\n  isPageOutOfBounce(): boolean {\r\n    return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\r\n  }\r\n\r\n  initPages() {\r\n    const pagesCount = this.getLast();\r\n    let showPagesCount = 4;\r\n    showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\r\n    this.pages = [];\r\n\r\n    if (this.shouldShow()) {\r\n\r\n      let middleOne = Math.ceil(showPagesCount / 2);\r\n      middleOne = this.page >= middleOne ? this.page : middleOne;\r\n\r\n      let lastOne = middleOne + Math.floor(showPagesCount / 2);\r\n      lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\r\n\r\n      const firstOne = lastOne - showPagesCount + 1;\r\n\r\n      for (let i = firstOne; i <= lastOne; i++) {\r\n        this.pages.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangePerPage(event: any) {\r\n    if (this.currentPerPage) {\r\n\r\n      if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\r\n        this.source.getPaging().perPage = null;\r\n      } else {\r\n        this.source.getPaging().perPage = this.currentPerPage * 1;\r\n        this.source.refresh();\r\n      }\r\n      this.initPages();\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { PagerComponent } from './pager.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    PagerComponent,\r\n  ],\r\n  exports: [\r\n    PagerComponent,\r\n  ],\r\n})\r\nexport class PagerModule { }\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n    selector: 'ng2-st-tbody-custom',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    template: `\r\n      <a *ngFor=\"let action of grid.getSetting('actions.custom')\" href=\"#\"\r\n         class=\"ng2-smart-action ng2-smart-action-custom-custom\" \r\n         [innerHTML]=\"action.title\"\r\n         (click)=\"onCustom(action, $event)\"></a>\r\n        `\r\n})\r\nexport class TbodyCustomComponent {\r\n\r\n    @Input() grid: Grid;\r\n    @Input() row: Row;\r\n    @Input() source: any;\r\n    @Output() custom = new EventEmitter<any>();\r\n\r\n    onCustom(action: any, event: any) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        this.custom.emit({\r\n            action: action.name,\r\n            data: this.row.getData(),\r\n            source: this.source\r\n        });\r\n    }\r\n\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-st-tbody-edit-delete',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"ng2-smart-action ng2-smart-action-edit-edit\"\r\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\r\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"ng2-smart-action ng2-smart-action-delete-delete\"\r\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\r\n  `,\r\n})\r\nexport class TbodyEditDeleteComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() source: DataSource;\r\n  @Input() deleteConfirm: EventEmitter<any>;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() editRowSelect = new EventEmitter<any>();\r\n\r\n  isActionEdit: boolean;\r\n  isActionDelete: boolean;\r\n  editRowButtonContent: string;\r\n  deleteRowButtonContent: string;\r\n\r\n  onEdit(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.editRowSelect.emit(this.row);\r\n\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.edit.emit({\r\n        data: this.row.getData(),\r\n        source: this.source,\r\n      });\r\n    } else {\r\n      this.grid.edit(this.row);\r\n    }\r\n  }\r\n\r\n  onDelete(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.delete.emit({\r\n        data: this.row.getData(),\r\n        source: this.source,\r\n      });\r\n    } else {\r\n      this.grid.delete(this.row, this.deleteConfirm);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.isActionEdit = this.grid.getSetting('actions.edit');\r\n    this.isActionDelete = this.grid.getSetting('actions.delete');\r\n    this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\r\n    this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\r\n  }\r\n}\r\n","import { Component, Input, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: 'ng2-st-tbody-create-cancel',\r\n  template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-save\"\r\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\r\n  `,\r\n})\r\nexport class TbodyCreateCancelComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n\r\n  cancelButtonContent: string;\r\n  saveButtonContent: string;\r\n\r\n  onSave(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.grid.save(this.row, this.editConfirm);\r\n  }\r\n\r\n  onCancelEdit(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.row.isInEditing = false;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\r\n    this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent')\r\n  }\r\n}\r\n","<tr *ngFor=\"let row of grid.getRows()\" (click)=\"userSelectRow.emit(row)\" (mouseover)=\"rowHover.emit(row)\" class=\"ng2-smart-row\" [className]=\"rowClassFunction(row)\" [ngClass]=\"{selected: row.isSelected}\">\r\n  <td *ngIf=\"isMultiSelectVisible\" class=\"ng2-smart-actions ng2-smart-action-multiple-select\" (click)=\"multipleSelectRow.emit(row)\">\r\n    <input type=\"checkbox\" class=\"form-control\" [ngModel]=\"row.isSelected\">\r\n  </td>\r\n  <td *ngIf=\"!row.isInEditing && showActionColumnLeft\" class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-custom [grid]=\"grid\" (custom)=\"custom.emit($event)\" [row]=\"row\" [source]=\"source\"></ng2-st-tbody-custom>\r\n\r\n    <ng2-st-tbody-edit-delete [grid]=\"grid\"\r\n                              [deleteConfirm]=\"deleteConfirm\"\r\n                              [editConfirm]=\"editConfirm\"\r\n                              (edit)=\"edit.emit(row)\"\r\n                              (delete)=\"delete.emit(row)\"\r\n                              (editRowSelect)=\"editRowSelect.emit($event)\"\r\n                              [row]=\"row\"\r\n                              [source]=\"source\">\r\n    </ng2-st-tbody-edit-delete>\r\n  </td>\r\n   <td *ngIf=\"row.isInEditing && showActionColumnLeft\"  class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\"></ng2-st-tbody-create-cancel>\r\n  </td>\r\n  <td *ngFor=\"let cell of getVisibleCells(row.cells)\">\r\n    <ng2-smart-table-cell [cell]=\"cell\"\r\n                          [grid]=\"grid\"\r\n                          [row]=\"row\"\r\n                          [isNew]=\"false\"\r\n                          [mode]=\"mode\"\r\n                          [editConfirm]=\"editConfirm\"\r\n                          [inputClass]=\"editInputClass\"\r\n                          [isInEditing]=\"row.isInEditing\">\r\n    </ng2-smart-table-cell>\r\n  </td>\r\n\r\n  <td *ngIf=\"row.isInEditing && showActionColumnRight\"  class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\"></ng2-st-tbody-create-cancel>\r\n  </td>\r\n\r\n  <td *ngIf=\"!row.isInEditing && showActionColumnRight\" class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-custom [grid]=\"grid\" (custom)=\"custom.emit($event)\" [row]=\"row\" [source]=\"source\"></ng2-st-tbody-custom>\r\n\r\n    <ng2-st-tbody-edit-delete [grid]=\"grid\"\r\n                              [deleteConfirm]=\"deleteConfirm\"\r\n                              [editConfirm]=\"editConfirm\"\r\n                              [row]=\"row\"\r\n                              [source]=\"source\"\r\n                              (edit)=\"edit.emit(row)\"\r\n                              (delete)=\"delete.emit(row)\"\r\n                              (editRowSelect)=\"editRowSelect.emit($event)\">\r\n    </ng2-st-tbody-edit-delete>\r\n  </td>\r\n</tr>\r\n\r\n<tr *ngIf=\"grid.getRows().length == 0\">\r\n  <td [attr.colspan]=\"tableColumnsCount\">\r\n    {{ noDataMessage }}\r\n  </td>\r\n</tr>\r\n","import {Component, Input, Output, EventEmitter, } from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\nimport { Cell } from '../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: '[ng2-st-tbody]',\r\n  styleUrls: ['./tbody.component.scss'],\r\n  templateUrl: './tbody.component.html',\r\n})\r\nexport class Ng2SmartTableTbodyComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n  @Input() deleteConfirm: EventEmitter<any>;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n  @Input() rowClassFunction: Function;\r\n\r\n  @Output() save = new EventEmitter<any>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() custom = new EventEmitter<any>();\r\n  @Output() edited = new EventEmitter<any>();\r\n  @Output() userSelectRow = new EventEmitter<any>();\r\n  @Output() editRowSelect = new EventEmitter<any>();\r\n  @Output() multipleSelectRow = new EventEmitter<any>();\r\n  @Output() rowHover = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n  mode: string;\r\n  editInputClass: string;\r\n  isActionAdd: boolean;\r\n  isActionEdit: boolean;\r\n  isActionDelete: boolean;\r\n  noDataMessage: boolean;\r\n\r\n  get tableColumnsCount() {\r\n    const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\r\n    return this.grid.getColumns().length + actionColumns;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.mode = this.grid.getSetting('mode');\r\n    this.editInputClass = this.grid.getSetting('edit.inputClass');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    this.isActionAdd = this.grid.getSetting('actions.add');\r\n    this.isActionEdit = this.grid.getSetting('actions.edit');\r\n    this.isActionDelete = this.grid.getSetting('actions.delete');\r\n    this.noDataMessage = this.grid.getSetting('noDataMessage');\r\n  }\r\n\r\n  getVisibleCells(cells: Array<Cell>): Array<Cell> {\r\n    return (cells || []).filter((cell: Cell) => !cell.getColumn().hide);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { CellModule } from '../cell/cell.module';\r\n\r\nimport { Ng2SmartTableTbodyComponent } from './tbody.component';\r\nimport { TbodyCreateCancelComponent } from './cells/create-cancel.component';\r\nimport { TbodyEditDeleteComponent } from './cells/edit-delete.component';\r\nimport { TbodyCustomComponent } from './cells/custom.component';\r\n\r\nconst TBODY_COMPONENTS = [\r\n  TbodyCreateCancelComponent,\r\n  TbodyEditDeleteComponent,\r\n  TbodyCustomComponent,\r\n  Ng2SmartTableTbodyComponent\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    CellModule,\r\n  ],\r\n  declarations: [\r\n    ...TBODY_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...TBODY_COMPONENTS,\r\n  ],\r\n})\r\nexport class TBodyModule { }\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: '[ng2-st-checkbox-select-all]',\r\n  template: `\r\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\r\n  `,\r\n})\r\nexport class CheckboxSelectAllComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n  @Input() isAllSelected: boolean;\r\n}\r\n","import {Component, Input, AfterViewInit, ElementRef, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: '[ng2-st-actions-title]',\r\n  template: `\r\n    <div class=\"ng2-smart-title\">{{ actionsColumnTitle }}</div>\r\n  `,\r\n})\r\nexport class ActionsTitleComponent implements AfterViewInit, OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n\r\n  actionsColumnTitle: string;\r\n\r\n  constructor(private ref: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.ref.nativeElement.classList.add('ng2-smart-actions');\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { DataSource } from '../../../../lib/data-source/data-source';\r\nimport { Column } from '../../../../lib/data-set/column';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-title',\r\n  styleUrls: ['./title.component.scss'],\r\n  template: `\r\n    <a href=\"#\" *ngIf=\"column.isSortable\"\r\n                (click)=\"_sort($event)\"\r\n                class=\"ng2-smart-sort-link sort\"\r\n                [ngClass]=\"currentDirection\">\r\n      {{ column.title }}\r\n    </a>\r\n    <span class=\"ng2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\r\n  `,\r\n})\r\nexport class TitleComponent implements OnChanges {\r\n\r\n  currentDirection = '';\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n  @Output() sort = new EventEmitter<any>();\r\n\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        const sortConf = this.source.getSort();\r\n\r\n        if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\r\n          this.currentDirection = sortConf[0]['direction'];\r\n        } else {\r\n          this.currentDirection = '';\r\n        }\r\n\r\n        sortConf.forEach((fieldConf: any) => {\r\n\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  _sort(event: any) {\r\n    event.preventDefault();\r\n    this.changeSortDirection();\r\n    this.source.setSort([\r\n      {\r\n        field: this.column.id,\r\n        direction: this.currentDirection,\r\n        compare: this.column.getCompareFunction(),\r\n      },\r\n    ]);\r\n    this.sort.emit(null);\r\n  }\r\n\r\n  changeSortDirection(): string {\r\n    if (this.currentDirection) {\r\n      const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\r\n      this.currentDirection = newDirection;\r\n    } else {\r\n      this.currentDirection = this.column.sortDirection;\r\n    }\r\n    return this.currentDirection;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Column } from '../../../lib/data-set/column';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-st-column-title',\r\n  template: `\r\n    <div class=\"ng2-smart-title\">\r\n      <ng2-smart-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-smart-table-title>\r\n    </div>\r\n  `,\r\n})\r\nexport class ColumnTitleComponent {\r\n\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() sort = new EventEmitter<any>();\r\n\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\nimport { Column } from \"../../../lib/data-set/column\";\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-titles-row]',\r\n  template: `\r\n    <th ng2-st-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\r\n                                   [grid]=\"grid\"\r\n                                   [source]=\"source\"\r\n                                   [isAllSelected]=\"isAllSelected\"\r\n                                   (click)=\"selectAllRows.emit($event)\">\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\r\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\r\n        class=\"ng2-smart-th {{ column.id }}\"\r\n        [ngClass]=\"column.class\"\r\n        [style.width]=\"column.width\">\r\n      <ng2-st-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-st-column-title>\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\r\n  `,\r\n})\r\nexport class TheadTitlesRowComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() isAllSelected: boolean;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() sort = new EventEmitter<any>();\r\n  @Output() selectAllRows = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n\r\n\r\n  ngOnChanges() {\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n  }\r\n\r\n  getVisibleColumns(columns: Array<Column>): Array<Column> {\r\n    return (columns || []).filter((column: Column) => !column.hide);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, AfterViewInit, ElementRef, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: '[ng2-st-add-button]',\r\n  template: `\r\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-add\"\r\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\r\n  `,\r\n})\r\nexport class AddButtonComponent implements AfterViewInit, OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  isActionAdd: boolean;\r\n  addNewButtonContent: string;\r\n\r\n  constructor(private ref: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.ref.nativeElement.classList.add('ng2-smart-actions-title', 'ng2-smart-actions-title-add');\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.isActionAdd = this.grid.getSetting('actions.add');\r\n    this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\r\n  }\r\n\r\n  onAdd(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.create.emit({\r\n        source: this.source,\r\n      });\r\n    } else {\r\n      this.grid.createFormShown = true;\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\nimport { Column } from \"../../../lib/data-set/column\";\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-filters-row]',\r\n  template: `\r\n    <th *ngIf=\"isMultiSelectVisible\"></th>\r\n    <th ng2-st-add-button *ngIf=\"showActionColumnLeft\"\r\n                          [grid]=\"grid\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"ng2-smart-th {{ column.id }}\">\r\n      <ng2-smart-table-filter [source]=\"source\"\r\n                              [column]=\"column\"\r\n                              [inputClass]=\"filterInputClass\"\r\n                              (filter)=\"filter.emit($event)\">\r\n      </ng2-smart-table-filter>\r\n    </th>\r\n    <th ng2-st-add-button *ngIf=\"showActionColumnRight\"\r\n                          [grid]=\"grid\"\r\n                          [source]=\"source\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n  `,\r\n})\r\nexport class TheadFitlersRowComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() create = new EventEmitter<any>();\r\n  @Output() filter = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n  filterInputClass: string;\r\n\r\n  ngOnChanges() {\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    this.filterInputClass = this.grid.getSetting('filter.inputClass');\r\n  }\r\n\r\n  getVisibleColumns(columns: Array<Column>): Array<Column> {\r\n    return (columns || []).filter((column: Column) => !column.hide);\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: 'ng2-st-actions',\r\n  template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-create\"\r\n        [innerHTML]=\"createButtonContent\"\r\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\"\r\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\r\n  `,\r\n})\r\nexport class ActionsComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  createButtonContent: string;\r\n  cancelButtonContent: string;\r\n\r\n  ngOnChanges() {\r\n    this.createButtonContent = this.grid.getSetting('add.createButtonContent');\r\n    this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-form-row]',\r\n  template: `\r\n      <td *ngIf=\"\"></td>\r\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\r\n        <ng2-smart-table-cell [cell]=\"cell\"\r\n                              [grid]=\"grid\"\r\n                              [isNew]=\"true\"\r\n                              [createConfirm]=\"createConfirm\"\r\n                              [inputClass]=\"addInputClass\"\r\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\r\n                              (edited)=\"onCreate($event)\">\r\n        </ng2-smart-table-cell>\r\n      </td>\r\n      <td  *ngIf=\"showActionColumnRight\"  class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n  `,\r\n})\r\nexport class TheadFormRowComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() createConfirm: EventEmitter<any>;\r\n\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n  addInputClass: string;\r\n\r\n  onCreate(event: any) {\r\n    event.stopPropagation();\r\n\r\n    this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    this.addInputClass = this.grid.getSetting('add.inputClass');\r\n  }\r\n\r\n  getVisibleCells(cells: Array<Cell>): Array<Cell> {\r\n    return (cells || []).filter((cell: Cell) => !cell.getColumn().hide);\r\n  }\r\n}\r\n","<tr ng2-st-thead-titles-row *ngIf=\"!isHideHeader\"\r\n                            class=\"ng2-smart-titles\"\r\n                            [grid]=\"grid\"\r\n                            [isAllSelected]=\"isAllSelected\"\r\n                            [source]=\"source\"\r\n                            (sort)=\"sort.emit($event)\"\r\n                            (selectAllRows)=\"selectAllRows.emit($event)\">\r\n</tr>\r\n\r\n<tr ng2-st-thead-filters-row *ngIf=\"!isHideSubHeader\"\r\n                              class=\"ng2-smart-filters\"\r\n                              [grid]=\"grid\"\r\n                              [source]=\"source\"\r\n                              (create)=\"create.emit($event)\"\r\n                              (filter)=\"filter.emit($event)\">\r\n</tr>\r\n\r\n<tr ng2-st-thead-form-row *ngIf=\"grid.createFormShown\"\r\n                          [grid]=\"grid\"\r\n                          [createConfirm]=\"createConfirm\">\r\n</tr>\r\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n    selector: '[ng2-st-thead]',\r\n    templateUrl: './thead.component.html',\r\n})\r\nexport class Ng2SmartTableTheadComponent implements OnChanges {\r\n\r\n    @Input() grid: Grid;\r\n    @Input() source: DataSource;\r\n    @Input() isAllSelected: boolean;\r\n    @Input() createConfirm: EventEmitter<any>;\r\n\r\n    @Output() sort = new EventEmitter<any>();\r\n    @Output() selectAllRows = new EventEmitter<any>();\r\n    @Output() create = new EventEmitter<any>();\r\n    @Output() filter = new EventEmitter<any>();\r\n\r\n    isHideHeader: boolean;\r\n    isHideSubHeader: boolean;\r\n\r\n  ngOnChanges() {\r\n      this.isHideHeader = this.grid.getSetting('hideHeader');\r\n      this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { FilterModule } from '../filter/filter.module';\r\nimport { CellModule } from '../cell/cell.module';\r\n\r\nimport { Ng2SmartTableTheadComponent } from './thead.component';\r\nimport { ActionsComponent } from './cells/actions.component';\r\nimport { ActionsTitleComponent } from './cells/actions-title.component';\r\nimport { AddButtonComponent } from './cells/add-button.component';\r\nimport { CheckboxSelectAllComponent } from './cells/checkbox-select-all.component';\r\nimport { ColumnTitleComponent } from './cells/column-title.component';\r\nimport { TitleComponent } from './cells/title/title.component';\r\nimport { TheadFitlersRowComponent } from './rows/thead-filters-row.component';\r\nimport { TheadFormRowComponent } from './rows/thead-form-row.component';\r\nimport { TheadTitlesRowComponent } from './rows/thead-titles-row.component';\r\n\r\nconst THEAD_COMPONENTS = [\r\n  ActionsComponent,\r\n  ActionsTitleComponent,\r\n  AddButtonComponent,\r\n  CheckboxSelectAllComponent,\r\n  ColumnTitleComponent,\r\n  TitleComponent,\r\n  TheadFitlersRowComponent,\r\n  TheadFormRowComponent,\r\n  TheadTitlesRowComponent,\r\n  Ng2SmartTableTheadComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FilterModule,\r\n    CellModule,\r\n  ],\r\n  declarations: [\r\n    ...THEAD_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...THEAD_COMPONENTS,\r\n  ],\r\n})\r\nexport class THeadModule { }\r\n","import { cloneDeep } from 'lodash';\r\n\r\n/**\r\n * Extending object that entered in first argument.\r\n *\r\n * Returns extended object or false if have no target object or incorrect type.\r\n *\r\n * If you wish to clone source object (without modify it), just use empty new\r\n * object as first argument, like this:\r\n *   deepExtend({}, yourObj_1, [yourObj_N]);\r\n */\r\nexport const deepExtend = function(...objects: Array<any>): any {\r\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    return arguments[0];\r\n  }\r\n\r\n  const target = arguments[0];\r\n\r\n  // convert arguments to array and cut off target object\r\n  const args = Array.prototype.slice.call(arguments, 1);\r\n\r\n  let val, src;\r\n\r\n  args.forEach((obj: any) => {\r\n    // skip argument if it is array or isn't object\r\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\r\n      return;\r\n    }\r\n\r\n    Object.keys(obj).forEach(function (key) {\r\n      src = target[key]; // source value\r\n      val = obj[key]; // new value\r\n\r\n      // recursion prevention\r\n      if (val === target) {\r\n        return;\r\n\r\n        /**\r\n         * if new value isn't object then just overwrite by new value\r\n         * instead of extending.\r\n         */\r\n      } else if (typeof val !== 'object' || val === null) {\r\n        target[key] = val;\r\n        return;\r\n\r\n        // just clone arrays (and recursive clone objects inside)\r\n      } else if (Array.isArray(val)) {\r\n        target[key] = cloneDeep(val);\r\n        return;\r\n\r\n        // overwrite by new value if source isn't object or array\r\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\r\n        target[key] = deepExtend({}, val);\r\n        return;\r\n\r\n        // source value and new value is objects both, extending...\r\n      } else {\r\n        target[key] = deepExtend(src, val);\r\n        return;\r\n      }\r\n    });\r\n  });\r\n\r\n  return target;\r\n};\r\n\r\nexport class Deferred {\r\n\r\n  promise: Promise<any>;\r\n\r\n  resolve: any;\r\n  reject: any;\r\n\r\n  constructor() {\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = resolve;\r\n      this.reject = reject;\r\n    });\r\n  }\r\n}\r\n\r\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\r\nexport function getDeepFromObject(object = {}, name: string, defaultValue?: any) {\r\n  const keys = name.split('.');\r\n  // clone the object\r\n  let level = deepExtend({}, object);\r\n  keys.forEach((k) => {\r\n    if (level && typeof level[k] !== 'undefined') {\r\n      level = level[k];\r\n    }\r\n  });\r\n\r\n  return typeof level === 'undefined' ? defaultValue : level;\r\n}\r\n\r\nexport function getPageForRowIndex(index: number, perPage: number): number {\r\n  // we need to add 1 to convert 0-based index to 1-based page number.\r\n  return Math.floor(index / perPage) + 1;\r\n}\r\n","import { Column } from './column';\r\nimport { DataSet } from './data-set';\r\nimport { Row } from './row';\r\n\r\nexport function prepareValue (value: any) { return value }\r\n\r\nexport class Cell {\r\n\r\n  newValue: any = '';\r\n  protected static PREPARE = prepareValue;\r\n\r\n  constructor(protected value: any, protected row: Row, protected column: any, protected dataSet: DataSet) {\r\n    this.newValue = value;\r\n  }\r\n\r\n  getColumn(): Column {\r\n    return this.column;\r\n  }\r\n\r\n  getRow(): Row {\r\n    return this.row;\r\n  }\r\n\r\n  getValue(): any {\r\n    const valid = this.column.getValuePrepareFunction() instanceof Function;\r\n    const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\r\n    return prepare.call(null, this.value, this.row.getData(), this);\r\n  }\r\n\r\n  setValue(value: any): any {\r\n    this.newValue = value;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.getColumn().id;\r\n  }\r\n\r\n  getTitle(): string {\r\n    return this.getColumn().title;\r\n  }\r\n\r\n  isEditable(): boolean {\r\n    if (this.getRow().index === -1) {\r\n      return this.getColumn().isAddable;\r\n    }\r\n    else {\r\n      return this.getColumn().isEditable;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Cell } from './cell';\r\nimport { Column } from './column';\r\nimport { DataSet } from './data-set';\r\n\r\nexport class Row {\r\n\r\n  isSelected: boolean = false;\r\n  isInEditing: boolean = false;\r\n  cells: Array<Cell> = [];\r\n\r\n\r\n  constructor(public index: number, protected data: any, protected _dataSet: DataSet) {\r\n    this.process();\r\n  }\r\n\r\n  getCell(column: Column): Cell {\r\n    return this.cells.find(el => el.getColumn() === column);\r\n  }\r\n\r\n  getCells() {\r\n    return this.cells;\r\n  }\r\n\r\n  getData(): any {\r\n    return this.data;\r\n  }\r\n\r\n  getIsSelected(): boolean {\r\n    return this.isSelected;\r\n  }\r\n\r\n  getNewData(): any {\r\n    const values = Object.assign({}, this.data);\r\n    this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\r\n    return values;\r\n  }\r\n\r\n  setData(data: any): any {\r\n    this.data = data;\r\n    this.process();\r\n  }\r\n\r\n  process() {\r\n    this.cells = [];\r\n    this._dataSet.getColumns().forEach((column: Column) => {\r\n      const cell = this.createCell(column);\r\n      this.cells.push(cell);\r\n    });\r\n  }\r\n\r\n  createCell(column: Column): Cell {\r\n    const defValue = (column as any).settings.defaultValue ? (column as any).settings.defaultValue : '';\r\n    const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\r\n    return new Cell(value, this, column, this._dataSet);\r\n  }\r\n}\r\n","import { DataSet } from './data-set';\r\n\r\nexport class Column {\r\n\r\n  title: string = '';\r\n  type: string = '';\r\n  class: string = '';\r\n  width: string = '';\r\n  hide: boolean = false;\r\n  isSortable: boolean = false;\r\n  isEditable: boolean = true;\r\n  isAddable: boolean = true;\r\n  isFilterable: boolean = false;\r\n  sortDirection: string = '';\r\n  defaultSortDirection: string = '';\r\n  editor: { type: string, config: any, component: any } = { type: '', config: {}, component: null };\r\n  filter: { type: string, config: any, component: any } = { type: '', config: {}, component: null };\r\n  renderComponent: any = null;\r\n  compareFunction: Function;\r\n  valuePrepareFunction: Function;\r\n  filterFunction: Function;\r\n  onComponentInitFunction: Function;\r\n\r\n  constructor(public id: string, protected settings: any, protected dataSet: DataSet) {\r\n    this.process();\r\n  }\r\n\r\n  getOnComponentInitFunction(): Function {\r\n    return this.onComponentInitFunction;\r\n  }\r\n\r\n  getCompareFunction(): Function {\r\n    return this.compareFunction;\r\n  }\r\n\r\n  getValuePrepareFunction(): Function {\r\n    return this.valuePrepareFunction;\r\n  }\r\n\r\n  getFilterFunction(): Function {\r\n    return this.filterFunction;\r\n  }\r\n\r\n  getConfig(): any {\r\n    return this.editor && this.editor.config;\r\n  }\r\n\r\n  getFilterType(): any {\r\n    return this.filter && this.filter.type;\r\n  }\r\n\r\n  getFilterConfig(): any {\r\n    return this.filter && this.filter.config;\r\n  }\r\n\r\n  protected process() {\r\n    this.title = this.settings['title'];\r\n    this.class = this.settings['class'];\r\n    this.width = this.settings['width'];\r\n    this.hide = !!this.settings['hide'];\r\n    this.type = this.prepareType();\r\n    this.editor = this.settings['editor'];\r\n    this.filter = this.settings['filter'];\r\n    this.renderComponent = this.settings['renderComponent'];\r\n\r\n    this.isFilterable = typeof this.settings['filter'] === 'undefined' ? true : !!this.settings['filter'];\r\n    this.defaultSortDirection = ['asc', 'desc']\r\n      .indexOf(this.settings['sortDirection']) !== -1 ? this.settings['sortDirection'] : '';\r\n    this.isSortable = typeof this.settings['sort'] === 'undefined' ? true : !!this.settings['sort'];\r\n    this.isEditable = typeof this.settings['editable'] === 'undefined' ? true : !!this.settings['editable'];\r\n    this.isAddable=typeof this.settings['addable'] === 'undefined' ? true : !!this.settings['addable'];\r\n    this.sortDirection = this.prepareSortDirection();\r\n\r\n    this.compareFunction = this.settings['compareFunction'];\r\n    this.valuePrepareFunction = this.settings['valuePrepareFunction'];\r\n    this.filterFunction = this.settings['filterFunction'];\r\n    this.onComponentInitFunction = this.settings['onComponentInitFunction'];\r\n  }\r\n\r\n  prepareType(): string {\r\n    return this.settings['type'] || this.determineType();\r\n  }\r\n\r\n  prepareSortDirection(): string {\r\n    return this.settings['sort'] === 'desc' ? 'desc' : 'asc';\r\n  }\r\n\r\n  determineType(): string {\r\n    // TODO: determine type by data\r\n    return 'text';\r\n  }\r\n}\r\n","import { Row } from './row';\r\nimport { Column } from './column';\r\n\r\nexport class DataSet {\r\n\r\n  newRow: Row;\r\n\r\n  protected data: Array<any> = [];\r\n  protected columns: Array<Column> = [];\r\n  protected rows: Array<Row> = [];\r\n  protected selectedRow: Row;\r\n  protected willSelect: string;\r\n\r\n  constructor(data: Array<any> = [], protected columnSettings: Object) {\r\n    this.createColumns(columnSettings);\r\n    this.setData(data);\r\n\r\n    this.createNewRow();\r\n  }\r\n\r\n  setData(data: Array<any>) {\r\n    this.data = data;\r\n    this.createRows();\r\n  }\r\n\r\n  getColumns(): Array<Column> {\r\n    return this.columns;\r\n  }\r\n\r\n  getRows(): Array<Row> {\r\n    return this.rows;\r\n  }\r\n\r\n  getFirstRow(): Row {\r\n    return this.rows[0];\r\n  }\r\n\r\n  getLastRow(): Row {\r\n    return this.rows[this.rows.length - 1];\r\n  }\r\n\r\n  findRowByData(data: any): Row {\r\n    return this.rows.find((row: Row) => row.getData() === data);\r\n  }\r\n\r\n  deselectAll() {\r\n    this.rows.forEach((row) => {\r\n      row.isSelected = false;\r\n    });\r\n    // we need to clear selectedRow field because no one row selected\r\n    this.selectedRow = undefined;\r\n  }\r\n\r\n  selectRow(row: Row): Row | undefined {\r\n    const previousIsSelected = row.isSelected;\r\n    this.deselectAll();\r\n\r\n    row.isSelected = !previousIsSelected;\r\n    this.selectedRow = row;\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  multipleSelectRow(row: Row): Row {\r\n    row.isSelected = !row.isSelected;\r\n    this.selectedRow = row;\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  selectPreviousRow(): Row {\r\n    if (this.rows.length > 0) {\r\n      let index = this.selectedRow ? this.selectedRow.index : 0;\r\n      if (index > this.rows.length - 1) {\r\n        index = this.rows.length - 1;\r\n      }\r\n      this.selectRow(this.rows[index]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  selectFirstRow(): Row | undefined {\r\n    if (this.rows.length > 0) {\r\n      this.selectRow(this.rows[0]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  selectLastRow(): Row | undefined {\r\n    if (this.rows.length > 0) {\r\n      this.selectRow(this.rows[this.rows.length - 1]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  selectRowByIndex(index: number): Row | undefined {\r\n    const rowsLength: number = this.rows.length;\r\n    if (rowsLength === 0) {\r\n      return;\r\n    }\r\n    if (!index) {\r\n      this.selectFirstRow();\r\n      return this.selectedRow;\r\n    }\r\n    if (index > 0 && index < rowsLength) {\r\n      this.selectRow(this.rows[index]);\r\n      return this.selectedRow;\r\n    }\r\n    // we need to deselect all rows if we got an incorrect index\r\n    this.deselectAll();\r\n  }\r\n\r\n  willSelectFirstRow() {\r\n    this.willSelect = 'first';\r\n  }\r\n\r\n  willSelectLastRow() {\r\n    this.willSelect = 'last';\r\n  }\r\n\r\n  select(selectedRowIndex?: number): Row | undefined {\r\n    if (this.getRows().length === 0) {\r\n      return;\r\n    }\r\n    if (this.willSelect) {\r\n      if (this.willSelect === 'first') {\r\n        this.selectFirstRow();\r\n      }\r\n      if (this.willSelect === 'last') {\r\n        this.selectLastRow();\r\n      }\r\n      this.willSelect = '';\r\n    } else {\r\n      this.selectRowByIndex(selectedRowIndex);\r\n    }\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  createNewRow() {\r\n    this.newRow = new Row(-1, {}, this);\r\n    this.newRow.isInEditing = true;\r\n  }\r\n\r\n  /**\r\n   * Create columns by mapping from the settings\r\n   * @param settings\r\n   * @private\r\n   */\r\n  createColumns(settings: any) {\r\n    for (const id in settings) {\r\n      if (settings.hasOwnProperty(id)) {\r\n        this.columns.push(new Column(id, settings[id], this));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create rows based on current data prepared in data source\r\n   * @private\r\n   */\r\n  createRows() {\r\n    this.rows = [];\r\n    this.data.forEach((el, index) => {\r\n      this.rows.push(new Row(index, el, this));\r\n    });\r\n  }\r\n}\r\n","import { Subject, Subscription } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nimport { Deferred, getDeepFromObject, getPageForRowIndex } from './helpers';\r\nimport { Column } from './data-set/column';\r\nimport { Row } from './data-set/row';\r\nimport { DataSet } from './data-set/data-set';\r\nimport { DataSource } from './data-source/data-source';\r\n\r\nexport class Grid {\r\n\r\n  createFormShown: boolean = false;\r\n\r\n  source: DataSource;\r\n  settings: any;\r\n  dataSet: DataSet;\r\n\r\n  onSelectRowSource = new Subject<any>();\r\n  onDeselectRowSource = new Subject<any>();\r\n\r\n  private sourceOnChangedSubscription: Subscription;\r\n  private sourceOnUpdatedSubscription: Subscription;\r\n\r\n  constructor(source: DataSource, settings: any) {\r\n    this.setSettings(settings);\r\n    this.setSource(source);\r\n  }\r\n\r\n  detach(): void {\r\n    if (this.sourceOnChangedSubscription) {\r\n      this.sourceOnChangedSubscription.unsubscribe();\r\n    }\r\n    if (this.sourceOnUpdatedSubscription) {\r\n      this.sourceOnUpdatedSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  showActionColumn(position: string): boolean {\r\n    return this.isCurrentActionsPosition(position) && this.isActionsVisible();\r\n  }\r\n\r\n  isCurrentActionsPosition(position: string): boolean {\r\n    return position == this.getSetting('actions.position');\r\n  }\r\n\r\n  isActionsVisible(): boolean {\r\n    return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\r\n  }\r\n\r\n  isMultiSelectVisible(): boolean {\r\n    return this.getSetting('selectMode') === 'multi';\r\n  }\r\n\r\n  getNewRow(): Row {\r\n    return this.dataSet.newRow;\r\n  }\r\n\r\n  setSettings(settings: Object) {\r\n    this.settings = settings;\r\n    this.dataSet = new DataSet([], this.getSetting('columns'));\r\n\r\n    if (this.source) {\r\n      this.source.refresh();\r\n    }\r\n  }\r\n\r\n  getDataSet(): DataSet {\r\n    return this.dataSet;\r\n  }\r\n\r\n  setSource(source: DataSource) {\r\n    this.source = this.prepareSource(source);\r\n    this.detach();\r\n\r\n    this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes: any) => this.processDataChange(changes));\r\n\r\n    this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data: any) => {\r\n      const changedRow = this.dataSet.findRowByData(data);\r\n      changedRow.setData(data);\r\n    });\r\n  }\r\n\r\n  getSetting(name: string, defaultValue?: any): any {\r\n    return getDeepFromObject(this.settings, name, defaultValue);\r\n  }\r\n\r\n  getColumns(): Array<Column> {\r\n    return this.dataSet.getColumns();\r\n  }\r\n\r\n  getRows(): Array<Row> {\r\n    return this.dataSet.getRows();\r\n  }\r\n\r\n  selectRow(row: Row) {\r\n    this.dataSet.selectRow(row);\r\n  }\r\n\r\n  multipleSelectRow(row: Row) {\r\n    this.dataSet.multipleSelectRow(row);\r\n  }\r\n\r\n  onSelectRow(): Observable<any> {\r\n    return this.onSelectRowSource.asObservable();\r\n  }\r\n\r\n  onDeselectRow(): Observable<any> {\r\n    return this.onDeselectRowSource.asObservable();\r\n  }\r\n\r\n  edit(row: Row) {\r\n    row.isInEditing = true;\r\n  }\r\n\r\n  create(row: Row, confirmEmitter: EventEmitter<any>) {\r\n\r\n    const deferred = new Deferred();\r\n    deferred.promise.then((newData) => {\r\n      newData = newData ? newData : row.getNewData();\r\n      if (deferred.resolve.skipAdd) {\r\n        this.createFormShown = false;\r\n      } else {\r\n        this.source.prepend(newData).then(() => {\r\n          this.createFormShown = false;\r\n          this.dataSet.createNewRow();\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('add.confirmCreate')) {\r\n      confirmEmitter.emit({\r\n        newData: row.getNewData(),\r\n        source: this.source,\r\n        confirm: deferred,\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  save(row: Row, confirmEmitter: EventEmitter<any>) {\r\n\r\n    const deferred = new Deferred();\r\n    deferred.promise.then((newData) => {\r\n      newData = newData ? newData : row.getNewData();\r\n      if (deferred.resolve.skipEdit) {\r\n        row.isInEditing = false;\r\n      } else {\r\n        this.source.update(row.getData(), newData).then(() => {\r\n          row.isInEditing = false;\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('edit.confirmSave')) {\r\n      confirmEmitter.emit({\r\n        data: row.getData(),\r\n        newData: row.getNewData(),\r\n        source: this.source,\r\n        confirm: deferred,\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  delete(row: Row, confirmEmitter: EventEmitter<any>) {\r\n\r\n    const deferred = new Deferred();\r\n    deferred.promise.then(() => {\r\n      this.source.remove(row.getData());\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('delete.confirmDelete')) {\r\n      confirmEmitter.emit({\r\n        data: row.getData(),\r\n        source: this.source,\r\n        confirm: deferred,\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  processDataChange(changes: any) {\r\n    if (this.shouldProcessChange(changes)) {\r\n      this.dataSet.setData(changes['elements']);\r\n      if (this.getSetting('selectMode') !== 'multi') {\r\n        const row = this.determineRowToSelect(changes);\r\n\r\n        if (row) {\r\n          this.onSelectRowSource.next(row);\r\n        } else {\r\n          this.onDeselectRowSource.next(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldProcessChange(changes: any): boolean {\r\n    if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes['action']) !== -1) {\r\n      return true;\r\n    } else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @breaking-change 1.8.0\r\n   * Need to add `| null` in return type\r\n   *\r\n   * TODO: move to selectable? Separate directive\r\n   */\r\n  determineRowToSelect(changes: any): Row {\r\n\r\n    if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\r\n      return this.dataSet.select(this.getRowIndexToSelect());\r\n    }\r\n\r\n    if (this.shouldSkipSelection()) {\r\n      return null;\r\n    }\r\n\r\n    if (changes['action'] === 'remove') {\r\n      if (changes['elements'].length === 0) {\r\n        // we have to store which one to select as the data will be reloaded\r\n        this.dataSet.willSelectLastRow();\r\n      } else {\r\n        return this.dataSet.selectPreviousRow();\r\n      }\r\n    }\r\n    if (changes['action'] === 'append') {\r\n      // we have to store which one to select as the data will be reloaded\r\n      this.dataSet.willSelectLastRow();\r\n    }\r\n    if (changes['action'] === 'add') {\r\n      return this.dataSet.selectFirstRow();\r\n    }\r\n    if (changes['action'] === 'update') {\r\n      return this.dataSet.selectFirstRow();\r\n    }\r\n    if (changes['action'] === 'prepend') {\r\n      // we have to store which one to select as the data will be reloaded\r\n      this.dataSet.willSelectFirstRow();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  prepareSource(source: any): DataSource {\r\n    const initialSource: any = this.getInitialSort();\r\n    if (initialSource && initialSource['field'] && initialSource['direction']) {\r\n      source.setSort([initialSource], false);\r\n    }\r\n    if (this.getSetting('pager.display') === true) {\r\n      source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\r\n    }\r\n\r\n    source.refresh();\r\n    return source;\r\n  }\r\n\r\n  getInitialSort() {\r\n    const sortConf: any = {};\r\n    this.getColumns().forEach((column: Column) => {\r\n      if (column.isSortable && column.defaultSortDirection) {\r\n        sortConf['field'] = column.id;\r\n        sortConf['direction'] = column.defaultSortDirection;\r\n        sortConf['compare'] = column.getCompareFunction();\r\n      }\r\n    });\r\n    return sortConf;\r\n  }\r\n\r\n  getSelectedRows(): Array<any> {\r\n    return this.dataSet.getRows()\r\n      .filter(r => r.isSelected);\r\n  }\r\n\r\n  selectAllRows(status: any) {\r\n    this.dataSet.getRows()\r\n      .forEach(r => r.isSelected = status);\r\n  }\r\n\r\n  getFirstRow(): Row {\r\n    return this.dataSet.getFirstRow();\r\n  }\r\n\r\n  getLastRow(): Row {\r\n    return this.dataSet.getLastRow();\r\n  }\r\n\r\n  private getSelectionInfo(): { perPage: number, page: number, selectedRowIndex: number, switchPageToSelectedRowPage: boolean } {\r\n    const switchPageToSelectedRowPage: boolean = this.getSetting('switchPageToSelectedRowPage');\r\n    const selectedRowIndex: number = Number(this.getSetting('selectedRowIndex', 0)) || 0;\r\n    const { perPage, page }: { perPage: number, page: number } = this.getSetting('pager');\r\n    return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\r\n  }\r\n\r\n  private getRowIndexToSelect(): number {\r\n    const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\r\n    const dataAmount: number = this.source.count();\r\n    /**\r\n     * source - contains all table data\r\n     * dataSet - contains data for current page\r\n     * selectedRowIndex - contains index for data in all data\r\n     *\r\n     * because of that, we need to count index for a specific row in page\r\n     * if\r\n     * `switchPageToSelectedRowPage` - we need to change page automatically\r\n     * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\r\n     * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\r\n     *  if we return index witch not points to existing data - no line will be highlighted)\r\n     */\r\n    return (\r\n      switchPageToSelectedRowPage &&\r\n      selectedRowIndex < dataAmount &&\r\n      selectedRowIndex >= 0\r\n    ) ?\r\n      selectedRowIndex % perPage :\r\n      selectedRowIndex;\r\n  }\r\n\r\n  private getPageToSelect(source: DataSource): number {\r\n    const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\r\n    let pageToSelect: number = Math.max(1, page);\r\n    if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\r\n      pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\r\n    }\r\n    const maxPageAmount: number = Math.ceil(source.count() / perPage);\r\n    return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\r\n  }\r\n\r\n  private shouldSkipSelection(): boolean {\r\n    /**\r\n     * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\r\n     *\r\n     * Therefore, in order to select a row after some changes,\r\n     * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\r\n     *\r\n     * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\r\n     *\r\n     * !!! We should skip a row only in cases when `selectedRowIndex` < 0\r\n     * because when < 0 all lines must be deselected\r\n     */\r\n    const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\r\n    return selectedRowIndex < 0;\r\n  }\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport abstract class DataSource {\r\n\r\n  protected onChangedSource = new Subject<any>();\r\n  protected onAddedSource = new Subject<any>();\r\n  protected onUpdatedSource = new Subject<any>();\r\n  protected onRemovedSource = new Subject<any>();\r\n\r\n  abstract getAll(): Promise<any>;\r\n  abstract getElements(): Promise<any>;\r\n  abstract getSort(): any;\r\n  abstract getFilter(): any;\r\n  abstract getPaging(): any;\r\n  abstract count(): number;\r\n\r\n  refresh() {\r\n    this.emitOnChanged('refresh');\r\n  }\r\n\r\n  load(data: Array<any>): Promise<any> {\r\n    this.emitOnChanged('load');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  onChanged(): Observable<any> {\r\n    return this.onChangedSource.asObservable();\r\n  }\r\n\r\n  onAdded(): Observable<any> {\r\n    return this.onAddedSource.asObservable();\r\n  }\r\n\r\n  onUpdated(): Observable<any> {\r\n    return this.onUpdatedSource.asObservable();\r\n  }\r\n\r\n  onRemoved(): Observable<any> {\r\n    return this.onRemovedSource.asObservable();\r\n  }\r\n\r\n  prepend(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('prepend');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  append(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('append');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  add(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('add');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  remove(element: any): Promise<any> {\r\n    this.emitOnRemoved(element);\r\n    this.emitOnChanged('remove');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  update(element: any, values: any): Promise<any> {\r\n    this.emitOnUpdated(element);\r\n    this.emitOnChanged('update');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  empty(): Promise<any> {\r\n    this.emitOnChanged('empty');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  setSort(conf: Array<any>, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('sort');\r\n    }\r\n  }\r\n\r\n  setFilter(conf: Array<any>, andOperator?: boolean, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('filter');\r\n    }\r\n  }\r\n\r\n  addFilter(fieldConf: {}, andOperator?: boolean, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('filter');\r\n    }\r\n  }\r\n\r\n  setPaging(page: number, perPage: number, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('paging');\r\n    }\r\n  }\r\n\r\n  setPage(page: number, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('page');\r\n    }\r\n  }\r\n\r\n  protected emitOnRemoved(element: any) {\r\n    this.onRemovedSource.next(element);\r\n  }\r\n\r\n  protected emitOnUpdated(element: any) {\r\n    this.onUpdatedSource.next(element);\r\n  }\r\n\r\n  protected emitOnAdded(element: any) {\r\n    this.onAddedSource.next(element);\r\n  }\r\n\r\n  protected emitOnChanged(action: string) {\r\n    this.getElements().then((elements) => this.onChangedSource.next({\r\n      action: action,\r\n      elements: elements,\r\n      paging: this.getPaging(),\r\n      filter: this.getFilter(),\r\n      sort: this.getSort(),\r\n    }));\r\n  }\r\n}\r\n","export function compareValues(direction: any, a: any, b: any) {\r\n  if (a < b) {\r\n    return -1 * direction;\r\n  }\r\n  if (a > b) {\r\n    return direction;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport class LocalSorter {\r\n\r\n  static sort(data: Array<any>, field: string, direction: string, customCompare?: Function): Array<any> {\r\n\r\n    const dir: number = (direction === 'asc') ? 1 : -1;\r\n    const compare: Function = customCompare ? customCompare : compareValues;\r\n\r\n    return data.sort((a, b) => {\r\n      return compare.call(null, dir, a[field], b[field]);\r\n    });\r\n  }\r\n}\r\n","export function filterValues(value: string, search: string) {\r\n  return value.toString().toLowerCase().includes(search.toString().toLowerCase());\r\n}\r\n\r\nexport class LocalFilter {\r\n\r\n  static filter(data: Array<any>, field: string, search: string, customFilter?: Function): Array<any> {\r\n    const filter: Function = customFilter ? customFilter : filterValues;\r\n\r\n    return data.filter((el) => {\r\n      const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\r\n      return filter.call(null, value, search);\r\n    });\r\n  }\r\n}\r\n","export class LocalPager {\r\n\r\n  static paginate(data: Array<any>, page: number, perPage: number): Array<any> {\r\n    return data.slice(perPage * (page - 1), perPage * page);\r\n  }\r\n}\r\n","import { LocalSorter } from './local.sorter';\r\nimport { LocalFilter } from './local.filter';\r\nimport { LocalPager } from './local.pager';\r\nimport { DataSource } from '../data-source';\r\nimport { deepExtend } from '../../helpers';\r\n\r\nexport class LocalDataSource extends DataSource {\r\n\r\n  protected data: Array<any> = [];\r\n  protected filteredAndSorted: Array<any> = [];\r\n  protected sortConf: Array<any> = [];\r\n  protected filterConf: any = {\r\n    filters: [],\r\n    andOperator: true,\r\n  };\r\n  protected pagingConf: any = {};\r\n\r\n  constructor(data: Array<any> = []) {\r\n    super();\r\n\r\n    this.data = data;\r\n  }\r\n\r\n  load(data: Array<any>): Promise<any> {\r\n    this.data = data;\r\n\r\n    return super.load(data);\r\n  }\r\n\r\n  prepend(element: any): Promise<any> {\r\n    this.reset(true);\r\n\r\n    this.data.unshift(element);\r\n    return super.prepend(element);\r\n  }\r\n\r\n  append(element: any): Promise<any> {\r\n    this.reset(true);\r\n\r\n    this.data.push(element);\r\n    return super.append(element);\r\n  }\r\n\r\n  add(element: any): Promise<any> {\r\n    this.data.push(element);\r\n\r\n    return super.add(element);\r\n  }\r\n\r\n  remove(element: any): Promise<any> {\r\n    this.data = this.data.filter(el => el !== element);\r\n\r\n    return super.remove(element);\r\n  }\r\n\r\n  update(element: any, values: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.find(element).then((found) => {\r\n        found = deepExtend(found, values);\r\n        super.update(found, values).then(resolve).catch(reject);\r\n      }).catch(reject);\r\n    });\r\n  }\r\n\r\n  find(element: any): Promise<any> {\r\n    const found = this.data.find(el => el === element);\r\n    if (found) {\r\n      return Promise.resolve(found);\r\n    }\r\n\r\n    return Promise.reject(new Error('Element was not found in the dataset'));\r\n  }\r\n\r\n  getElements(): Promise<any> {\r\n    const data = this.data.slice(0);\r\n    return Promise.resolve(this.prepareData(data));\r\n  }\r\n\r\n  getFilteredAndSorted(): Promise<any> {\r\n    let data = this.data.slice(0);\r\n    this.prepareData(data);\r\n    return Promise.resolve(this.filteredAndSorted);\r\n  }\r\n\r\n  getAll(): Promise<any> {\r\n    const data = this.data.slice(0);\r\n    return Promise.resolve(data);\r\n  }\r\n\r\n  reset(silent = false) {\r\n    if (silent) {\r\n      this.filterConf = {\r\n        filters: [],\r\n        andOperator: true,\r\n      };\r\n      this.sortConf = [];\r\n      this.pagingConf['page'] = 1;\r\n    } else {\r\n      this.setFilter([], true, false);\r\n      this.setSort([], false);\r\n      this.setPage(1);\r\n    }\r\n  }\r\n\r\n  empty(): Promise<any> {\r\n    this.data = [];\r\n\r\n    return super.empty();\r\n  }\r\n\r\n  count(): number {\r\n    return this.filteredAndSorted.length;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Array of conf objects\r\n   * [\r\n   *  {field: string, direction: asc|desc|null, compare: Function|null},\r\n   * ]\r\n   * @param conf\r\n   * @param doEmit\r\n   * @returns {LocalDataSource}\r\n   */\r\n  setSort(conf: Array<any>, doEmit = true): LocalDataSource {\r\n    if (conf !== null) {\r\n\r\n      conf.forEach((fieldConf) => {\r\n        if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {\r\n          throw new Error('Sort configuration object is not valid');\r\n        }\r\n      });\r\n      this.sortConf = conf;\r\n    }\r\n\r\n    super.setSort(conf, doEmit);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Array of conf objects\r\n   * [\r\n   *  {field: string, search: string, filter: Function|null},\r\n   * ]\r\n   * @param conf\r\n   * @param andOperator\r\n   * @param doEmit\r\n   * @returns {LocalDataSource}\r\n   */\r\n  setFilter(conf: Array<any>, andOperator = true, doEmit = true): LocalDataSource {\r\n    if (conf && conf.length > 0) {\r\n      conf.forEach((fieldConf) => {\r\n        this.addFilter(fieldConf, andOperator, false);\r\n      });\r\n    } else {\r\n      this.filterConf = {\r\n        filters: [],\r\n        andOperator: true,\r\n      };\r\n    }\r\n    this.filterConf.andOperator = andOperator;\r\n    this.pagingConf['page'] = 1;\r\n\r\n    super.setFilter(conf, andOperator, doEmit);\r\n    return this;\r\n  }\r\n\r\n  addFilter(fieldConf: any, andOperator = true, doEmit: boolean = true): LocalDataSource {\r\n    if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\r\n      throw new Error('Filter configuration object is not valid');\r\n    }\r\n\r\n    let found = false;\r\n    this.filterConf.filters.forEach((currentFieldConf: any, index: any) => {\r\n      if (currentFieldConf['field'] === fieldConf['field']) {\r\n        this.filterConf.filters[index] = fieldConf;\r\n        found = true;\r\n      }\r\n    });\r\n    if (!found) {\r\n      this.filterConf.filters.push(fieldConf);\r\n    }\r\n    this.filterConf.andOperator = andOperator;\r\n    super.addFilter(fieldConf, andOperator, doEmit);\r\n    return this;\r\n  }\r\n\r\n  setPaging(page: number, perPage: number, doEmit: boolean = true): LocalDataSource {\r\n    this.pagingConf['page'] = page;\r\n    this.pagingConf['perPage'] = perPage;\r\n\r\n    super.setPaging(page, perPage, doEmit);\r\n    return this;\r\n  }\r\n\r\n  setPage(page: number, doEmit: boolean = true): LocalDataSource {\r\n    this.pagingConf['page'] = page;\r\n    super.setPage(page, doEmit);\r\n    return this;\r\n  }\r\n\r\n  getSort(): any {\r\n    return this.sortConf;\r\n  }\r\n\r\n  getFilter(): any {\r\n    return this.filterConf;\r\n  }\r\n\r\n  getPaging(): any {\r\n    return this.pagingConf;\r\n  }\r\n\r\n  protected prepareData(data: Array<any>): Array<any> {\r\n    data = this.filter(data);\r\n    data = this.sort(data);\r\n    this.filteredAndSorted = data.slice(0);\r\n\r\n    return this.paginate(data);\r\n  }\r\n\r\n  protected sort(data: Array<any>): Array<any> {\r\n    if (this.sortConf) {\r\n      this.sortConf.forEach((fieldConf) => {\r\n        data = LocalSorter\r\n          .sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  // TODO: refactor?\r\n  protected filter(data: Array<any>): Array<any> {\r\n    if (this.filterConf.filters) {\r\n      if (this.filterConf.andOperator) {\r\n        this.filterConf.filters.forEach((fieldConf: any) => {\r\n          if (fieldConf['search'].length > 0) {\r\n            data = LocalFilter\r\n              .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\r\n          }\r\n        });\r\n      } else {\r\n        let mergedData: any = [];\r\n        this.filterConf.filters.forEach((fieldConf: any) => {\r\n          if (fieldConf['search'].length > 0) {\r\n            mergedData = mergedData.concat(LocalFilter\r\n              .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\r\n          }\r\n        });\r\n        // remove non unique items\r\n        data = mergedData.filter((elem: any, pos: any, arr: any) => {\r\n          return arr.indexOf(elem) === pos;\r\n        });\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  protected paginate(data: Array<any>): Array<any> {\r\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n      data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n","<table [id]=\"tableId\" [ngClass]=\"tableClass\">\r\n\r\n  <thead ng2-st-thead *ngIf=\"!isHideHeader || !isHideSubHeader\"\r\n                      [grid]=\"grid\"\r\n                      [isAllSelected]=\"isAllSelected\"\r\n                      [source]=\"source\"\r\n                      [createConfirm]=\"createConfirm\"\r\n                      (create)=\"create.emit($event)\"\r\n                      (selectAllRows)=\"onSelectAllRows($event)\"\r\n                      (sort)=\"sort($event)\"\r\n                      (filter)=\"filter($event)\">\r\n  </thead>\r\n\r\n  <tbody ng2-st-tbody [grid]=\"grid\"\r\n                      [source]=\"source\"\r\n                      [deleteConfirm]=\"deleteConfirm\"\r\n                      [editConfirm]=\"editConfirm\"\r\n                      [rowClassFunction]=\"rowClassFunction\"\r\n                      (edit)=\"edit.emit($event)\"\r\n                      (delete)=\"delete.emit($event)\"\r\n                      (custom)=\"custom.emit($event)\"\r\n                      (userSelectRow)=\"onUserSelectRow($event)\"\r\n                      (editRowSelect)=\"editRowSelect($event)\"\r\n                      (multipleSelectRow)=\"multipleSelectRow($event)\"\r\n                      (rowHover)=\"onRowHover($event)\">\r\n  </tbody>\r\n\r\n</table>\r\n\r\n<ng2-smart-table-pager *ngIf=\"isPagerDisplay\"\r\n                        [source]=\"source\"\r\n                        [perPageSelect]=\"perPageSelect\"\r\n                        (changePage)=\"changePage($event)\">\r\n</ng2-smart-table-pager>\r\n","import { Component, Input, Output, SimpleChange, EventEmitter, OnChanges, OnDestroy } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { Grid } from './lib/grid';\r\nimport { DataSource } from './lib/data-source/data-source';\r\nimport { Row } from './lib/data-set/row';\r\nimport { deepExtend, getPageForRowIndex } from './lib/helpers';\r\nimport { LocalDataSource } from './lib/data-source/local/local.data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table',\r\n  styleUrls: ['./ng2-smart-table.component.scss'],\r\n  templateUrl: './ng2-smart-table.component.html',\r\n})\r\nexport class Ng2SmartTableComponent implements OnChanges, OnDestroy {\r\n\r\n  @Input() source: any;\r\n  @Input() settings: Object = {};\r\n\r\n  @Output() rowSelect = new EventEmitter<any>();\r\n  @Output() rowDeselect = new EventEmitter<any>();\r\n  @Output() userRowSelect = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() create = new EventEmitter<any>();\r\n  @Output() custom = new EventEmitter<any>();\r\n  @Output() deleteConfirm = new EventEmitter<any>();\r\n  @Output() editConfirm = new EventEmitter<any>();\r\n  @Output() createConfirm = new EventEmitter<any>();\r\n  @Output() rowHover: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  tableClass: string;\r\n  tableId: string;\r\n  perPageSelect: any;\r\n  isHideHeader: boolean;\r\n  isHideSubHeader: boolean;\r\n  isPagerDisplay: boolean;\r\n  rowClassFunction: Function;\r\n\r\n  grid: Grid;\r\n  defaultSettings: Object = {\r\n    mode: 'inline', // inline|external|click-to-edit\r\n    selectMode: 'single', // single|multi\r\n    /**\r\n     * Points to an element in all data\r\n     *\r\n     * when < 0 all lines must be deselected\r\n     */\r\n    selectedRowIndex: 0,\r\n    switchPageToSelectedRowPage: false,\r\n    hideHeader: false,\r\n    hideSubHeader: false,\r\n    actions: {\r\n      columnTitle: 'Actions',\r\n      add: true,\r\n      edit: true,\r\n      delete: true,\r\n      custom: [],\r\n      position: 'left', // left|right\r\n    },\r\n    filter: {\r\n      inputClass: '',\r\n    },\r\n    edit: {\r\n      inputClass: '',\r\n      editButtonContent: 'Edit',\r\n      saveButtonContent: 'Update',\r\n      cancelButtonContent: 'Cancel',\r\n      confirmSave: false,\r\n    },\r\n    add: {\r\n      inputClass: '',\r\n      addButtonContent: 'Add New',\r\n      createButtonContent: 'Create',\r\n      cancelButtonContent: 'Cancel',\r\n      confirmCreate: false,\r\n    },\r\n    delete: {\r\n      deleteButtonContent: 'Delete',\r\n      confirmDelete: false,\r\n    },\r\n    attr: {\r\n      id: '',\r\n      class: '',\r\n    },\r\n    noDataMessage: 'No data found',\r\n    columns: {},\r\n    pager: {\r\n      display: true,\r\n      page: 1,\r\n      perPage: 10,\r\n    },\r\n    rowClassFunction: () => '',\r\n  };\r\n\r\n  isAllSelected: boolean = false;\r\n\r\n  private onSelectRowSubscription: Subscription;\r\n  private onDeselectRowSubscription: Subscription;\r\n  private destroyed$: Subject<void> = new Subject<void>();\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (this.grid) {\r\n      if (changes['settings']) {\r\n        this.grid.setSettings(this.prepareSettings());\r\n      }\r\n      if (changes['source']) {\r\n        this.source = this.prepareSource();\r\n        this.grid.setSource(this.source);\r\n      }\r\n    } else {\r\n      this.initGrid();\r\n    }\r\n    this.tableId = this.grid.getSetting('attr.id');\r\n    this.tableClass = this.grid.getSetting('attr.class');\r\n    this.isHideHeader = this.grid.getSetting('hideHeader');\r\n    this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n    this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\r\n    this.rowClassFunction = this.grid.getSetting('rowClassFunction');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  selectRow(index: number, switchPageToSelectedRowPage: boolean = this.grid.getSetting('switchPageToSelectedRowPage')): void {\r\n    if (!this.grid) {\r\n      return;\r\n    }\r\n    this.grid.settings.selectedRowIndex = index;\r\n    if (this.isIndexOutOfRange(index)) {\r\n      // we need to deselect all rows if we got an incorrect index\r\n      this.deselectAllRows();\r\n      return;\r\n    }\r\n\r\n    if (switchPageToSelectedRowPage) {\r\n      const source: DataSource = this.source;\r\n      const paging: { page: number, perPage: number } = source.getPaging();\r\n      const page: number = getPageForRowIndex(index, paging.perPage);\r\n      index = index % paging.perPage;\r\n      this.grid.settings.selectedRowIndex = index;\r\n\r\n      if (page !== paging.page) {\r\n        source.setPage(page);\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    const row: Row = this.grid.getRows()[index];\r\n    if (row) {\r\n      this.onSelectRow(row);\r\n    } else {\r\n      // we need to deselect all rows if we got an incorrect index\r\n      this.deselectAllRows();\r\n    }\r\n  }\r\n\r\n  private deselectAllRows(): void {\r\n    this.grid.dataSet.deselectAll();\r\n    this.emitDeselectRow(null);\r\n  }\r\n\r\n  editRowSelect(row: Row) {\r\n    if (this.grid.getSetting('selectMode') === 'multi') {\r\n      this.onMultipleSelectRow(row);\r\n    } else {\r\n      this.onSelectRow(row);\r\n    }\r\n  }\r\n\r\n  onUserSelectRow(row: Row) {\r\n    if (this.grid.getSetting('selectMode') !== 'multi') {\r\n      this.grid.selectRow(row);\r\n      this.emitUserSelectRow(row);\r\n      this.emitSelectRow(row);\r\n    }\r\n  }\r\n\r\n  onRowHover(row: Row) {\r\n    this.rowHover.emit(row);\r\n  }\r\n\r\n  multipleSelectRow(row: Row) {\r\n    this.grid.multipleSelectRow(row);\r\n    this.emitUserSelectRow(row);\r\n    this.emitSelectRow(row);\r\n  }\r\n\r\n  onSelectAllRows($event: any) {\r\n    this.isAllSelected = !this.isAllSelected;\r\n    this.grid.selectAllRows(this.isAllSelected);\r\n\r\n    this.emitUserSelectRow(null);\r\n    this.emitSelectRow(null);\r\n  }\r\n\r\n  onSelectRow(row: Row) {\r\n    this.grid.selectRow(row);\r\n    this.emitSelectRow(row);\r\n  }\r\n\r\n  onMultipleSelectRow(row: Row) {\r\n    this.emitSelectRow(row);\r\n  }\r\n\r\n  initGrid() {\r\n    this.source = this.prepareSource();\r\n    this.grid = new Grid(this.source, this.prepareSettings());\r\n\r\n    this.subscribeToOnSelectRow();\r\n    this.subscribeToOnDeselectRow();\r\n  }\r\n\r\n  prepareSource(): DataSource {\r\n    if (this.source instanceof DataSource) {\r\n      return this.source;\r\n    } else if (this.source instanceof Array) {\r\n      return new LocalDataSource(this.source);\r\n    }\r\n\r\n    return new LocalDataSource();\r\n  }\r\n\r\n  prepareSettings(): Object {\r\n    return deepExtend({}, this.defaultSettings, this.settings);\r\n  }\r\n\r\n  changePage($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  sort($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  filter($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  private resetAllSelector() {\r\n    this.isAllSelected = false;\r\n  }\r\n\r\n  private emitUserSelectRow(row: Row) {\r\n    const selectedRows = this.grid.getSelectedRows();\r\n\r\n    this.userRowSelect.emit({\r\n      data: row ? row.getData() : null,\r\n      isSelected: row ? row.getIsSelected() : null,\r\n      source: this.source,\r\n      selected: selectedRows && selectedRows.length ? selectedRows.map((r: Row) => r.getData()) : [],\r\n    });\r\n  }\r\n\r\n  private emitSelectRow(row: Row) {\r\n    const data = {\r\n      data: row ? row.getData() : null,\r\n      isSelected: row ? row.getIsSelected() : null,\r\n      source: this.source,\r\n    };\r\n    this.rowSelect.emit(data);\r\n    if (!row?.isSelected) {\r\n      this.rowDeselect.emit(data);\r\n    }\r\n  }\r\n\r\n  private emitDeselectRow(row: Row): void {\r\n    this.rowDeselect.emit({\r\n      data: row ? row.getData() : null,\r\n      isSelected: row ? row.getIsSelected() : null,\r\n      source: this.source,\r\n    });\r\n  }\r\n\r\n  private isIndexOutOfRange(index: number): boolean {\r\n    const dataAmount: number = this.source?.count();\r\n    return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\r\n  }\r\n\r\n  private subscribeToOnSelectRow(): void {\r\n    if (this.onSelectRowSubscription) {\r\n      this.onSelectRowSubscription.unsubscribe();\r\n    }\r\n    this.onSelectRowSubscription = this.grid.onSelectRow()\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe((row) => {\r\n        this.emitSelectRow(row);\r\n      });\r\n  }\r\n\r\n  private subscribeToOnDeselectRow(): void {\r\n    if (this.onDeselectRowSubscription) {\r\n      this.onDeselectRowSubscription.unsubscribe();\r\n    }\r\n    this.onDeselectRowSubscription = this.grid.onDeselectRow()\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe((row) => {\r\n        this.emitDeselectRow(row);\r\n      });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CellModule } from './components/cell/cell.module';\r\nimport { FilterModule } from './components/filter/filter.module';\r\nimport { PagerModule } from './components/pager/pager.module';\r\nimport { TBodyModule } from './components/tbody/tbody.module';\r\nimport { THeadModule } from './components/thead/thead.module';\r\n\r\nimport { Ng2SmartTableComponent } from './ng2-smart-table.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CellModule,\r\n    FilterModule,\r\n    PagerModule,\r\n    TBodyModule,\r\n    THeadModule,\r\n  ],\r\n  declarations: [\r\n    Ng2SmartTableComponent,\r\n  ],\r\n  exports: [\r\n    Ng2SmartTableComponent,\r\n  ],\r\n})\r\nexport class Ng2SmartTableModule {\r\n}\r\n","export class ServerSourceConf {\r\n\r\n  protected static readonly SORT_FIELD_KEY = '_sort';\r\n  protected static readonly SORT_DIR_KEY = '_order';\r\n  protected static readonly PAGER_PAGE_KEY = '_page';\r\n  protected static readonly PAGER_LIMIT_KEY = '_limit';\r\n  protected static readonly FILTER_FIELD_KEY = '#field#_like';\r\n  protected static readonly TOTAL_KEY = 'x-total-count';\r\n  protected static readonly DATA_KEY = '';\r\n\r\n  endPoint: string;\r\n\r\n  sortFieldKey: string;\r\n  sortDirKey: string;\r\n  pagerPageKey: string;\r\n  pagerLimitKey: string;\r\n  filterFieldKey: string;\r\n  totalKey: string;\r\n  dataKey: string;\r\n\r\n  constructor(\r\n    { endPoint = '', sortFieldKey = '', sortDirKey = '',\r\n      pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\r\n\r\n    this.endPoint = endPoint ? endPoint : '';\r\n\r\n    this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\r\n    this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\r\n    this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\r\n    this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\r\n    this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\r\n    this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\r\n    this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LocalDataSource } from '../local/local.data-source';\r\nimport { ServerSourceConf } from './server-source.conf';\r\nimport { getDeepFromObject } from '../../helpers';\r\n\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport class ServerDataSource extends LocalDataSource {\r\n\r\n  protected conf: ServerSourceConf;\r\n\r\n  protected lastRequestCount: number = 0;\r\n\r\n  constructor(protected http: HttpClient, conf: ServerSourceConf | {} = {}) {\r\n    super();\r\n\r\n    this.conf = new ServerSourceConf(conf);\r\n\r\n    if (!this.conf.endPoint) {\r\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\r\n    }\r\n  }\r\n\r\n  count(): number {\r\n    return this.lastRequestCount;\r\n  }\r\n\r\n  getElements(): Promise<any> {\r\n    return this.requestElements()\r\n      .pipe(map(res => {\r\n        this.lastRequestCount = this.extractTotalFromResponse(res);\r\n        this.data = this.extractDataFromResponse(res);\r\n\r\n        return this.data;\r\n      })).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Extracts array of data from server response\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractDataFromResponse(res: any): Array<any> {\r\n    const rawData = res.body;\r\n    const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\r\n\r\n    if (data instanceof Array) {\r\n      return data;\r\n    }\r\n\r\n    throw new Error(`Data must be an array.\r\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\r\n  }\r\n\r\n  /**\r\n   * Extracts total rows count from the server response\r\n   * Looks for the count in the heders first, then in the response body\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractTotalFromResponse(res: any): number {\r\n    if (res.headers.has(this.conf.totalKey)) {\r\n      return +res.headers.get(this.conf.totalKey);\r\n    } else {\r\n      const rawData = res.body;\r\n      return getDeepFromObject(rawData, this.conf.totalKey, 0);\r\n    }\r\n  }\r\n\r\n  protected requestElements(): Observable<any> {\r\n    let httpParams = this.createRequesParams();\r\n    return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\r\n  }\r\n\r\n  protected createRequesParams(): HttpParams {\r\n    let httpParams = new HttpParams();\r\n\r\n    httpParams = this.addSortRequestParams(httpParams);\r\n    httpParams = this.addFilterRequestParams(httpParams);\r\n    return this.addPagerRequestParams(httpParams);\r\n  }\r\n\r\n  protected addSortRequestParams(httpParams: HttpParams): HttpParams {\r\n    if (this.sortConf) {\r\n      this.sortConf.forEach((fieldConf) => {\r\n        httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\r\n        httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\r\n      });\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n\r\n  protected addFilterRequestParams(httpParams: HttpParams): HttpParams {\r\n\r\n    if (this.filterConf.filters) {\r\n      this.filterConf.filters.forEach((fieldConf: any) => {\r\n        if (fieldConf['search']) {\r\n          httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\r\n        }\r\n      });\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n\r\n  protected addPagerRequestParams(httpParams: HttpParams): HttpParams {\r\n\r\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n      httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\r\n      httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","_c0","_c1"],"mappings":"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"}}}